<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="28">
  <Forms>
    <UDF1 Class="TCEForm" Encoding="Ascii85">y[wH$,cp?$B^^MDCy84pZI)j.0Xeh-Hn,hrU_4(Jl@6,^ELrTdKyI_f,JtFQpqM4?w)EdB!gk)u$34UL2D_Q2MvAgzDWdGDSuc)*TA#k)=.{5n(eI*D;z#LAm[7TjL,E7X?{RS}asuD6)$7Zu2%[PLm447mJ;r!P[0[k=VWZM-x?iNCA;x+w9Wywwjt^I8/TGmsT{S}V*ap.I$(j^=]?VIK!4%Rp8zbnlC{LfHo(_hl6W3:HAeZ@AQ^,b9,e!]0PN/v^ABhyqhDQ#dKW4/Uc_b[D3THV1eTXZ#k9(k+zieMqpHQ/tphv*U(IykeKpM4;)P#*nqb3QBClO$oi2$F}(jIDpZGs7^Xz=Z1[$5vOzbXRQf4uJwMuc^e14Zx[Pn{VM%[xt{*EC4XvkH9LCXA8Eqj.DnbNBRSay(X*a.qWtvLU{^wh470=RsE/,,j-!iO6e^8JCj2(NF*rr)zB$.S,_62{pz{D#6W]?Z_ytV;q;t.8RMd@6a]E#OnIbYbs]7K0-kOrQfw_16IBP),{8][z!q$7r-4t:Pd+tU#uz%v8Q4V.]56d[+-G%D(IhZ26*zu/jd@@HedixeWtW/M@]Z!cfu5P?;0*s?=ycd7_cMGI%:X]BLuOtxG?()eA3a/=R[[dd-@a57l21;6/:npBx^I%1TlmQX8fFiVpX0CP[+s6%r/bDU+3)0z+^*uMSb=@giw]%w5ehm)ou?e@/TAY8N2y1%0M70C2Rx_D7o=51hd=@9:Iz05D:VR6#h;I^9!**Itb97[XS*2O?N;6,vGdw0,+;Qq,{IykqT1O$YVX+NO#fgK!83UgrrI+;paVE2*]k}A*)VHdPMOi?E[aYs{QuE,XmNMVhzIVm5?!I,?%j]Z_Xs)gD?AaB2D?zR^3O%^K89gmW{:?tH#gbS/eKI@*3MVIt4HGN^0=(n}:XO37[Gqn1PHy]5Lz4)F-9WinMxm!+@=2;ETowa.f_gHIMB./5%HM?E@@T:lk[lFy/p:Fcv46U;ro#vNW%5CJ$c7]c!)Le/qF[TBQqdmjTKQt.+k=KzGP%rfFJD%sal+Y=IqH%;VYuZSLknGJeoxk^UkH.wSOAJdjAj9uXh90z{T*#%$yLmloK+3T@,S:i9D.v5cOny@+on8]-7UN+/L#jYdtR7_sJNE_.EadNGcAPdHb+eDP^=5Bkiti5F}(jt]FDZBm_G?TI-+M,;79xeKkuwz6?z.!Y?uEO8{OGuR26fzu-+DgKI*+C(8FdHpa{RlFa?F[!6vSBZsO]h2D+d!?!jHkE5}W{qnybVuZ7as59w]hE03l^vnHy2l:P0fBSo.%PNDZz#:Ix%u]r()OWI7V.aSdQmkda3X$A8(DL=^nVP.3DA49N%OsWO.z?/8R==.u$tM66dfj7at^TKC2[209O%/nNJ(k800,vAcUn:wjdy0)DgC0U6fF;.Am$*+#4Gc{O]d@RW@,_qj,w^24]v:lGVkgN/^y]3ZuZD/h?s]gC@7V@Y%QmJLZ*YB^[OtW=$vjmCc@Q_b]h/aZv#0]X6:IN:_%IgZr_%C$c28Z%YqGzUf%A4iI:o+F=h=gxC[.}0{hVcfcoZ!=}Ag(fs}.Ez.U6//^RXrK86*#r%L:NWRq)+:TSNFaBvTgZmDtv_I095hf]IrcX-HFIJTC!x!2=e?dbXP+Zu[</UDF1>
    <BACForm Class="TCEForm" Encoding="Ascii85">jgrld):ZT#o(Tii^s/u/5QlJp/p3,R.:pyAZqyY*RB9x,rW=1ll+W/ch2^mg?DfOzcpt:;N5OWSG%bzN*7bLNmzi)!,XNt+25,p$zX;o_Tcc}AM=HiKs^I)66Nr^8s^I67gmdkWVthggU1?)6%a3!4aArOml?xl^gv6!i/LnD06cTS/dT2?TI=l-b(]%M{XoGUAdrh+ZxIi3bo#+(Nj56MU(k]U3ysw*CQELJ;Jc[;57qTt(5$^U1WK+vcJBsHYNdk!q;:^gFG$vF94m+Z0Thf(Z0I)S^jOQ?58B-i8s8K]D1k_md;ceJGjpe*3n6S:#oMK]F.4s$co;H8huty*}Wp%6c^ZeY:V{Udz?}T1Vyky)7)k7k?qVU./e)r$2Z:jZ{,H%eI*MI$pJ?xDVr*K$kQ#VUtPn{D7d0.7e:TcfC8MII2MW0AxN2DP3io7@Nq{38R.QxKmtumCnrwz^#6(+4i?z_,zazLkZgw8X8=GqaG2[3YV4/xf!X;f#6x2-ftaZJ0Frjqw$t5j5UDHV@MN;;Mzs;di5+gmC.KBd{?QpxO9x.R3q-BM},6YL2PI/?aW!k#xUnZ75}Wi%hJ:XiuSr(UIMt-#YAv*Z;BoD6O$T-P6U[}kZB.6[zX[[=@8QG(8%p[n?Vr%dz8tKwT3--!r{87*)2o!%8:g7Y!^nuVxnO,3@ixS?3!,txn</BACForm>
    <SessionInfo Class="TCEForm" Encoding="Ascii85">-P,r3.zk$%V8.%zgHg0Ow7Zq6Dpgl%uU5=+w9-oLDv)5plx+mlY%W(:3{J-vP-AvQpQm?d;AUo%()Nz%eS!MG!4SX]h7ikl.F+l*_L32XPbh!9R,LKl;[?#*Iz8iV,q7u6%eZslH2CHvZFt)xxvg]]=wX$VwW=KkNBe3ccgyNtQ}P}GKXz)O=siSZEONI[-HRG]x?MuutbW(^=JMf@?;O:l9M*#P)P1yk;*TW{s$GjYcmAgm;3IG-w,e%o9_mtPlx#+FZ{e[6]aXPhuEcHbZod2hDupxdc(_!L.#$/x3(-!Qi.t!A/M-BSB[A}fU3I-=-![;=(G1/=uKHipqs,WoQ[nX#ABf9H*uz#yzx0UByuPkCem!wX!]mqn+Pla=ov/rjr-o7HT@3ATf7anwggHS9OMVaPDu$oYGI6M[mu:Fg=$MV}vMg4oL1O)]IiAaHJ$L:tq3##sRzJy8jnBu8={KSiH6Khj2cPt9)shg6@LRU4NL3lEqiP4ss4DkYF-KZ^%NA)]^dLj]2Qx?38b!$$:[hJm[x$K_z52:OkQ$v;CDoo/B%=yA+TIUbN_:vJQVsHP@zj^O)_P$A:4)zyhRsn;/{j#)Feoz$O1/10RGL3Wzs6pLee:7M4{)9+kBTpU,U_J$L)Aq}V$}c)J.FLRw.J6dx9iHNIO/Vxn9:ue7$YBj3I5E8/-,iDaT#P*Bv_b*Wp:cC3j?:v%QwjpiOkmYXB%v?O26_ctM[sc($pth[uVMSTrjT^hFPJcEfHosQ,tzLX70[YMEo;J#P[0!$c,.b%zQ/O+!83MK/pk)T:jUo]%][U0v5/vl#];]#j!IhC+%0lw^KS,d^QmM;t+?iha+J6zn*zX;k58n6nuC)(5L_:d?UFD:,C3$=VmZv,am_P=FU]#]O_cQs7t*lFT1=KY(!SW9d7:ld-uh-J$kU^[!#t/bv$S%8@g=evw6-OZ_iw5%_pxcYv!.M(Gyh^PAkk=X@@+?)ZzoMF5jO[Y1pdf4/=@RePdTiA$.v1J@Hod-{beZzCW3@?ZsPxw3[@LFk!/Oe%g,kU_eu^e}g;XolEL8vDlKTN#MYZU8TDdr@{0lhpTpb@Jb!wVi7zWZJC5PVxca#ZDIpN!TdWXm[p+lnF^6{TES9i9ai[@g=J3q,JdN,vg{6OvOvVLU}!@AMl1[NEDO=NSs-fJrB+LBmIb1g1#?u%GGSRDY+];{S(%l%0%6MnY0HANSr(+^7RXr@q_CD5A)jQwmIWEHELeeML9%5+f?Q)eS^8@{7RXu[tjn?c#/Jj1Et_Nx(?An0e:F/Yt^Ueq6yYvhoJ+Jy=m]jn!nAM}igI[U*k[U]p)uCZT**6fa2E:57fN#%rj5H$n7dG#yD*9sg/^-:a?;U{/1Ty%ccJu,3@T%AxB}9NWbVQQ=!u=#E*=Z1l.tj57k7}icj4N9y7f28IxwrnF@fbnixy]JWdyTG1hXhDm[=$PU264GgIOesSu_HCC:-{P!k9)Um[:#BEE2^nlEy4b8*lIhW_16bQOYoj9*ejU_MOBtFpE{zS)J:flz;[Ew3tPrm[?RfMeD+WmccA}qTg:s(27Qfn%3}28+Bad,_4,Pu=UOt.,+4+uo#Q57@j8BSd[({tzK$aj73=D:Q..xg2h.v#aNofIBhJ)!YszpEXHYLF(1MnmSZta8H?2lSd67vj5ESwyaE;EWESHD7UQR7F(1SpmSr*1EEX(O0^</SessionInfo>
    <HelpForm Class="TCEForm" Encoding="Ascii85">g[6N.)=Af0w;Gieq*1%2uPPxfCF,rDYf,@lAr**Ed2Ns5k:8TT=m!wIfv4%4@p#jAfW)R0zpH:$]M:S:OO(b{=ymEy^BXy9C_2OcNxWD=C,WvowgTMsl0GGA#bf%cW=!,DKK+$%yK%Uqys*lx2qcSJ[AU7PhAAvAYBYx,Fl;On(1;8s.ebCt^dO5SILM1S7@GcPr5y#CvUz1_2l{2mzBtAHoxeDp_BNplIN/aqe;L+PB2BH!XaKJ!nhgwGRPZR1czr]n(*#4Qkz!dgiD#G3wtE79L]}Gcq^*9lPY78ZJ}6=_H4:oS5g(QNS?yo[G3YK/)ikgI3,.5$q33.c:oY(Ud/?f/E8c72OD)Z$SZ3FTuZ}+x)V,L{oUTE87?cimN]26B,*-#ejuNi2H!ag!)GKkQc+[GwKaId*WG_LZK{%J92HS4Q9nR.biS,K*]jF2/[yS)Av95?[-%ezSDhxOy+2lG,N4W.tNguz8QojH</HelpForm>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>249</ID>
      <Description>"Custom Weapons-GrandArch_v1.1.9-fix_12-09-18"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
{$asm}
define(BaseA,DarkSoulsIII.exe+4740178)
registerSymbol(BaseA)

define(BaseB,DarkSoulsIII.exe+4768E78)
registerSymbol(BaseB)

define(BaseC,DarkSoulsIII.exe+4743AB0)
registerSymbol(BaseC)

define(BaseD,DarkSoulsIII.exe+4743A80)
registerSymbol(BaseD)

define(BaseE,DarkSoulsIII.exe+473FD08)
registerSymbol(BaseE)

define(BaseF,DarkSoulsIII.exe+473AD78)
registerSymbol(BaseF)

define(BaseZ,DarkSoulsIII.exe+4768F98)
registerSymbol(BaseZ)

define(Param,DarkSoulsIII.exe+4782838)
registerSymbol(Param)

define(GameFlagData,DarkSoulsIII.exe+473BE28)
registerSymbol(GameFlagData)

define(LockBonus_ptr,DarkSoulsIII.exe+4766CA0)
registerSymbol(LockBonus_ptr)

define(DrawNearOnly_ptr,DarkSoulsIII.exe+4766555)
registerSymbol(DrawNearOnly_ptr)

define(debug_flags,DarkSoulsIII.exe+4768F68)
registerSymbol(debug_flags)

define(XA,0x1F90)
registerSymbol(XA)

define(XB,0x1FA0)
registerSymbol(XB)

define(XC,0x950)
registerSymbol(XC)

{$lua}
if syntaxcheck then return end
--Attach to game
OpenProcess("DarkSoulsIII.exe")
function OnlyOneChildActive(parent)
  -----This function makes it so that for its calling script, only one of its child scripts
  -----can be active at a time.
  -----It does this by making it so that, for each child,
  -----when that child is activated, that child deactivates all other children.

  --if this script has children
  if parent.Count then
     --for every child
     for i = 0,parent.Count-1 do
         --set OnActivate for this child
         parent.Child[i].OnActivate = function(this, before, currentstate)
            --if before activated
            if currentstate == false then
               if parent.prevChild then
                  parent.prevChild.Active = false
               end
               parent.prevChild = this
            end --if currentstate == false then
            --allow activation
            return true
         end --end OnActivate

         --set OnDeactivate for this child
         parent.Child[i].OnDeactivate = function(this, before, currentstate)
            --if before deactivated
            if currentstate == false then
               parent.prevChild = nil
            end --if currentstate == false then
            --allow deactivation
            return true
         end --end OnDeactivate
     end --for i = 0,parent.Count-1 do
  end --if parent.Count then
end --function OnlyOneChildActive(parent)


--header stuff
al = getAddressList()

for i=0, component_getComponentCount(al)-1 do
  local c=component_getComponent(al,i)
  local cn=object_getClassName(c)
  if cn=='TTreeviewWithScroll' then
    AddressListTreeview=c
  elseif cn=='THeaderControl' then
    AddressListHeader=c
  end
end

--disable the header click
setMethodProperty(AddressListHeader,"OnSectionClick",nil)

--[[START TGA helpers]]--

-- Disables memrec after specified amount of milliseconds.
-- Accepts id, description or MemoryRecord instance.
-- Examples:
--   disableMemrec(memrec)
--     disable current memrec
--   disableMemrec(13, 1000)
--     disable memrec with ID = 13 in one second
--   luaCall(disableMemrec("Curse Dagger", 500))
--     disable "Curse Dagger" in half a second from ASM script
-- @param memrec MemoryRecord | number | string
-- @param delay, Number, default 100, Milliseconds to wait before disabling
function disableMemrec(memrec, delay)
  -- minimum delay is 0.1 seconds
  delay = math.max(delay or 100, 100)
  local memrecType = type(memrec)
  if memrecType == "userdata" then
    -- noop, we assume it is already MemoryRecord
  elseif memrecType == "string" then
    memrec = getAddressList().getMemoryRecordByDescription(memrec)
  elseif memrecType == "number" then
    memrec = getAddressList().getMemoryRecordById(memrec)
  end
  if not memrec then return end

  local t = createTimer(nil)
  t.interval = delay
  t.onTimer = function(t)
    t.destroy()
    memrec.active = false
  end
end

-- copies Steam profile link to clipboard
-- @param hexId, String, hex representation of profile number
function copySteamProfile(hexId)
  local link = "https://steamcommunity.com/profiles/" .. tonumber(hexId, 16) .. "/"
  writeToClipboard(link)
end

-- opens up "Memory View" window at given address
-- if address is a string it must be registered symbol
-- @param addr, Number | String
function showMemoryViewAtAddress(addr)
  local mvForm = getMemoryViewForm()
  mvForm.Disassemblerview.TopAddress = getAddress(addr)
  mvForm.show()
end

--[[END TGA helpers]]--

--[[START Igromanru's widgets class]]--
-- Class for my UDF's
IgroWidgets = {}

function IgroWidgets:new()
  setmetatable({}, self)
  self.__index = self
  self.addressList = getAddressList()
  return self
end

function IgroWidgets:stringTrim(s)
  return s:gsub("^%s*(.-)%s*$", "%1")
end

function IgroWidgets:isNotEmpty(s)
  return s ~= nil and self:stringTrim(s) ~= ''
end

function IgroWidgets:isEmpty(s)
  return s == nil or self:stringTrim(s) == ''
end

function IgroWidgets:toHex(number)
  return string.format("%X",number)
end

function IgroWidgets:toHexLegth(number, length)
  if length == nil then length = 1 end
  length = length * 2
  return string.format("%0"..length.."X",number)
end

function IgroWidgets:floatToHex(number, length)
  local result = ""
  local byteTable = floatToByteTable(number)

  if length == nil then length = 1 end
  if(length &gt; #byteTable) then
    for i = 1, length-#byteTable do
      result = "00"..result
    end
  end
  for i, v in ipairs(byteTable) do
    result = string.format('%02X', v) .. result
  end
  return result
end

function IgroWidgets:floatToDecimal(number, length)
  return tonumber(self:floatToHex(number,length),16)
end

function IgroWidgets:floatToByteArray(number)
  local result = ""
  local byteTable = floatToByteTable(number)

  for i, v in ipairs(byteTable) do
    if(self:isNotEmpty(result)) then
      result = result .. " "
    end
    result = result .. string.format('%02X', v)
  end

  return result
end

function IgroWidgets:floatToByteArray(number)
  local result = ""
  local byteTable = floatToByteTable(number)

  for i, v in ipairs(byteTable) do
    if(self:isNotEmpty(result)) then
      result = result .. " "
    end
    result = result .. string.format('%02X', v)
  end

  return result
end

function IgroWidgets:decToHex(number, length)
  return self:toHexLegth(number,length)
end

function IgroWidgets:decToByteArray(number, length)
  return self:hexToByteArray(self:toHexLegth(number,length))
end

function IgroWidgets:hexToDecimal(hexString)
  return tonumber(hexString,16)
end

function IgroWidgets:hexToFloat(hexString)
  local byteTable = {}
  for hexChar in string.gmatch(hexString,"(%x%x)") do
    table.insert(byteTable,1,tonumber(hexChar,16))
  end
  return tonumber(string.format("%.2f", byteTableToFloat(byteTable)))
end

function IgroWidgets:hexToByteArray(hex)
  local result = ""
  local index = string.len(hex)-1
  local tmp = ""
  while index ~= nil and index &gt;= 0 do
    tmp = string.sub(hex, index, index+1)
    if igro:isNotEmpty(tmp) then
      if igro:isNotEmpty(result) then
        result = result .. " "
      end
      result = result .. tmp
    else
      break
    end
    index = index - 2
    sleep(1)
  end
  result = string.gsub(result, "%s$", "")
  return result
end

function IgroWidgets:byteArrayToHex(byteArray)
  local result = ""
  local index = 1
  local tmp = ""
  byteArray = string.gsub(byteArray, "%s", "")
  index = string.len(byteArray)-1
  while index ~= nil and index &gt;= 0 do
    tmp = string.sub(byteArray, index, index+1)
    if igro:isNotEmpty(tmp) then
      result = result .. tmp
    else
      break
    end
    index = index - 2
    sleep(1)
  end
  result = string.gsub(result, "%s$", "")
  return result
end

function IgroWidgets:byteArrayToDecimal(byteArray)
  return tonumber(self:byteArrayToHex(byteArray),16)
end

function IgroWidgets:byteArrayToFloat(byteArray)
  return self:hexToFloat(self:byteArrayToHex(byteArray))
end

function IgroWidgets:getRecordById(id)
  return self.addressList.getMemoryRecordByID(id)
end

function IgroWidgets:getRecordByDescription(description)
  return self.addressList.getMemoryRecordByDescription(description)
end

function IgroWidgets:getRecord(index)
  return self.addressList.getMemoryRecord(index)
end

function IgroWidgets:enableRecordById(id)
  local function enableRecord(thread, id)
    local record = self:getRecordById(id)
    if(record ~= nil) then
      sleep(500)
      record.Active = true
    else
      print("Record with ID "..id.." doesn't exists")
    end
  end
  createNativeThread(enableRecord, id)
end

function IgroWidgets:enableByDescription(description)
  local function enableRecord(thread, description)
    local record = self:getRecordByDescription(description)
    if(record ~= nil) then
      sleep(500)
      record.Active = true
    else
      print("Record with Description "..description.." doesn't exists")
    end
  end
  createNativeThread(enableRecord, description)
end

function IgroWidgets:disableRecordById(id)
  local function disableRecord(thread, id)
    local record = self:getRecordById(id)
    if(record ~= nil) then
      sleep(500)
      record.Active = false
    else
      print("Record with ID "..id.." doesn't exists")
    end
  end
  createNativeThread(disableRecord, id)
end

function IgroWidgets:disableByDescription(description)
  local function disableRecord(thread, description)
    local record = self:getRecordByDescription(description)
    if(record ~= nil) then
      sleep(500)
      record.Active = false
    else
      print("Record with Description "..description.." doesn't exists")
    end
  end
  createNativeThread(disableRecord, description)
end

-- Creating an instance of IgroWidgets
igro = IgroWidgets:new()
--[[END Igromanru's widgets class]]--
---------------------------------------------------

function ItemIDWrite(value)
  local bytes = dwordToByteTable(value)
  return bytes[1],bytes[2],bytes[3],bAnd(bytes[4],0xF)
end

function ArmorIDRead(b1,b2,b3,b4)
  return byteTableToDword({b1,b2,b3,bXor(b4,0x10)})
end

function RingIDRead(b1,b2,b3,b4)
  return byteTableToDword({b1,b2,b3,0x20})
end

function SpellAndGoodsIDRead(b1,b2,b3,b4)
  return byteTableToDword({b1,b2,b3,0x40})
end

registerCustomTypeLua("Armor ID",4,ArmorIDRead,ItemIDWrite,false)
registerCustomTypeLua("Ring ID",4,RingIDRead,ItemIDWrite,false)
registerCustomTypeLua("Spell and Goods ID",4,SpellAndGoodsIDRead,ItemIDWrite,false)

CheatTable = getAddressList()

WeaponIDCheatTable = {72368,87001,86778,86779,86780,86781,86782,86777,86834,86835,86836,86831,86832,86833,86898,86899,86900,86895,86896,86897,86948,86949,86950,86951,86952,86953,87002,87003,87004,87005,87006,80862,80863,80864,80865,80866,80861,86394,86389,86390,86391,86392,86393,80926,80927,80928,80929,80930,80925,80962,80957,80958,80959,80960,80961,80990,80991,80992,80993,80994,80989,90333,90335,90337,90332,90334,90336}
RingIDCheatTable = {72368,86786,86783,86784,86785,86838,86839,86840,86837,86902,86903,86904,86901,86946,86947,86956,86957,86955,86954,87008,87009,80870,80867,80868,80869,86386,86387,86388,86397,86398,86396,86395,80933,80954,80955,80956,80965,80966,80964,80963,80997,72470,72471,72472,72469,90327,90328,90329,90330}
ArmorIDCheatTable = {72368,86997,86998,86999,87000,80857,80858,80859,80860,86385,86386,86387,86388,80921,80922,80923,80924,80953,80954,80955,80956,80985,80986,80987,80988,90341,90342,90343,90344,86773,86774,86775,86776,86827,86828,86829,86830,86891,86892,86893,86894,86944,86945,87010,87007,86997,86998,86999,87000,80857,80858,80859,80860,86385,80934,80931,80932,80921,80922,80923,80924,80953,80998,80995,80996,80985,80986,80987,80988}
GoodsIDCheatTable = {72368}
SpellIDCheatTable = {72368,74004,74026,74029,74028,74031,74030,74032,74019,74021,74020,74023,74022,74025,74024,74027}

function DropdownAdder(ItemIds, CheatIDs)
  for k,v in pairs(CheatIDs) do
    local record = CheatTable.getMemoryRecordByID(v)
    if record ~= nil then
      record.DropDownList.Text = record.DropDownList.Text..ItemIds
      record.DisplayAsDropDownListItem = true
      record.DropDownDescriptionOnly = true
    end
  end
end

function DropdownRemover(CheatIDs)
  for k,v in pairs(CheatIDs) do
    local record = CheatTable.getMemoryRecordByID(v)
    if record ~= nil then
      record.DropDownList.Text = nil
      record.DisplayAsDropDownListItem = false
      record.DropDownDescriptionOnly = false
    end
  end
end

-- Adder
function WeaponDropdownAdder()
  DropdownAdder(WeaponDropDownList, WeaponIDCheatTable)
end

function RingDropdownAdder()
  DropdownAdder(RingDropDownList, RingIDCheatTable)
end

function ArmorDropdownAdder()
  DropdownAdder(ArmorDropDownList, ArmorIDCheatTable)
end

function GoodsDropdownAdder()
  DropdownAdder(GoodsDropDownList, GoodsIDCheatTable)
end

function SpellDropdownAdder()
  DropdownAdder(SpellDropDownList, SpellIDCheatTable)
end

-- Remover
function WeaponDropdownRemover()
  DropdownRemover(WeaponIDCheatTable)
end

function RingDropdownRemover()
  DropdownRemover(RingIDCheatTable)
end

function ArmorDropdownRemover()
  DropdownRemover(ArmorIDCheatTable)
end

function GoodsDropdownRemover()
  DropdownRemover(GoodsIDCheatTable)
end

function SpellDropdownRemover()
  DropdownRemover(SpellIDCheatTable)
end

function AllDropdownAdder()
  WeaponDropdownAdder()
  RingDropdownAdder()
  ArmorDropdownAdder()
  GoodsDropdownAdder()
  SpellDropdownAdder()
end

function AllDropdownRemover()
  WeaponDropdownRemover()
  RingDropdownRemover()
  ArmorDropdownRemover()
  GoodsDropdownRemover()
  SpellDropdownRemover()
end

WeaponDropDownList = [[0:--Weapon List:
00015F90:Torch
0001ADB0:Fists
00061A80:Standard Arrow
00061AE4:Fire Arrow
00061B48:Poison Arrow
00061BAC:Large Arrow
00061C10:Feather Arrow
00061C74:Moonlight Arrow
00061CD8:Wood Arrow
00061D3C:Dark Arrow
00062250:Dragonslayer Greatarrow
00062318:Dragonslayer Lightning Arrow
0006237C:Onislayer Greatarrow
000623E0:Millwood Greatarrow
00062A20:Standard Bolt
00062A84:Heavy Bolt
00062AE8:Sniper Bolt
00062B4C:Wood Bolt
00062BB0:Lightning Bolt
00062C14:Splintering Bolt
00062C78:Exploding Bolt
000F4240:Dagger
000F42A4:Heavy Dagger
000F4308:Sharp Dagger
000F436C:Refined Dagger
000F43D0:Simple Dagger
000F4434:Crystal Dagger
000F4498:Fire Dagger
000F44FC:Chaos Dagger
000F4560:Lightning Dagger
000F45C4:Deep Dagger
000F4628:Dark Dagger
000F468C:Poison Dagger
000F46F0:Blood Dagger
000F4754:Raw Dagger
000F47B8:Blessed Dagger
000F481C:Hollow Dagger
000F6950:Bandit's Knife
000F69B4:Heavy Bandit's Knife
000F6A18:Sharp Bandit's Knife
000F6A7C:Refined Bandit's Knife
000F6AE0:Simple Bandit's Knife
000F6B44:Crystal Bandit's Knife
000F6BA8:Fire Bandit's Knife
000F6C0C:Chaos Bandit's Knife
000F6C70:Lightning Bandit's Knife
000F6CD4:Deep Bandit's Knife
000F6D38:Dark Bandit's Knife
000F6D9C:Poison Bandit's Knife
000F6E00:Blood Bandit's Knife
000F6E64:Raw Bandit's Knife
000F6EC8:Blessed Bandit's Knife
000F6F2C:Hollow Bandit's Knife
000F9060:Parrying Dagger
000F90C4:Heavy Parrying Dagger
000F9128:Sharp Parrying Dagger
000F918C:Refined Parrying Dagger
000F91F0:Simple Parrying Dagger
000F9254:Crystal Parrying Dagger
000F92B8:Fire Parrying Dagger
000F931C:Chaos Parrying Dagger
000F9380:Lightning Parrying Dagger
000F93E4:Deep Parrying Dagger
000F9448:Dark Parrying Dagger
000F94AC:Poison Parrying Dagger
000F9510:Blood Parrying Dagger
000F9574:Raw Parrying Dagger
000F95D8:Blessed Parrying Dagger
000F963C:Hollow Parrying Dagger
000FDE80:Rotten Ghru Dagger
000FDEE4:Heavy Rotten Ghru Dagger
000FDF48:Sharp Rotten Ghru Dagger
000FDFAC:Refined Rotten Ghru Dagger
000FE010:Simple Rotten Ghru Dagger
000FE074:Crystal Rotten Ghru Dagger
000FE0D8:Fire Rotten Ghru Dagger
000FE13C:Chaos Rotten Ghru Dagger
000FE1A0:Lightning Rotten Ghru Dagger
000FE204:Deep Rotten Ghru Dagger
000FE268:Dark Rotten Ghru Dagger
000FE2CC:Poison Rotten Ghru Dagger
000FE330:Blood Rotten Ghru Dagger
000FE394:Raw Rotten Ghru Dagger
000FE3F8:Blessed Rotten Ghru Dagger
000FE45C:Hollow Rotten Ghru Dagger
00100590:Blood-stained Short Sword
001005F4:Heavy Blood-stained Short Sword
00100658:Sharp Blood-stained Short Sword
001006BC:Refined Blood-stained Short Sword
00100720:Simpleton Blood-stained Short Sword
00100784:Crystal Blood-stained Short Sword
001007E8:Fire Blood-stained Short Sword
0010084C:Chaos Blood-stained Short Sword
001008B0:Lightning Blood-stained Short Sword
00100914:Deep Blood-stained Short Sword
00100978:Dark Blood-stained Short Sword
001009DC:Poison Blood-stained Short Sword
00100A40:Blood Blood-stained Short Sword
00100AA4:Raw Blood-stained Short Sword
00100B08:Blessed Blood-stained Short Sword
00100B6C:Hollow Blood-stained Short Sword
00102CA0:Harpe
00102D04:Heavy Harpe
00102D68:Sharp Harpe
00102DCC:Refined Harpe
00102E30:Simple Harpe
00102E94:Crystal Harpe
00102EF8:Fire Harpe
00102F5C:Chaos Harpe
00102FC0:Lightning Harpe
00103024:Deep Harpe
00103088:Dark Harpe
001030EC:Poison Harpe
00103150:Blood Harpe
001031B4:Raw Harpe
00103218:Blessed Harpe
0010327C:Hollow Harpe
001053B0:Scholar's Candlestick
00105414:Heavy Dripping Candle Stick
00105478:Sharp Dripping Candle Stick
001054DC:Refined Dripping Candle Stick
00105540:Simpleton Dripping Candle Stick
001055A4:Crystal Dripping Candle Stick
00105608:Fire Dripping Candle Stick
0010566C:Chaos Dripping Candle Stick
001056D0:Lightning Dripping Candle Stick
00105734:Deep Dripping Candle Stick
00105798:Dark Dripping Candle Stick
001057FC:Poison Dripping Candle Stick
00105860:Blood Dripping Candle Stick
001058C4:Raw Dripping Candle Stick
00105928:Blessed Dripping Candle Stick
0010598C:Hollow Dripping Candle Stick
00107AC0:Tailbone Short Sword
00107B24:Heavy Tailbone Short Sword
00107B88:Sharp Tailbone Short Sword
00107BEC:Refined Tailbone Short Sword
00107C50:Simple Tailbone Short Sword
00107CB4:Crystal Tailbone Short Sword
00107D18:Fire Tailbone Short Sword
00107D7C:Chaos Tailbone Short Sword
00107DE0:Lightning Tailbone Short Sword
00107E44:Deep Tailbone Short Sword
00107EA8:Dark Tailbone Short Sword
00107F0C:Poison Tailbone Short Sword
00107F70:Blood Tailbone Short Sword
00107FD4:Raw Tailbone Short Sword
00108038:Blessed Tailbone Short Sword
0010809C:Hollow Tailbone Short Sword
0010A1D0:Corvian Greatknife
0010A234:Heavy Corvian Greatknife
0010A298:Sharp Corvian Greatknife
0010A2FC:Refined Corvian Greatknife
0010A360:Simple Corvian Greatknife
0010A3C4:Crystal Corvian Greatknife
0010A428:Fire Corvian Greatknife
0010A48C:Chaos Corvian Greatknife
0010A4F0:Lightning Corvian Greatknife
0010A554:Deep Corvian Greatknife
0010A5B8:Dark Corvian Greatknife
0010A61C:Poison Corvian Greatknife
0010A680:Blood Corvian Greatknife
0010A6E4:Raw Corvian Greatknife
0010A748:Blessed Corvian Greatknife
0010A7AC:Hollow Corvian Greatknife
00111700:Handmaid's Dagger
00116520:Aquamarine Dagger
00118C30:Murky Hand Scythe
001E8480:Shortsword
001E84E4:Heavy Shortsword
001E8548:Sharp Shortsword
001E85AC:Refined Shortsword
001E8610:Simple Shortsword
001E8674:Crystal Shortsword
001E86D8:Fire Shortsword
001E873C:Chaos Shortsword
001E87A0:Lightning Shortsword
001E8804:Deep Shortsword
001E8868:Dark Shortsword
001E88CC:Poison Shortsword
001E8930:Blood Shortsword
001E8994:Raw Shortsword
001E89F8:Blessed Shortsword
001E8A5C:Hollow Shortsword
001EAB90:Long Sword
001EABF4:Heavy Longsword
001EAC58:Sharp Longsword
001EACBC:Refined Longsword
001EAD20:Simple Longsword
001EAD84:Crystal Longsword
001EADE8:Fire Longsword
001EAE4C:Chaos Longsword
001EAEB0:Lightning Longsword
001EAF14:Deep Longsword
001EAF78:Dark Longsword
001EAFDC:Poison Longsword
001EB040:Blood Longsword
001EB0A4:Raw Longsword
001EB108:Blessed Longsword
001EB16C:Hollow Longsword
001ED2A0:Broadsword
001ED304:Heavy Broadsword
001ED368:Sharp Broadsword
001ED3CC:Refined Broadsword
001ED430:Simple Broadsword
001ED494:Crystal Broadsword
001ED4F8:Fire Broadsword
001ED55C:Chaos Broadsword
001ED5C0:Lightning Broadsword
001ED624:Deep Broadsword
001ED688:Dark Broadsword
001ED6EC:Poison Broadsword
001ED750:Blood Broadsword
001ED7B4:Raw Broadsword
001ED818:Blessed Broadsword
001ED87C:Hollow Broadsword
001EF9B0:Broken Straight Sword
001EFA14:Broken Heavy Straight Sword
001EFA78:Broken Sharp Straight Sword
001EFADC:Broken Refined Straight Sword
001EFB40:Broken Simple Straight Sword
001EFBA4:Broken Crystal Straight Sword
001EFC08:Broken Fire Straight Sword
001EFC6C:Broken Chaos Straight Sword
001EFCD0:Broken Lightning Straight Sword
001EFD34:Broken Deep Straight Sword
001EFD98:Broken Dark Straight Sword
001EFDFC:Broken Poison Straight Sword
001EFE60:Broken Blood Straight Sword
001EFEC4:Broken Raw Straight Sword
001EFF28:Broken Blessed Straight Sword
001EFF8C:Broken Hollow Straight Sword
001F6EE0:Lothric Knight Sword
001F6F44:Heavy Lothric Sword
001F6FA8:Sharp Lothric Sword
001F700C:Refined Lothric Sword
001F7070:Simple Lothric Sword
001F70D4:Crystal Lothric Sword
001F7138:Fire Lothric Sword
001F719C:Chaos Lothric Sword
001F7200:Lightning Lothric Sword
001F7264:Deep Lothric Sword
001F72C8:Dark Lothric Sword
001F732C:Poison Lothric Sword
001F7390:Blood Lothric Sword
001F73F4:Raw Lothric Sword
001F7458:Blessed Lothric Sword
001F74BC:Hollow Lothric Sword
00203230:Sunlight Straight Sword
00203294:Heavy Sunlight Straight Sword
002032F8:Sharp Sunlight Straight Sword
0020335C:Refined Sunlight Straight Sword
002033C0:Simpleton Sunlight Straight Sword
00203424:Crystal Sunlight Straight Sword
00203488:Fire Sunlight Straight Sword
002034EC:Chaos Sunlight Straight Sword
00203550:Lightning Sunlight Straight Sword
002035B4:Deep Sunlight Straight Sword
00203618:Dark Sunlight Straight Sword
0020367C:Poison Sunlight Straight Sword
002036E0:Blood Sunlight Straight Sword
00203744:Raw Sunlight Straight Sword
002037A8:Blessed Sunlight Straight Sword
0020380C:Hollow Sunlight Straight Sword
00205940:Rotten Ghru Curved Sword
002059A4:Heavy Rotten Ghru Sword
00205A08:Sharp Rotten Ghru Sword
00205A6C:Refined Rotten Ghru Sword
00205AD0:Simple Rotten Ghru Sword
00205B34:Crystal Rotten Ghru Sword
00205B98:Fire Rotten Ghru Sword
00205BFC:Chaos Rotten Ghru Sword
00205C60:Lightning Rotten Ghru Sword
00205CC4:Deep Rotten Ghru Sword
00205D28:Dark Rotten Ghru Sword
00205D8C:Poison Rotten Ghru Sword
00205DF0:Blood Rotten Ghru Sword
00205E54:Raw Rotten Ghru Sword
00205EB8:Blessed Rotten Ghru Sword
00205F1C:Hollow Rotten Ghru Sword
0020A760:Irithyll Straight Sword
0020F580:Cleric's Candlestick
002143A0:Morion Blade
002191C0:Astora Straight Sword
00219224:Heavy Astora Sword
00219288:Sharp Astora Sword
002192EC:Refined Astora Sword
00219350:Simple Astora Sword
002193B4:Crystal Astora Sword
00219418:Fire Astora Sword
0021947C:Chaos Astora Sword
002194E0:Lightning Astora Sword
00219544:Deep Astora Sword
002195A8:Dark Astora Sword
0021960C:Poison Astora Sword
00219670:Blood Astora Sword
002196D4:Raw Astora Sword
00219738:Blessed Astora Sword
0021979C:Hollow Astora Sword
0021B8D0:Barbed Straight Sword
0021B934:Heavy Barbed Sword
0021B998:Sharp Barbed Sword
0021B9FC:Refined Barbed Sword
0021BA60:Simple Barbed Sword
0021BAC4:Crystal Barbed Sword
0021BB28:Fire Barbed Sword
0021BB8C:Chaos Barbed Sword
0021BBF0:Lightning Barbed Sword
0021BC54:Deep Barbed Sword
0021BCB8:Dark Barbed Sword
0021BD1C:Poison Barbed Sword
0021BD80:Blood Barbed Sword
0021BDE4:Raw Barbed Sword
0021BE48:Blessed Barbed Sword
0021BEAC:Hollow Barbed Sword
0021DFE0:Executioner's Greatsword
0021E044:Heavy Executioner's Straight Sword
0021E0A8:Sharp Executioner's Straight Sword
0021E10C:Refined Executioner's Straight Sword
0021E170:Simpleton Executioner's Straight Sword
0021E1D4:Crystal Executioner's Straight Sword
0021E238:Fire Executioner's Straight Sword
0021E29C:Chaos Executioner's Straight Sword
0021E300:Lightning Executioner's Straight Sword
0021E364:Deep Executioner's Straight Sword
0021E3C8:Dark Executioner's Straight Sword
0021E42C:Poison Executioner's Straight Sword
0021E490:Blood Executioner's Straight Sword
0021E4F4:Raw Executioner's Straight Sword
0021E558:Blessed Executioner's Straight Sword
0021E5BC:Hollow Executioner's Straight Sword
002206F0:Anri's Straight Sword
00222E00:Onyx Blade
00225510:Ringed Knight Straight Sword
00227C20:Gael Greatsword
002DC6C0:Estoc
002DC724:Heavy Estoc
002DC788:Sharp Estoc
002DC7EC:Refined Estoc
002DC850:Simple Estoc
002DC8B4:Crystal Estoc
002DC918:Fire Estoc
002DC97C:Chaos Estoc
002DC9E0:Lightning Estoc
002DCA44:Deep Estoc
002DCAA8:Dark Estoc
002DCB0C:Poison Estoc
002DCB70:Blood Estoc
002DCBD4:Raw Estoc
002DCC38:Blessed Estoc
002DCC9C:Hollow Estoc
002DEDD0:Mail Breaker
002DEE34:Heavy Mail Breaker
002DEE98:Sharp Mail Breaker
002DEEFC:Refined Mail Breaker
002DEF60:Simple Mail Breaker
002DEFC4:Crystal Mail Breaker
002DF028:Fire Mail Breaker
002DF08C:Chaos Mail Breaker
002DF0F0:Lightning Mail Breaker
002DF154:Deep Mail Breaker
002DF1B8:Dark Mail Breaker
002DF21C:Poison Mail Breaker
002DF280:Blood Mail Breaker
002DF2E4:Raw Mail Breaker
002DF348:Blessed Mail Breaker
002DF3AC:Hollow Mail Breaker
002E14E0:Rapier
002E1544:Heavy Rapier
002E15A8:Sharp Rapier
002E160C:Refined Rapier
002E1670:Simple Rapier
002E16D4:Crystal Rapier
002E1738:Fire Rapier
002E179C:Chaos Rapier
002E1800:Lightning Rapier
002E1864:Deep Rapier
002E18C8:Dark Rapier
002E192C:Poison Rapier
002E1990:Blood Rapier
002E19F4:Raw Rapier
002E1A58:Blessed Rapier
002E1ABC:Hollow Rapier
002E3BF0:Ricard's Rapier
002E3C54:Ricard's Heavy Rapier
002E3CB8:Ricard's Sharp Rapier
002E3D1C:Ricard's Refined Rapier
002E3D80:Ricard's Simple Rapier
002E3DE4:Ricard's Crystal Rapier
002E3E48:Ricard's Fire Rapier
002E3EAC:Ricard's Chaos Rapier
002E3F10:Ricard's Lightning Rapier
002E3F74:Ricard's Deep Rapier
002E3FD8:Ricard's Dark Rapier
002E403C:Ricard's Poison Rapier
002E40A0:Ricard's Blood Rapier
002E4104:Ricard's Raw Rapier
002E4168:Ricard's Blessed Rapier
002E41CC:Ricard's Hollow Rapier
002E6300:Crystal Sage's Rapier
002E6364:Heavy Crystal Rapier
002E63C8:Sharp Crystal Rapier
002E642C:Refined Crystal Rapier
002E6490:Simple Crystal Rapier
002E64F4:Reinforced Crystal Rapier
002E6558:Fire Crystal Rapier
002E65BC:Chaos Crystal Rapier
002E6620:Lightning Crystal Rapier
002E6684:Deep Crystal Rapier
002E66E8:Dark Crystal Rapier
002E674C:Poison Crystal Rapier
002E67B0:Blood Crystal Rapier
002E6814:Raw Crystal Rapier
002E6878:Blessed Crystal Rapier
002E68DC:Hollow Crystal Rapier
002E8A10:Irithyll Rapier
003D3010:Shotel
003D3074:Heavy Shotel
003D30D8:Sharp Shotel
003D313C:Refined Shotel
003D31A0:Simple Shotel
003D3204:Crystal Shotel
003D3268:Fire Shotel
003D32CC:Chaos Shotel
003D3330:Lightning Shotel
003D3394:Deep Shotel
003D33F8:Dark Shotel
003D345C:Poison Shotel
003D34C0:Blood Shotel
003D3524:Raw Shotel
003D3588:Blessed Shotel
003D35EC:Hollow Shotel
003D7E30:Scimitar
003D7E94:Heavy Scimitar
003D7EF8:Sharp Scimitar
003D7F5C:Refined Scimitar
003D7FC0:Simple Scimitar
003D8024:Crystal Scimitar
003D8088:Fire Scimitar
003D80EC:Chaos Scimitar
003D8150:Lightning Scimitar
003D81B4:Deep Scimitar
003D8218:Dark Scimitar
003D827C:Poison Scimitar
003D82E0:Blood Scimitar
003D8344:Raw Scimitar
003D83A8:Blessed Scimitar
003D840C:Hollow Scimitar
003DA540:Falchion
003DA5A4:Heavy Falchion
003DA608:Sharp Falchion
003DA66C:Refined Falchion
003DA6D0:Simple Falchion
003DA734:Crystal Falchion
003DA798:Fire Falchion
003DA7FC:Chaos Falchion
003DA860:Lightning Falchion
003DA8C4:Deep Falchion
003DA928:Dark Falchion
003DA98C:Poison Falchion
003DA9F0:Blood Falchion
003DAA54:Raw Falchion
003DAAB8:Blessed Falchion
003DAB1C:Hollow Falchion
003DCC50:Carthus Curved Sword
003DCCB4:Heavy Carthus Sword
003DCD18:Sharp Carthus Sword
003DCD7C:Refined Carthus Sword
003DCDE0:Simple Carthus Sword
003DCE44:Crystal Carthus Sword
003DCEA8:Fire Carthus Sword
003DCF0C:Chaos Carthus Sword
003DCF70:Lightning Carthus Sword
003DCFD4:Deep Carthus Sword
003DD038:Dark Carthus Sword
003DD09C:Poison Carthus Sword
003DD100:Blood Carthus Sword
003DD164:Raw Carthus Sword
003DD1C8:Blessed Carthus Sword
003DD22C:Hollow Carthus Sword
003DF360:Carthus Curved Greatsword
003DF3C4:Heavy Carthus Greatsword
003DF428:Sharp Carthus Greatsword
003DF48C:Refined Carthus Greatsword
003DF4F0:Simple Carthus Greatsword
003DF554:Crystal Carthus Greatsword
003DF5B8:Fire Carthus Greatsword
003DF61C:Chaos Carthus Greatsword
003DF680:Lightning Carthus Greatsword
003DF6E4:Deep Carthus Greatsword
003DF748:Dark Carthus Greatsword
003DF7AC:Poison Carthus Greatsword
003DF810:Blood Carthus Greatsword
003DF874:Raw Carthus Greatsword
003DF8D8:Blessed Carthus Greatsword
003DF93C:Hollow Carthus Greatsword
003E1A70:Pontiff Knight Curved Sword
003E4180:Storm Curved Sword
003E6890:Painting Guardian's Curved Sword
003E68F4:Painting Guardian's Heavy Sword
003E6958:Painting Guardian's Sharp Sword
003E69BC:Painting Guardian's Refined Sword
003E6A20:Painting Guardian's Simple Sword
003E6A84:Painting Guardian's Crystal Sword
003E6AE8:Painting Guardian's Fire Sword
003E6B4C:Painting Guardian's Chaos Sword
003E6BB0:Painting Guardian's Lightning Sword
003E6C14:Painting Guardian's Deep Sword
003E6C78:Painting Guardian's Dark Sword
003E6CDC:Painting Guardian's Poison Sword
003E6D40:Painting Guardian's Blood Sword
003E6DA4:Painting Guardian's Raw Sword
003E6E08:Painting Guardian's Blessed Sword
003E6E6C:Painting Guardian's Hollow Sword
003E8FA0:Crescent Moon Sword
003EB6B0:Carthus Shotel
003EB714:Heavy Carthus Shotel
003EB778:Sharp Carthus Shotel
003EB7DC:Refined Carthus Shotel
003EB840:Simple Carthus Shotel
003EB8A4:Crystal Carthus Shotel
003EB908:Fire Carthus Shotel
003EB96C:Chaos Carthus Shotel
003EB9D0:Lightning Carthus Shotel
003EBA34:Deep Carthus Shotel
003EBA98:Dark Carthus Shotel
003EBAFC:Poison Carthus Shotel
003EBB60:Blood Carthus Shotel
003EBBC4:Raw Carthus Shotel
003EBC28:Blessed Carthus Shotel
003EBC8C:Hollow Carthus Shotel
003EDDC0:Follower Sabre
003F04D0:Demon Scar
004C4B40:Uchigatana
004C4BA4:Heavy Uchigatana
004C4C08:Sharp Uchigatana
004C4C6C:Refined Uchigatana
004C4CD0:Simple Uchigatana
004C4D34:Crystal Uchigatana
004C4D98:Fire Uchigatana
004C4DFC:Chaos Uchigatana
004C4E60:Lightning Uchigatana
004C4EC4:Deep Uchigatana
004C4F28:Dark Uchigatana
004C4F8C:Poison Uchigatana
004C4FF0:Blood Uchigatana
004C5054:Raw Uchigatana
004C50B8:Blessed Uchigatana
004C511C:Hollow Uchigatana
004C7250:Washing Pole
004C72B4:Heavy Washing Pole
004C7318:Sharp Washing Pole
004C737C:Refined Washing Pole
004C73E0:Simple Washing Pole
004C7444:Crystal Washing Pole
004C74A8:Fire Washing Pole
004C750C:Chaos Washing Pole
004C7570:Lightning Washing Pole
004C75D4:Deep Washing Pole
004C7638:Dark Washing Pole
004C769C:Poison Washing Pole
004C7700:Blood Washing Pole
004C7764:Raw Washing Pole
004C77C8:Blessed Washing Pole
004C782C:Hollow Washing Pole
004C9960:Chaos Blade
004CC070:Black Blade
004CC0D4:Heavy Black Blade
004CC138:Sharp Black Blade
004CC19C:Refined Black Blade
004CC200:Simple Black Blade
004CC264:Crystal Black Blade
004CC2C8:Fire Black Blade
004CC32C:Chaos Black Blade
004CC390:Lightning Black Blade
004CC3F4:Deep Black Blade
004CC458:Dark Black Blade
004CC4BC:Poison Black Blade
004CC520:Blood Black Blade
004CC584:Raw Black Blade
004CC5E8:Blessed Black Blade
004CC64C:Hollow Black Blade
004CE780:Bloodlust
004D0E90:Darkdrift
004D35A0:Frayed Blade
005B8D80:Bastard Sword
005B8DE4:Heavy Bastard Sword
005B8E48:Sharp Bastard Sword
005B8EAC:Refined Bastard Sword
005B8F10:Simple Bastard Sword
005B8F74:Crystal Bastard Sword
005B8FD8:Fire Bastard Sword
005B903C:Chaos Bastard Sword
005B90A0:Lightning Bastard Sword
005B9104:Deep Bastard Sword
005B9168:Dark Bastard Sword
005B91CC:Poison Bastard Sword
005B9230:Blood Bastard Sword
005B9294:Raw Bastard Sword
005B92F8:Blessed Bastard Sword
005B935C:Hollow Bastard Sword
005BDBA0:Claymore
005BDC04:Heavy Claymore
005BDC68:Sharp Claymore
005BDCCC:Refined Claymore
005BDD30:Simple Claymore
005BDD94:Crystal Claymore
005BDDF8:Fire Claymore
005BDE5C:Chaos Claymore
005BDEC0:Lightning Claymore
005BDF24:Deep Claymore
005BDF88:Dark Claymore
005BDFEC:Poison Claymore
005BE050:Blood Claymore
005BE0B4:Raw Claymore
005BE118:Blessed Claymore
005BE17C:Hollow Claymore
005C29C0:Zweihander
005C2A24:Heavy Zweihander
005C2A88:Sharp Zweihander
005C2AEC:Refined Zweihander
005C2B50:Simple Zweihander
005C2BB4:Crystal Zweihander
005C2C18:Fire Zweihander
005C2C7C:Chaos Zweihander
005C2CE0:Lightning Zweihander
005C2D44:Deep Zweihander
005C2DA8:Dark Zweihander
005C2E0C:Poison Zweihander
005C2E70:Blood Zweihander
005C2ED4:Raw Zweihander
005C2F38:Blessed Zweihander
005C2F9C:Hollow Zweihander
005C50D0:Greatsword
005C5134:Heavy Greatsword
005C5198:Sharp Greatsword
005C51FC:Refined Greatsword
005C5260:Simple Greatsword
005C52C4:Crystal Greatsword
005C5328:Fire Greatsword
005C538C:Chaos Greatsword
005C53F0:Lightning Greatsword
005C5454:Deep Greatsword
005C54B8:Dark Greatsword
005C551C:Poison Greatsword
005C5580:Blood Greatsword
005C55E4:Raw Greatsword
005C5648:Blessed Greatsword
005C56AC:Hollow Greatsword
005C9EF0:Astora Greatsword
005C9F54:Heavy Astora Greatsword
005C9FB8:Sharp Astora Greatsword
005CA01C:Refined Astora Greatsword
005CA080:Simple Astora Greatsword
005CA0E4:Crystal Astora Greatsword
005CA148:Fire Astora Greatsword
005CA1AC:Chaos Astora Greatsword
005CA210:Lightning Astora Greatsword
005CA274:Deep Astora Greatsword
005CA2D8:Dark Astora Greatsword
005CA33C:Poison Astora Greatsword
005CA3A0:Blood Astora Greatsword
005CA404:Raw Astora Greatsword
005CA468:Blessed Astora Greatsword
005CA4CC:Hollow Astora Greatsword
005CC600:Murakumo
005CC664:Heavy Murakumo
005CC6C8:Sharp Murakumo
005CC72C:Refined Murakumo
005CC790:Simple Murakumo
005CC7F4:Crystal Murakumo
005CC858:Fire Murakumo
005CC8BC:Chaos Murakumo
005CC920:Lightning Murakumo
005CC984:Deep Murakumo
005CC9E8:Dark Murakumo
005CCA4C:Poison Murakumo
005CCAB0:Blood Murakumo
005CCB14:Raw Murakumo
005CCB78:Blessed Murakumo
005CCBDC:Hollow Murakumo
005D1420:Lothric Knight Greatsword
005D1484:Heavy Lothric Greatsword
005D14E8:Sharp Lothric Greatsword
005D154C:Refined Lothric Greatsword
005D15B0:Simple Lothric Greatsword
005D1614:Crystal Lothric Greatsword
005D1678:Fire Lothric Greatsword
005D16DC:Chaos Lothric Greatsword
005D1740:Lightning Lothric Greatsword
005D17A4:Deep Lothric Greatsword
005D1808:Dark Lothric Greatsword
005D186C:Poison Lothric Greatsword
005D18D0:Blood Lothric Greatsword
005D1934:Raw Lothric Greatsword
005D1998:Blessed Lothric Greatsword
005D19FC:Hollow Lothric Greatsword
005D8950:Black Knight Greatsword
005D89B4:Heavy Black Knight Greatsword
005D8A18:Sharp Black Knight Greatsword
005D8A7C:Refined Black Knight Greatsword
005D8AE0:Simple Black Knight Greatsword
005D8B44:Crystal Black Knight Greatsword
005D8BA8:Fire Black Knight Greatsword
005D8C0C:Chaos Black Knight Greatsword
005D8C70:Lightning Black Knight Greatsword
005D8CD4:Deep Black Knight Greatsword
005D8D38:Dark Black Knight Greatsword
005D8D9C:Poison Black Knight Greatsword
005D8E00:Blood Black Knight Greatsword
005D8E64:Raw Black Knight Greatsword
005D8EC8:Blessed Black Knight Greatsword
005D8F2C:Hollow Black Knight Greatsword
005DB060:Flamberge
005DB0C4:Heavy Flamberge
005DB128:Sharp Flamberge
005DB18C:Refined Flamberge
005DB1F0:Simple Flamberge
005DB254:Crystal Flamberge
005DB2B8:Fire Flamberge
005DB31C:Chaos Flamberge
005DB380:Lightning Flamberge
005DB3E4:Deep Flamberge
005DB448:Dark Flamberge
005DB4AC:Poison Flamberge
005DB510:Blood Flamberge
005DB574:Raw Flamberge
005DB5D8:Blessed Flamberge
005DB63C:Hollow Flamberge
005DD770:Exile Greatsword
005DD7D4:Heavy Exile Greatsword
005DD838:Sharp Exile Greatsword
005DD89C:Refined Exile Greatsword
005DD900:Simple Exile Greatsword
005DD964:Crystal Exile Greatsword
005DD9C8:Fire Exile Greatsword
005DDA2C:Chaos Exile Greatsword
005DDA90:Lightning Exile Greatsword
005DDAF4:Deep Exile Greatsword
005DDB58:Dark Exile Greatsword
005DDBBC:Poison Exile Greatsword
005DDC20:Blood Exile Greatsword
005DDC84:Raw Exile Greatsword
005DDCE8:Blessed Exile Greatsword
005DDD4C:Hollow Exile Greatsword
005E2590:Greatsword of Judgment
005E4CA0:Profaned Greatsword
005E73B0:Cathedral Knight Greatsword
005E7414:Heavy Cathedral Greatsword
005E7478:Sharp Cathedral Greatsword
005E74DC:Refined Cathedral Greatsword
005E7540:Simple Cathedral Greatsword
005E75A4:Crystal Cathedral Greatsword
005E7608:Fire Cathedral Greatsword
005E766C:Chaos Cathedral Greatsword
005E76D0:Lightning Cathedral Greatsword
005E7734:Deep Cathedral Greatsword
005E7798:Dark Cathedral Greatsword
005E77FC:Poison Cathedral Greatsword
005E7860:Blood Cathedral Greatsword
005E78C4:Raw Cathedral Greatsword
005E7928:Blessed Cathedral Greatsword
005E798C:Hollow Cathedral Greatsword
005E9AC0:Farron Greatsword
005F0FF0:Yhorm's Great Machete
005F3700:Dark Sword
005F3764:Heavy Dark Sword
005F37C8:Sharp Dark Sword
005F382C:Refined Dark Sword
005F3890:Simple Dark Sword
005F38F4:Crystal Dark Sword
005F3958:Fire Dark Sword
005F39BC:Chaos Dark Sword
005F3A20:Lightning Dark Sword
005F3A84:Deep Dark Sword
005F3AE8:Reinforced Dark Sword
005F3B4C:Poison Dark Sword
005F3BB0:Blood Dark Sword
005F3C14:Raw Dark Sword
005F3C78:Blessed Dark Sword
005F3CDC:Hollow Dark Sword
005F5E10:Black Knight Sword
005F5E74:Heavy Black Knight Sword
005F5ED8:Sharp Black Knight Sword
005F5F3C:Refined Black Knight Sword
005F5FA0:Simple Black Knight Sword
005F6004:Crystal Black Knight Sword
005F6068:Fire Black Knight Sword
005F60CC:Chaos Black Knight Sword
005F6130:Lightning Black Knight Sword
005F6194:Deep Black Knight Sword
005F61F8:Dark Black Knight Sword
005F625C:Poison Black Knight Sword
005F62C0:Blood Black Knight Sword
005F6324:Raw Black Knight Sword
005F6388:Blessed Black Knight Sword
005F63EC:Hollow Black Knight Sword
005F8520:Lorian's Greatsword
005FAC30:Twin Princes' Greatsword
005FD340:Lothric's Holy Sword
005FFA50:Wolnir's Holy Sword
00602160:Wolf Knight's Greatsword
0060216A:Greatsword of Artorias
0060216B:Greatsword of Artorias+1
0060216C:Greatsword of Artorias+2
0060216D:Greatsword of Artorias+3
0060216E:Greatsword of Artorias+4
0060216F:Greatsword of Artorias+5
00604870:Hollowslayer Greatsword
006048D4:Heavy Hollowslayer Greatsword
00604938:Sharp Hollowslayer Greatsword
0060499C:Refined Hollowslayer Greatsword
00604A00:Simple Hollowslayer Greatsword
00604A64:Crystal Hollowslayer Greatsword
00604AC8:Fire Hollowslayer Greatsword
00604B2C:Chaos Hollowslayer Greatsword
00604B90:Lightning Hollowslayer Greatsword
00604BF4:Deep Hollowslayer Greatsword
00604C58:Dark Hollowslayer Greatsword
00604CBC:Poison Hollowslayer Greatsword
00604D20:Blood Hollowslayer Greatsword
00604D84:Raw Hollowslayer Greatsword
00604DE8:Blessed Hollowslayer Greatsword
00604E4C:Hollow Hollowslayer Greatsword
00606F80:Moonlight Greatsword
00609690:Drakeblood Greatsword
006096F4:Heavy Drakeblood Greatsword
00609758:Sharp Drakeblood Greatsword
006097BC:Refined Drakeblood Greatsword
00609820:Simple Drakeblood Greatsword
00609884:Crystal Drakeblood Greatsword
006098E8:Fire Drakeblood Greatsword
0060994C:Chaos Drakeblood Greatsword
006099B0:Lightning Drakeblood Greatsword
00609A14:Deep Drakeblood Greatsword
00609A78:Dark Drakeblood Greatsword
00609ADC:Poison Drakeblood Greatsword
00609B40:Blood Drakeblood Greatsword
00609BA4:Raw Drakeblood Greatsword
00609C08:Blessed Drakeblood Greatsword
00609C6C:Hollow Drakeblood Greatsword
0060BDA0:Firelink Greatsword
0060E4B0:Fume Ultra Greatsword
00610BC0:Old Wolf Curved Sword
006132D0:Storm Ruler
006159E0:Herald Curved Greatsword
006ACFC0:Hand Axe
006AD024:Heavy Hand Axe
006AD088:Sharp Hand Axe
006AD0EC:Refined Hand Axe
006AD150:Simple Hand Axe
006AD1B4:Crystal Hand Axe
006AD218:Fire Hand Axe
006AD27C:Chaos Hand Axe
006AD2E0:Lightning Hand Axe
006AD344:Deep Hand Axe
006AD3A8:Dark Hand Axe
006AD40C:Poison Hand Axe
006AD470:Blood Hand Axe
006AD4D4:Raw Hand Axe
006AD538:Blessed Hand Axe
006AD59C:Hollow Hand Axe
006AF6D0:Battle Axe
006AF734:Heavy Battle Axe
006AF798:Sharp Battle Axe
006AF7FC:Refined Battle Axe
006AF860:Simple Battle Axe
006AF8C4:Crystal Battle Axe
006AF928:Fire Battle Axe
006AF98C:Chaos Battle Axe
006AF9F0:Lightning Battle Axe
006AFA54:Deep Battle Axe
006AFAB8:Dark Battle Axe
006AFB1C:Poison Battle Axe
006AFB80:Blood Battle Axe
006AFBE4:Raw Battle Axe
006AFC48:Blessed Battle Axe
006AFCAC:Hollow Battle Axe
006B1DE0:Brigand Axe
006B1E44:Heavy Brigand Axe
006B1EA8:Sharp Brigand Axe
006B1F0C:Refined Brigand Axe
006B1F70:Simple Brigand Axe
006B1FD4:Crystal Brigand Axe
006B2038:Fire Brigand Axe
006B209C:Chaos Brigand Axe
006B2100:Lightning Brigand Axe
006B2164:Deep Brigand Axe
006B21C8:Dark Brigand Axe
006B222C:Poison Brigand Axe
006B2290:Blood Brigand Axe
006B22F4:Raw Brigand Axe
006B2358:Blessed Brigand Axe
006B23BC:Hollow Brigand Axe
006B6C00:Crescent Axe
006B6C64:Heavy Crescent Axe
006B6CC8:Sharp Crescent Axe
006B6D2C:Refined Crescent Axe
006B6D90:Simple Crescent Axe
006B6DF4:Crystal Crescent Axe
006B6E58:Fire Crescent Axe
006B6EBC:Chaos Crescent Axe
006B6F20:Lightning Crescent Axe
006B6F84:Deep Crescent Axe
006B6FE8:Dark Crescent Axe
006B704C:Poison Crescent Axe
006B70B0:Blood Crescent Axe
006B7114:Raw Crescent Axe
006B7178:Blessed Crescent Axe
006B71DC:Hollow Crescent Axe
006B9310:Greataxe
006B9374:Heavy Greataxe
006B93D8:Sharp Greataxe
006B943C:Refined Greataxe
006B94A0:Simple Greataxe
006B9504:Crystal Greataxe
006B9568:Fire Greataxe
006B95CC:Chaos Greataxe
006B9630:Lightning Greataxe
006B9694:Deep Greataxe
006B96F8:Dark Greataxe
006B975C:Poison Greataxe
006B97C0:Blood Greataxe
006B9824:Raw Greataxe
006B9888:Blessed Greataxe
006B98EC:Hollow Greataxe
006BE130:Butcher Knife
006BE194:Heavy Butcher Knife
006BE1F8:Sharp Butcher Knife
006BE25C:Refined Butcher Knife
006BE2C0:Simple Butcher Knife
006BE324:Crystal Butcher Knife
006BE388:Fire Butcher Knife
006BE3EC:Chaos Butcher Knife
006BE450:Lightning Butcher Knife
006BE4B4:Deep Butcher Knife
006BE518:Dark Butcher Knife
006BE57C:Poison Butcher Knife
006BE5E0:Blood Butcher Knife
006BE644:Raw Butcher Knife
006BE6A8:Blessed Butcher Knife
006BE70C:Hollow Butcher Knife
006C0840:Dragonslayer's Axe
006C08A4:Heavy Dragonslayer's Axe
006C0908:Sharp Dragonslayer's Axe
006C096C:Refined Dragonslayer's Axe
006C09D0:Simple Dragonslayer's Axe
006C0A34:Crystal Dragonslayer's Axe
006C0A98:Fire Dragonslayer's Axe
006C0AFC:Chaos Dragonslayer's Axe
006C0B60:Lightning Dragonslayer's Axe
006C0BC4:Deep Dragonslayer's Axe
006C0C28:Dark Dragonslayer's Axe
006C0C8C:Poison Dragonslayer's Axe
006C0CF0:Blood Dragonslayer's Axe
006C0D54:Raw Dragonslayer's Axe
006C0DB8:Blessed Dragonslayer's Axe
006C0E1C:Hollow Dragonslayer's Axe
006C2F50:Missionary's Axe
006C2FB4:Heavy Missionary's Axe
006C3018:Sharp Missionary's Axe
006C307C:Refined Missionary's Axe
006C30E0:Simpleton Missionary's Axe
006C3144:Crystal Missionary's Axe
006C31A8:Fire Missionary's Axe
006C320C:Chaos Missionary's Axe
006C3270:Lightning Missionary's Axe
006C32D4:Deep Missionary's Axe
006C3338:Dark Missionary's Axe
006C339C:Poison Missionary's Axe
006C3400:Blood Missionary's Axe
006C3464:Raw Missionary's Axe
006C34C8:Blessed Missionary's Axe
006C352C:Hollow Missionary's Axe
006C5660:Thrall Axe
006C56C4:Heavy Thrall Axe
006C5728:Sharp Thrall Axe
006C578C:Refined Thrall Axe
006C57F0:Simple Thrall Axe
006C5854:Crystal Thrall Axe
006C58B8:Fire Thrall Axe
006C591C:Chaos Thrall Axe
006C5980:Lightning Thrall Axe
006C59E4:Deep Thrall Axe
006C5A48:Dark Thrall Axe
006C5AAC:Poison Thrall Axe
006C5B10:Blood Thrall Axe
006C5B74:Raw Thrall Axe
006C5BD8:Blessed Thrall Axe
006C5C3C:Hollow Thrall Axe
006C7D70:Dragonslayer Greataxe
006CA480:Demon's Greataxe
006CCB90:Eleonora
006D19B0:Man Serpent Hatchet
006D1A14:Heavy Serpent Hatchet
006D1A78:Sharp Serpent Hatchet
006D1ADC:Refined Serpent Hatchet
006D1B40:Simple Serpent Hatchet
006D1BA4:Crystal Serpent Hatchet
006D1C08:Fire Serpent Hatchet
006D1C6C:Chaos Serpent Hatchet
006D1CD0:Lightning Serpent Hatchet
006D1D34:Deep Serpent Hatchet
006D1D98:Dark Serpent Hatchet
006D1DFC:Poison Serpent Hatchet
006D1E60:Blood Serpent Hatchet
006D1EC4:Raw Serpent Hatchet
006D1F28:Blessed Serpent Hatchet
006D1F8C:Hollow Serpent Hatchet
006D40C0:Dragon King Greataxe
006D67D0:Millwood Battle Axe
006D8EE0:Earth Seeker
007A1200:Club
007A1264:Heavy Club
007A12C8:Sharp Club
007A132C:Refined Club
007A1390:Simple Club
007A13F4:Crystal Club
007A1458:Fire Club
007A14BC:Chaos Club
007A1520:Lightning Club
007A1584:Deep Club
007A15E8:Dark Club
007A164C:Poison Club
007A16B0:Blood Club
007A1714:Raw Club
007A1778:Blessed Club
007A17DC:Hollow Club
007A3910:Mace
007A3974:Heavy Mace
007A39D8:Sharp Mace
007A3A3C:Refined Mace
007A3AA0:Simple Mace
007A3B04:Crystal Mace
007A3B68:Fire Mace
007A3BCC:Chaos Mace
007A3C30:Lightning Mace
007A3C94:Deep Mace
007A3CF8:Dark Mace
007A3D5C:Poison Mace
007A3DC0:Blood Mace
007A3E24:Raw Mace
007A3E88:Blessed Mace
007A3EEC:Hollow Mace
007A6020:Morning Star
007A6084:Heavy Morning Star
007A60E8:Sharp Morning Star
007A614C:Refined Morning Star
007A61B0:Simple Morning Star
007A6214:Crystal Morning Star
007A6278:Fire Morning Star
007A62DC:Chaos Morning Star
007A6340:Lightning Morning Star
007A63A4:Deep Morning Star
007A6408:Dark Morning Star
007A646C:Poison Morning Star
007A64D0:Blood Morning Star
007A6534:Raw Morning Star
007A6598:Blessed Morning Star
007A65FC:Hollow Morning Star
007A8730:Reinforced Club
007A8794:Heavy Reinforced Club
007A87F8:Sharp Reinforced Club
007A885C:Refined Reinforced Club
007A88C0:Simple Reinforced Club
007A8924:Crystal Reinforced Club
007A8988:Fire Reinforced Club
007A89EC:Chaos Reinforced Club
007A8A50:Lightning Reinforced Club
007A8AB4:Deep Reinforced Club
007A8B18:Dark Reinforced Club
007A8B7C:Poison Reinforced Club
007A8BE0:Blood Reinforced Club
007A8C44:Raw Reinforced Club
007A8CA8:Blessed Reinforced Club
007A8D0C:Hollow Reinforced Club
007AFC60:Large Club
007AFCC4:Heavy Large Club
007AFD28:Sharp Large Club
007AFD8C:Refined Large Club
007AFDF0:Simple Large Club
007AFE54:Crystal Large Club
007AFEB8:Fire Large Club
007AFF1C:Chaos Large Club
007AFF80:Lightning Large Club
007AFFE4:Deep Large Club
007B0048:Dark Large Club
007B00AC:Poison Large Club
007B0110:Blood Large Club
007B0174:Raw Large Club
007B01D8:Blessed Large Club
007B023C:Hollow Large Club
007B4A80:Great Club
007B4AE4:Heavy Great Club
007B4B48:Sharp Great Club
007B4BAC:Refined Great Club
007B4C10:Simple Great Club
007B4C74:Crystal Great Club
007B4CD8:Fire Great Club
007B4D3C:Chaos Great Club
007B4DA0:Lightning Great Club
007B4E04:Deep Great Club
007B4E68:Dark Great Club
007B4ECC:Poison Great Club
007B4F30:Blood Great Club
007B4F94:Raw Great Club
007B4FF8:Blessed Great Club
007B505C:Hollow Great Club
007BBFB0:Great Mace
007BC014:Heavy Great Mace
007BC078:Sharp Great Mace
007BC0DC:Refined Great Mace
007BC140:Simple Great Mace
007BC1A4:Crystal Great Mace
007BC208:Fire Great Mace
007BC26C:Chaos Great Mace
007BC2D0:Lightning Great Mace
007BC334:Deep Great Mace
007BC398:Dark Great Mace
007BC3FC:Poison Great Mace
007BC460:Blood Great Mace
007BC4C4:Raw Great Mace
007BC528:Blessed Great Mace
007BC58C:Hollow Great Mace
007C8300:Great Wooden Hammer
007C8364:Heavy Wooden Hammer
007C83C8:Sharp Wooden Hammer
007C842C:Refined Wooden Hammer
007C8490:Simple Wooden Hammer
007C84F4:Crystal Wooden Hammer
007C8558:Fire Wooden Hammer
007C85BC:Chaos Wooden Hammer
007C8620:Lightning Wooden Hammer
007C8684:Deep Wooden Hammer
007C86E8:Dark Wooden Hammer
007C874C:Poison Wooden Hammer
007C87B0:Blood Wooden Hammer
007C8814:Raw Wooden Hammer
007C8878:Blessed Wooden Hammer
007C88DC:Hollow Wooden Hammer
007CAA10:Gargoyle Flame Hammer
007CD120:Vordt's Great Hammer
007CF830:Old King's Great Hammer
007D4650:Four Knights Hammer
007D6D60:Heysel Pick
007D9470:Hammer of the Great Tree
007DBB80:Warpick
007DBBE4:Heavy Warpick
007DBC48:Sharp Warpick
007DBCAC:Refined Warpick
007DBD10:Simple Warpick
007DBD74:Crystal Warpick
007DBDD8:Fire Warpick
007DBE3C:Chaos Warpick
007DBEA0:Lightning Warpick
007DBF04:Deep Warpick
007DBF68:Dark Warpick
007DBFCC:Poison Warpick
007DC030:Blood Warpick
007DC094:Raw Warpick
007DC0F8:Blessed Warpick
007DC15C:Hollow Warpick
007DE290:Pickaxe
007DE2F4:Heavy Pickaxe
007DE358:Sharp Pickaxe
007DE3BC:Refined Pickaxe
007DE420:Simple Pickaxe
007DE484:Crystal Pickaxe
007DE4E8:Fire Pickaxe
007DE54C:Chaos Pickaxe
007DE5B0:Lightning Pickaxe
007DE614:Deep Pickaxe
007DE678:Dark Pickaxe
007DE6DC:Poison Pickaxe
007DE740:Blood Pickaxe
007DE7A4:Raw Pickaxe
007DE808:Blessed Pickaxe
007DE86C:Hollow Pickaxe
007E09A0:Dragon Tooth
007E30B0:Smough's Great Hammer
007E57C0:Blacksmith Hammer
007E5824:Heavy Blacksmith Hammer
007E5888:Sharp Blacksmith Hammer
007E58EC:Refined Blacksmith Hammer
007E5950:Simple Blacksmith Hammer
007E59B4:Crystal Blacksmith Hammer
007E5A18:Fire Blacksmith Hammer
007E5A7C:Chaos Blacksmith Hammer
007E5AE0:Lightning Blacksmith Hammer
007E5B44:Deep Blacksmith Hammer
007E5BA8:Dark Blacksmith Hammer
007E5C0C:Poison Blacksmith Hammer
007E5C70:Blood Blacksmith Hammer
007E5CD4:Raw Blacksmith Hammer
007E5D38:Blessed Blacksmith Hammer
007E5D9C:Hollow Blacksmith Hammer
007E7ED0:Morne's Great Hammer
007E7F34:Morne's Heavy Hammer
007E7F98:Morne's Sharp Hammer
007E7FFC:Morne's Refined Hammer
007E8060:Morne's Simple Hammer
007E80C4:Morne's Crystal Hammer
007E8128:Morne's Fire Hammer
007E818C:Morne's Chaos Hammer
007E81F0:Morne's Lightning Hammer
007E8254:Morne's Deep Hammer
007E82B8:Morne's Dark Hammer
007E831C:Morne's Poison Hammer
007E8380:Morne's Blood Hammer
007E83E4:Morne's Raw Hammer
007E8448:Morne's Blessed Hammer
007E84AC:Morne's Hollow Hammer
007EA5E0:Spiked Mace
007EA644:Heavy Spiked Mace
007EA6A8:Sharp Spiked Mace
007EA70C:Refined Spiked Mace
007EA770:Simple Spiked Mace
007EA7D4:Crystal Spiked Mace
007EA838:Fire Spiked Mace
007EA89C:Chaos Spiked Mace
007EA900:Lightning Spiked Mace
007EA964:Deep Spiked Mace
007EA9C8:Dark Spiked Mace
007EAA2C:Poison Spiked Mace
007EAA90:Blood Spiked Mace
007EAAF4:Raw Spiked Mace
007EAB58:Blessed Spiked Mace
007EABBC:Hollow Spiked Mace
007ECCF0:Quakestone Hammer
007EF400:Ledo's Great Hammer
00895440:Spear
008954A4:Heavy Spear
00895508:Sharp Spear
0089556C:Refined Spear
008955D0:Simple Spear
00895634:Crystal Spear
00895698:Fire Spear
008956FC:Chaos Spear
00895760:Lightning Spear
008957C4:Deep Spear
00895828:Dark Spear
0089588C:Poison Spear
008958F0:Blood Spear
00895954:Raw Spear
008959B8:Blessed Spear
00895A1C:Hollow Spear
00897B50:Winged Spear
00897BB4:Heavy Winged Spear
00897C18:Sharp Winged Spear
00897C7C:Refined Winged Spear
00897CE0:Simple Winged Spear
00897D44:Crystal Winged Spear
00897DA8:Fire Winged Spear
00897E0C:Chaos Winged Spear
00897E70:Lightning Winged Spear
00897ED4:Deep Winged Spear
00897F38:Dark Winged Spear
00897F9C:Poison Winged Spear
00898000:Blood Winged Spear
00898064:Raw Winged Spear
008980C8:Blessed Winged Spear
0089812C:Hollow Winged Spear
0089C970:Partizan
0089C9D4:Heavy Partizan
0089CA38:Sharp Partizan
0089CA9C:Refined Partizan
0089CB00:Simple Partizan
0089CB64:Crystal Partizan
0089CBC8:Fire Partizan
0089CC2C:Chaos Partizan
0089CC90:Lightning Partizan
0089CCF4:Deep Partizan
0089CD58:Dark Partizan
0089CDBC:Poison Partizan
0089CE20:Blood Partizan
0089CE84:Raw Partizan
0089CEE8:Blessed Partizan
0089CF4C:Hollow Partizan
008A8CC0:Greatlance
008A8D24:Heavy Greatlance
008A8D88:Sharp Greatlance
008A8DEC:Refined Greatlance
008A8E50:Simple Greatlance
008A8EB4:Crystal Greatlance
008A8F18:Fire Greatlance
008A8F7C:Chaos Greatlance
008A8FE0:Lightning Greatlance
008A9044:Deep Greatlance
008A90A8:Dark Greatlance
008A910C:Poison Greatlance
008A9170:Blood Greatlance
008A91D4:Raw Greatlance
008A9238:Blessed Greatlance
008A929C:Hollow Greatlance
008AB3D0:Lothric Knight Long Spear
008AB434:Heavy Lothric Long Spear
008AB498:Sharp Lothric Long Spear
008AB4FC:Refined Lothric Long Spear
008AB560:Simple Lothric Long Spear
008AB5C4:Crystal Lothric Long Spear
008AB628:Fire Lothric Long Spear
008AB68C:Chaos Lothric Long Spear
008AB6F0:Lightning Lothric Long Spear
008AB754:Deep Lothric Long Spear
008AB7B8:Dark Lothric Long Spear
008AB81C:Poison Lothric Long Spear
008AB880:Blood Lothric Long Spear
008AB8E4:Raw Lothric Long Spear
008AB948:Blessed Lothric Long Spear
008AB9AC:Hollow Lothric Long Spear
008ADAE0:Four-Pronged Plow
008ADB44:Heavy Four-Pronged Plow
008ADBA8:Sharp Four-Pronged Plow
008ADC0C:Refined Four-Pronged Plow
008ADC70:Simple Four-Pronged Plow
008ADCD4:Crystal Four-Pronged Plow
008ADD38:Fire Four-Pronged Plow
008ADD9C:Chaos Four-Pronged Plow
008ADE00:Lightning Four-Pronged Plow
008ADE64:Deep Four-Pronged Plow
008ADEC8:Dark Four-Pronged Plow
008ADF2C:Poison Four-Pronged Plow
008ADF90:Blood Four-Pronged Plow
008ADFF4:Raw Four-Pronged Plow
008AE058:Blessed Four-Pronged Plow
008AE0BC:Hollow Four-Pronged Plow
008B01F0:Gargoyle Flame Spear
008B2900:Rotten Ghru Spear
008B2964:Heavy Rotten Ghru Spear
008B29C8:Sharp Rotten Ghru Spear
008B2A2C:Refined Rotten Ghru Spear
008B2A90:Simple Rotten Ghru Spear
008B2AF4:Crystal Rotten Ghru Spear
008B2B58:Fire Rotten Ghru Spear
008B2BBC:Chaos Rotten Ghru Spear
008B2C20:Lightning Rotten Ghru Spear
008B2C84:Deep Rotten Ghru Spear
008B2CE8:Dark Rotten Ghru Spear
008B2D4C:Poison Rotten Ghru Spear
008B2DB0:Blood Rotten Ghru Spear
008B2E14:Raw Rotten Ghru Spear
008B2E78:Blessed Rotten Ghru Spear
008B2EDC:Hollow Rotten Ghru Spear
008B5010:Tailbone Spear
008B7720:Soldering Iron
008B7784:Heavy Soldering Iron
008B77E8:Sharp Soldering Iron
008B784C:Refined Soldering Iron
008B78B0:Simple Soldering Iron
008B7914:Crystal Soldering Iron
008B7978:Fire Soldering Iron
008B79DC:Chaos Soldering Iron
008B7A40:Lightning Soldering Iron
008B7AA4:Deep Soldering Iron
008B7B08:Dark Soldering Iron
008B7B6C:Poison Soldering Iron
008B7BD0:Blood Soldering Iron
008B7C34:Raw Soldering Iron
008B7C98:Blessed Soldering Iron
008B7CFC:Hollow Soldering Iron
008BC540:Dragonslayer Swordspear
008BEC50:Arstor's Spear
008C1360:Saint Bident
008C13C4:Heavy Saint Bident
008C1428:Sharp Saint Bident
008C148C:Refined Saint Bident
008C14F0:Simple Saint Bident
008C1554:Crystal Saint Bident
008C15B8:Fire Saint Bident
008C161C:Chaos Saint Bident
008C1680:Lightning Saint Bident
008C16E4:Deep Saint Bident
008C1748:Dark Saint Bident
008C17AC:Poison Saint Bident
008C1810:Blood Saint Bident
008C1874:Raw Saint Bident
008C18D8:Blessed Saint Bident
008C193C:Hollow Saint Bident
008C3A70:Yorshka's Spear
008C6180:Pike
008C61E4:Heavy Pike
008C6248:Sharp Pike
008C62AC:Refined Pike
008C6310:Simple Pike
008C6374:Crystal Pike
008C63D8:Fire Pike
008C643C:Chaos Pike
008C64A0:Lightning Pike
008C6504:Deep Pike
008C6568:Dark Pike
008C65CC:Poison Pike
008C6630:Blood Pike
008C6694:Raw Pike
008C66F8:Blessed Pike
008C675C:Hollow Pike
008C8890:Channeler's Trident
008C88F4:Heavy Four-pronged Plow
008C8958:Sharp Four-pronged Plow
008C89BC:Refined Four-pronged Plow
008C8A20:Simpleton Four-pronged Plow
008C8A84:Crystal Four-pronged Plow
008C8AE8:Fire Four-pronged Plow
008C8B4C:Chaos Four-pronged Plow
008C8BB0:Lightning Four-pronged Plow
008C8C14:Deep Four-pronged Plow
008C8C78:Dark Four-pronged Plow
008C8CDC:Poison Four-pronged Plow
008C8D40:Blood Four-pronged Plow
008C8DA4:Raw Four-pronged Plow
008C8E08:Blessed Four-pronged Plow
008C8E6C:Hollow Four-pronged Plow
008CAFA0:Dragonslayer Spear
008CD6B0:Follower Javelin
008CFDC0:Ringed Knight Spear
008D24D0:Lothric War Banner
008D4BE0:Crucifix of the Mad King (Halberd)
00989680:Great Scythe
009896E4:Heavy Great Scythe
00989748:Sharp Great Scythe
009897AC:Refined Great Scythe
00989810:Simple Great Scythe
00989874:Crystal Great Scythe
009898D8:Fire Great Scythe
0098993C:Chaos Great Scythe
009899A0:Lightning Great Scythe
00989A04:Deep Great Scythe
00989A68:Dark Great Scythe
00989ACC:Poison Great Scythe
00989B30:Blood Great Scythe
00989B94:Raw Great Scythe
00989BF8:Blessed Great Scythe
00989C5C:Hollow Great Scythe
0098BD90:Lucerne
0098BDF4:Heavy Lucerne
0098BE58:Sharp Lucerne
0098BEBC:Refined Lucerne
0098BF20:Simple Lucerne
0098BF84:Crystal Lucerne
0098BFE8:Fire Lucerne
0098C04C:Chaos Lucerne
0098C0B0:Lightning Lucerne
0098C114:Deep Lucerne
0098C178:Dark Lucerne
0098C1DC:Poison Lucerne
0098C240:Blood Lucerne
0098C2A4:Raw Lucerne
0098C308:Blessed Lucerne
0098C36C:Hollow Lucerne
0098E4A0:Glaive
0098E504:Heavy Glaive
0098E568:Sharp Glaive
0098E5CC:Refined Glaive
0098E630:Simple Glaive
0098E694:Crystal Glaive
0098E6F8:Fire Glaive
0098E75C:Chaos Glaive
0098E7C0:Lightning Glaive
0098E824:Deep Glaive
0098E888:Dark Glaive
0098E8EC:Poison Glaive
0098E950:Blood Glaive
0098E9B4:Raw Glaive
0098EA18:Blessed Glaive
0098EA7C:Hollow Glaive
00990BB0:Halberd
00990C14:Heavy Halberd
00990C78:Sharp Halberd
00990CDC:Refined Halberd
00990D40:Simple Halberd
00990DA4:Crystal Halberd
00990E08:Fire Halberd
00990E6C:Chaos Halberd
00990ED0:Lightning Halberd
00990F34:Deep Halberd
00990F98:Dark Halberd
00990FFC:Poison Halberd
00991060:Blood Halberd
009910C4:Raw Halberd
00991128:Blessed Halberd
0099118C:Hollow Halberd
009959D0:Black Knight Greataxe
00995A34:Heavy Black Knight Greataxe
00995A98:Sharp Black Knight Greataxe
00995AFC:Refined Black Knight Greataxe
00995B60:Simple Black Knight Greataxe
00995BC4:Crystal Black Knight Greataxe
00995C28:Fire Black Knight Greataxe
00995C8C:Chaos Black Knight Greataxe
00995CF0:Lightning Black Knight Greataxe
00995D54:Deep Black Knight Greataxe
00995DB8:Dark Black Knight Greataxe
00995E1C:Poison Black Knight Greataxe
00995E80:Blood Black Knight Greataxe
00995EE4:Raw Black Knight Greataxe
00995F48:Blessed Black Knight Greataxe
00995FAC:Hollow Black Knight Greataxe
0099A7F0:Pontiff Knight Great Scythe
0099CF00:Great Corvian Scythe
0099CF64:Heavy Corvian Scythe
0099CFC8:Sharp Corvian Scythe
0099D02C:Refined Corvian Scythe
0099D090:Simple Corvian Scythe
0099D0F4:Crystal Corvian Scythe
0099D158:Fire Corvian Scythe
0099D1BC:Chaos Corvian Scythe
0099D220:Lightning Corvian Scythe
0099D284:Deep Corvian Scythe
0099D2E8:Dark Corvian Scythe
0099D34C:Poison Corvian Scythe
0099D3B0:Blood Corvian Scythe
0099D414:Raw Corvian Scythe
0099D478:Blessed Corvian Scythe
0099D4DC:Hollow Corvian Scythe
0099F610:Winged Knight Halberd
0099F674:Heavy Winged Knight Halberd
0099F6D8:Sharp Winged Knight Halberd
0099F73C:Refined Winged Knight Halberd
0099F7A0:Simple Winged Knight Halberd
0099F804:Crystal Winged Knight Halberd
0099F868:Fire Winged Knight Halberd
0099F8CC:Chaos Winged Knight Halberd
0099F930:Lightning Winged Knight Halberd
0099F994:Deep Winged Knight Halberd
0099F9F8:Dark Winged Knight Halberd
0099FA5C:Poison Winged Knight Halberd
0099FAC0:Blood Winged Knight Halberd
0099FB24:Raw Winged Knight Halberd
0099FB88:Blessed Winged Knight Halberd
0099FBEC:Hollow Winged Knight Halberd
009A1D20:Gundyr's Halberd
009A4430:Lothric's Scythe
009A6B40:Ancient Dragon Halberd
009A9250:Scythe of Want
009AB960:Red Hilted Halberd
009AB9C4:Heavy Red Halberd
009ABA28:Sharp Red Halberd
009ABA8C:Refined Red Halberd
009ABAF0:Simple Red Halberd
009ABB54:Crystal Red Halberd
009ABBB8:Fire Red Halberd
009ABC1C:Chaos Red Halberd
009ABC80:Lightning Red Halberd
009ABCE4:Deep Red Halberd
009ABD48:Dark Red Halberd
009ABDAC:Poison Red Halberd
009ABE10:Blood Red Halberd
009ABE74:Raw Red Halberd
009ABED8:Blessed Red Halberd
009ABF3C:Hollow Red Halberd
009AE070:Black Knight Glaive
009AE0D4:Heavy Black Knight Glaive
009AE138:Sharp Black Knight Glaive
009AE19C:Refined Black Knight Glaive
009AE200:Simple Black Knight Glaive
009AE264:Crystal Black Knight Glaive
009AE2C8:Fire Black Knight Glaive
009AE32C:Chaos Black Knight Glaive
009AE390:Lightning Black Knight Glaive
009AE3F4:Deep Black Knight Glaive
009AE458:Dark Black Knight Glaive
009AE4BC:Poison Black Knight Glaive
009AE520:Blood Black Knight Glaive
009AE584:Raw Black Knight Glaive
009AE5E8:Blessed Black Knight Glaive
009AE64C:Hollow Black Knight Glaive
009B0780:Immolation Tinder
009B2E90:Splitleaf Greatsword (It's a Halberd)
009B55A0:Friede's Great Scythe
00A7D8C0:Claw
00A7D924:Heavy Claw
00A7D988:Sharp Claw
00A7D9EC:Skilled Claw
00A7DA50:Simple Claw
00A7DAB4:Crystal Claw
00A7DB18:Fire Claw
00A7DB7C:Chaos Claw
00A7DBE0:Lightning Claw
00A7DC44:Deep Claw
00A7DCA8:Dark Claw
00A7DD0C:Poison Claw
00A7DD70:Blood Claw
00A7DDD4:Raw Claw
00A7DE38:Blessed Claw
00A7DE9C:Hollow Claw
00A7FFD0:Caestus
00A80034:Heavy Caestus
00A80098:Sharp Caestus
00A800FC:Skilled Caestus
00A80160:Simple Caestus
00A801C4:Crystal Caestus
00A80228:Fire Caestus
00A8028C:Chaos Caestus
00A802F0:Lightning Caestus
00A80354:Deep Caestus
00A803B8:Dark Caestus
00A8041C:Poison Caestus
00A80480:Blood Caestus
00A804E4:Raw Caestus
00A80548:Blessed Caestus
00A805AC:Hollow Caestus
00A826E0:Manikin Claws
00A82744:Heavy Manikin Claws
00A827A8:Sharp Manikin Claws
00A8280C:Skilled Manikin Claws
00A82870:Simple Manikin Claws
00A828D4:Crystal Manikin Claws
00A82938:Fire Manikin Claws
00A8299C:Chaos Manikin Claws
00A82A00:Lightning Manikin Claws
00A82A64:Deep Manikin Claws
00A82AC8:Dark Manikin Claws
00A82B2C:Poison Manikin Claws
00A82B90:Blood Manikin Claws
00A82BF4:Raw Manikin Claws
00A82C58:Blessed Manikin Claws
00A82CBC:Hollow Manikin Claws
00A84DF0:Demon's Fist
00A87500:Dark Hand
00A89C10:Crow Talons
00B71B00:Whip
00B71B64:Heavy Whip
00B71BC8:Sharp Whip
00B71C2C:Skilled Whip
00B71C90:Simple Whip
00B71CF4:Crystal Whip
00B71D58:Fire Whip
00B71DBC:Chaos Whip
00B71E20:Lightning Whip
00B71E84:Deep Whip
00B71EE8:Dark Whip
00B71F4C:Poison Whip
00B71FB0:Blood Whip
00B72014:Raw Whip
00B72078:Blessed Whip
00B720DC:Hollow Whip
00B7B740:Witch's Locks
00B7DE50:Notched Whip
00B7DEB4:Heavy Notched Whip
00B7DF18:Sharp Notched Whip
00B7DF7C:Skilled Notched Whip
00B7DFE0:Simple Notched Whip
00B7E044:Crystal Notched Whip
00B7E0A8:Fire Notched Whip
00B7E10C:Chaos Notched Whip
00B7E170:Lightning Notched Whip
00B7E1D4:Deep Notched Whip
00B7E238:Dark Notched Whip
00B7E29C:Poison Notched Whip
00B7E300:Blood Notched Whip
00B7E364:Raw Notched Whip
00B7E3C8:Blessed Notched Whip
00B7E42C:Hollow Notched Whip
00B80560:Spotted Whip
00B82C70:Rose of Ariandel
00C72090:Talisman
00C747A0:Sorcerer's Staff
00C76EB0:Storyteller's Staff
00C795C0:Mendicant's Staff
00C7E3E0:Man-grub's Staff
00C80AF0:Archdeacon's Great Staff
00C83200:Golden Ritual Spear
00C88020:Yorshka's Chime
00C8A730:Sacred Beast Catalyst
00C8CE40:Sage's Crystal Staff
00C8F550:Heretic's Staff
00C91C60:Court Sorcerer's Staff
00C94370:Witchtree Branch
00C96A80:Izalith Staff
00C99190:Cleric's Sacred Chime
00C9B8A0:Priest's Chime
00C9DFB0:Saint-tree Bellvine
00CA06C0:Caitha's Chime
00CA2DD0:Crystal Chime
00CA54E0:Sunlight Talisman
00CA7BF0:Canvas Talisman
00CAA300:Sunless Talisman
00CACA10:Saint's Talisman
00CAF120:White Hair Talisman
00CC77C0:Pyromancy Flame
00CC9ED0:Deep Pyromancy Flame
00CC9ED0:Pyromancer's Parting Flame
00CCC5E0:Murky Longstaff
00CCECF0:Sacred Chime of Filianore
00CD1400:Preacher's Right Arm
00CD3B10:Flickering Pyromancy Flame
00CD6220:Strong Pyromancy Flame
00CDFE60:Deep Pyromancy Flame
00CE2570:Pitch-Dark Pyromancy Flame
00CF8500:Dragonslayer Greatbow
00D5C690:Short Bow
00D5C6F4:Heavy Short Bow
00D5C758:Sharp Short Bow
00D5C7BC:Refined Short Bow
00D5C820:Simpleton Short Bow
00D5C884:Crystal Short Bow
00D5C8E8:Fire Short Bow
00D5C94C:Chaos Short Bow
00D5C9B0:Lightning Short Bow
00D5CA14:Deep Short Bow
00D5CA78:Dark Short Bow
00D5CADC:Poison Short Bow
00D5CB40:Blood Short Bow
00D5CBA4:Raw Short Bow
00D5CC08:Blessed Short Bow
00D5CC6C:Hollow Short Bow
00D5EDA0:Composite Bow
00D5EE04:Heavy Composite Bow
00D5EE68:Sharp Composite Bow
00D5EECC:Refined Composite Bow
00D5EF30:Simpleton Composite Bow
00D5EF94:Crystal Composite Bow
00D5EFF8:Fire Composite Bow
00D5F05C:Chaos Composite Bow
00D5F0C0:Lightning Composite Bow
00D5F124:Deep Composite Bow
00D5F188:Dark Composite Bow
00D5F1EC:Poison Composite Bow
00D5F250:Blood Composite Bow
00D5F2B4:Raw Composite Bow
00D5F318:Blessed Composite Bow
00D5F37C:Hollow Composite Bow
00D63BC0:Light Crossbow
00D63C24:Heavy Soldier's Crossbow
00D63C88:Sharp Soldier's Crossbow
00D63CEC:Refined Soldier's Crossbow
00D63D50:Simpleton Soldier's Crossbow
00D63DB4:Crystal Soldier's Crossbow
00D63E18:Fire Soldier's Crossbow
00D63E7C:Chaos Soldier's Crossbow
00D63EE0:Lightning Soldier's Crossbow
00D63F44:Deep Soldier's Crossbow
00D63FA8:Dark Soldier's Crossbow
00D6400C:Poison Soldier's Crossbow
00D64070:Blood Soldier's Crossbow
00D640D4:Raw Soldier's Crossbow
00D64138:Blessed Soldier's Crossbow
00D6419C:Hollow Soldier's Crossbow
00D662D0:Arbalest
00D66334:Heavy Heavy Crossbow
00D66398:Sharp Heavy Crossbow
00D663FC:Refined Heavy Crossbow
00D66460:Simpleton Heavy Crossbow
00D664C4:Crystal Heavy Crossbow
00D66528:Fire Heavy Crossbow
00D6658C:Chaos Heavy Crossbow
00D665F0:Lightning Heavy Crossbow
00D66654:Deep Heavy Crossbow
00D666B8:Dark Heavy Crossbow
00D6671C:Poison Heavy Crossbow
00D66780:Blood Heavy Crossbow
00D667E4:Raw Heavy Crossbow
00D66848:Blessed Heavy Crossbow
00D668AC:Hollow Heavy Crossbow
00D689E0:Longbow
00D68A44:Heavy Longbow
00D68AA8:Sharp Longbow
00D68B0C:Refined Longbow
00D68B70:Simpleton Longbow
00D68BD4:Crystal Longbow
00D68C38:Fire Longbow
00D68C9C:Chaos Longbow
00D68D00:Lightning Longbow
00D68D64:Deep Longbow
00D68DC8:Dark Longbow
00D68E2C:Poison Longbow
00D68E90:Blood Longbow
00D68EF4:Raw Longbow
00D68F58:Blessed Longbow
00D68FBC:Hollow Longbow
00D6B0F0:Dragonrider Bow
00D6B154:Heavy Dragonrider Bow
00D6B1B8:Sharp Dragonrider Bow
00D6B21C:Refined Dragonrider Bow
00D6B280:Simple Dragonrider Bow
00D6B2E4:Crystal Dragonrider Bow
00D6B348:Fire Dragonrider Bow
00D6B3AC:Chaos Dragonrider Bow
00D6B410:Lightning Dragonrider Bow
00D6B474:Deep Dragonrider Bow
00D6B4D8:Dark Dragonrider Bow
00D6B53C:Poison Dragonrider Bow
00D6B5A0:Blood Dragonrider Bow
00D6B604:Raw Dragonrider Bow
00D6B668:Blessed Dragonrider Bow
00D6B6CC:Hollow Dragonrider Bow
00D6FF10:Avelyn
00D6FF74:Heavy Avelyn
00D6FFD8:Sharp Avelyn
00D7003C:Refined Avelyn
00D700A0:Simpleton Avelyn
00D70104:Crystal Avelyn
00D70168:Fire Avelyn
00D701CC:Chaos Avelyn
00D70230:Lightning Avelyn
00D70294:Deep Avelyn
00D702F8:Dark Avelyn
00D7035C:Poison Avelyn
00D703C0:Blood Avelyn
00D70424:Raw Avelyn
00D70488:Blessed Avelyn
00D704EC:Hollow Avelyn
00D72620:Knight's Crossbow
00D72684:Heavy Knight's Crossbow
00D726E8:Sharp Knight's Crossbow
00D7274C:Refined Knight's Crossbow
00D727B0:Simpleton Knight's Crossbow
00D72814:Crystal Knight's Crossbow
00D72878:Fire Knight's Crossbow
00D728DC:Chaos Knight's Crossbow
00D72940:Lightning Knight's Crossbow
00D729A4:Deep Knight's Crossbow
00D72A08:Dark Knight's Crossbow
00D72A6C:Poison Knight's Crossbow
00D72AD0:Blood Knight's Crossbow
00D72B34:Raw Knight's Crossbow
00D72B98:Blessed Knight's Crossbow
00D72BFC:Hollow Knight's Crossbow
00D74D30:Heavy Crossbow
00D74D94:Heavy Temple Knight's Crossbow
00D74DF8:Sharp Temple Knight's Crossbow
00D74E5C:Refined Temple Knight's Crossbow
00D74EC0:Simpleton Temple Knight's Crossbow
00D74F24:Crystal Temple Knight's Crossbow
00D74F88:Fire Temple Knight's Crossbow
00D74FEC:Chaos Temple Knight's Crossbow
00D75050:Lightning Temple Knight's Crossbow
00D750B4:Deep Temple Knight's Crossbow
00D75118:Dark Temple Knight's Crossbow
00D7517C:Poison Temple Knight's Crossbow
00D751E0:Blood Temple Knight's Crossbow
00D75244:Raw Temple Knight's Crossbow
00D752A8:Blessed Temple Knight's Crossbow
00D7530C:Hollow Temple Knight's Crossbow
00D77440:Dancer's Short Bow
00D77440:White Tree Bow (White Birch Bow)
00D79B50:Darkmoon Longbow
00D7C260:Onislayer Greatbow
00D7E970:Black Bow of Pharis
00D7E9D4:Heavy Bow of Pharis
00D7EA38:Sharp Bow of Pharis
00D7EA9C:Refined Bow of Pharis
00D7EB00:Simpleton Bow of Pharis
00D7EB64:Crystal Bow of Pharis
00D7EBC8:Fire Bow of Pharis
00D7EC2C:Chaos Bow of Pharis
00D7EC90:Lightning Bow of Pharis
00D7ECF4:Deep Bow of Pharis
00D7ED58:Dark Bow of Pharis
00D7EDBC:Poison Bow of Pharis
00D7EE20:Blood Bow of Pharis
00D7EE84:Raw Bow of Pharis
00D7EEE8:Blessed Bow of Pharis
00D7EF4C:Hollow Bow of Pharis
00D81080:Shield Crossbow
00D83790:Sniper Crossbow
00D837F4:Heavy Sniper Crossbow
00D83858:Sharp Sniper Crossbow
00D838BC:Refined Sniper Crossbow
00D83920:Simpleton Sniper Crossbow
00D83984:Crystal Sniper Crossbow
00D839E8:Fire Sniper Crossbow
00D83A4C:Chaos Sniper Crossbow
00D83AB0:Lightning Sniper Crossbow
00D83B14:Deep Sniper Crossbow
00D83B78:Dark Sniper Crossbow
00D83BDC:Poison Sniper Crossbow
00D83C40:Blood Sniper Crossbow
00D83CA4:Raw Sniper Crossbow
00D83D08:Blessed Sniper Crossbow
00D83D6C:Hollow Sniper Crossbow
00D85EA0:Millwood Greatbow
00D885B0:Repeating Crossbow
00F42400:Sellsword Twinblades
00F42464:Heavy Sellsword Twinblades
00F424C8:Sharp Sellsword Twinblades
00F4252C:Refined Sellsword Twinblades
00F42590:Simple Sellsword Twinblades
00F425F4:Crystal Sellsword Twinblades
00F42658:Fire Sellsword Twinblades
00F426BC:Chaos Sellsword Twinblades
00F42720:Lightning Sellsword Twinblades
00F42784:Deep Sellsword Twinblades
00F427E8:Dark Sellsword Twinblades
00F4284C:Poison Sellsword Twinblades
00F428B0:Blood Sellsword Twinblades
00F42914:Raw Sellsword Twinblades
00F42978:Blessed Sellsword Twinblades
00F429DC:Hollow Sellsword Twinblades
00F47220:Warden Twinblades
00F47284:Heavy Warden Twinblades
00F472E8:Sharp Warden Twinblades
00F4734C:Refined Warden Twinblades
00F473B0:Simple Warden Twinblades
00F47414:Crystal Warden Twinblades
00F47478:Fire Warden Twinblades
00F474DC:Chaos Warden Twinblades
00F47540:Lightning Warden Twinblades
00F475A4:Deep Warden Twinblades
00F47608:Dark Warden Twinblades
00F4766C:Poison Warden Twinblades
00F476D0:Blood Warden Twinblades
00F47734:Raw Warden Twinblades
00F47798:Blessed Warden Twinblades
00F477FC:Hollow Warden Twinblades
00F49930:Winged Knight Twinaxes
00F49994:Heavy Winged Knight Twinaxes
00F499F8:Sharp Winged Knight Twinaxes
00F49A5C:Refined Winged Knight Twinaxes
00F49AC0:Simple Winged Knight Twinaxes
00F49B24:Crystal Winged Knight Twinaxes
00F49B88:Fire Winged Knight Twinaxes
00F49BEC:Chaos Winged Knight Twinaxes
00F49C50:Lightning Winged Knight Twinaxes
00F49CB4:Deep Winged Knight Twinaxes
00F49D18:Dark Winged Knight Twinaxes
00F49D7C:Poison Winged Knight Twinaxes
00F49DE0:Blood Winged Knight Twinaxes
00F49E44:Raw Winged Knight Twinaxes
00F49EA8:Blessed Winged Knight Twinaxes
00F49F0C:Hollow Winged Knight Twinaxes
00F4C040:Dancer's Enchanted Swords
00F4E750:Great Machete
00F4E7B4:Heavy Great Machete
00F4E818:Sharp Great Machete
00F4E87C:Refined Great Machete
00F4E8E0:Simple Great Machete
00F4E944:Crystal Great Machete
00F4E9A8:Fire Great Machete
00F4EA0C:Chaos Great Machete
00F4EA70:Lightning Great Machete
00F4EAD4:Deep Great Machete
00F4EB38:Dark Great Machete
00F4EB9C:Poison Great Machete
00F4EC00:Blood Great Machete
00F4EC64:Raw Great Machete
00F4ECC8:Blessed Great Machete
00F4ED2C:Hollow Great Machete
00F50E60:Brigand Twindaggers
00F50EC4:Heavy Brigand Twindaggers
00F50F28:Sharp Brigand Twindaggers
00F50F8C:Refined Brigand Twindaggers
00F50FF0:Simple Brigand Twindaggers
00F51054:Crystal Brigand Twindaggers
00F510B8:Fire Brigand Twindaggers
00F5111C:Chaos Brigand Twindaggers
00F51180:Lightning Brigand Twindaggers
00F511E4:Deep Brigand Twindaggers
00F51248:Dark Brigand Twindaggers
00F512AC:Poison Brigand Twindaggers
00F51310:Blood Brigand Twindaggers
00F51374:Raw Brigand Twindaggers
00F513D8:Blessed Brigand Twindaggers
00F5143C:Hollow Brigand Twindaggers
00F53570:Gotthard Twinswords
00F535D4:Heavy Gotthard Twinswords
00F53638:Sharp Gotthard Twinswords
00F5369C:Refined Gotthard Twinswords
00F53700:Simple Gotthard Twinswords
00F53764:Crystal Gotthard Twinswords
00F537C8:Fire Gotthard Twinswords
00F5382C:Chaos Gotthard Twinswords
00F53890:Lightning Gotthard Twinswords
00F538F4:Deep Gotthard Twinswords
00F53958:Dark Gotthard Twinswords
00F539BC:Poison Gotthard Twinswords
00F53A20:Blood Gotthard Twinswords
00F53A84:Raw Gotthard Twinswords
00F53AE8:Blessed Gotthard Twinswords
00F53B4C:Hollow Gotthard Twinswords
00F55C80:Golden Dual Swords
00F58390:Onikiri and Ubadachi
00F583F4:Heavy Onikiri and Ubadachi
00F58458:Sharp Onikiri and Ubadachi
00F584BC:Refined Onikiri and Ubadachi
00F58520:Simple Onikiri and Ubadachi
00F58584:Crystal Onikiri and Ubadachi
00F585E8:Fire Onikiri and Ubadachi
00F5864C:Chaos Onikiri and Ubadachi
00F586B0:Lightning Onikiri and Ubadachi
00F58714:Deep Onikiri and Ubadachi
00F58778:Dark Onikiri and Ubadachi
00F587DC:Poison Onikiri and Ubadachi
00F58840:Blood Onikiri and Ubadachi
00F588A4:Raw Onikiri and Ubadachi
00F58908:Blessed Onikiri and Ubadachi
00F5896C:Hollow Onikiri and Ubadachi
00F5AAA0:Drang Twinspears
00F5AB04:Heavy Drang Twinspears
00F5AB68:Sharp Drang Twinspears
00F5ABCC:Refined Drang Twinspears
00F5AC30:Simple Drang Twinspears
00F5AC94:Crystal Drang Twinspears
00F5ACF8:Fire Drang Twinspears
00F5AD5C:Chaos Drang Twinspears
00F5ADC0:Lightning Drang Twinspears
00F5AE24:Deep Drang Twinspears
00F5AE88:Dark Drang Twinspears
00F5AEEC:Poison Drang Twinspears
00F5AF50:Blood Drang Twinspears
00F5AFB4:Raw Drang Twinspears
00F5B018:Blessed Drang Twinspears
00F5B07C:Hollow Drang Twinspears
00F5F8C0:Great Door Twinshields
00F61FD0:Drang Hammers
00F62034:Heavy Drang Hammers
00F62098:Sharp Drang Hammers
00F620FC:Refined Drang Hammers
00F62160:Simple Drang Hammers
00F621C4:Crystal Drang Hammers
00F62228:Fire Drang Hammers
00F6228C:Chaos Drang Hammers
00F622F0:Lightning Drang Hammers
00F62354:Deep Drang Hammers
00F623B8:Dark Drang Hammers
00F6241C:Poison Drang Hammers
00F62480:Blood Drang Hammers
00F624E4:Raw Drang Hammers
00F62548:Blessed Drang Hammers
00F625AC:Hollow Drang Hammers
00F646E0:Valorheart
00F66DF0:Crow Quills
00F69500:Ringed Knight Paired
01312D00:Buckler
01312D64:Heavy Buckler
01312DC8:Sharp Buckler
01312E2C:Refined Buckler
01312E90:Simple Buckler
01312EF4:Crystal Buckler
01312F58:Fire Buckler
01312FBC:Chaos Buckler
01313020:Lightning Buckler
01313084:Deep Buckler
013130E8:Dark Buckler
0131314C:Poison Buckler
013131B0:Blood Buckler
01313214:Raw Buckler
01313278:Blessed Buckler
013132DC:Hollow Buckler
01315410:Small Leather Shield
01315474:Heavy Small Leather Shield
013154D8:Sharp Small Leather Shield
0131553C:Refined Small Leather Shield
013155A0:Simple Small Leather Shield
01315604:Crystal Small Leather Shield
01315668:Fire Small Leather Shield
013156CC:Chaos Small Leather Shield
01315730:Lightning Small Leather Shield
01315794:Deep Small Leather Shield
013157F8:Dark Small Leather Shield
0131585C:Poison Small Leather Shield
013158C0:Blood Small Leather Shield
01315924:Raw Small Leather Shield
01315988:Blessed Small Leather Shield
013159EC:Hollow Small Leather Shield
0131A230:Round Shield
0131A294:Heavy Round Shield
0131A2F8:Sharp Round Shield
0131A35C:Refined Round Shield
0131A3C0:Simple Round Shield
0131A424:Crystal Round Shield
0131A488:Fire Round Shield
0131A4EC:Chaos Round Shield
0131A550:Lightning Round Shield
0131A5B4:Deep Round Shield
0131A618:Dark Round Shield
0131A67C:Poison Round Shield
0131A6E0:Blood Round Shield
0131A744:Raw Round Shield
0131A7A8:Blessed Round Shield
0131A80C:Hollow Round Shield
0131C940:Large Leather Shield
0131C9A4:Heavy Large Leather Shield
0131CA08:Sharp Large Leather Shield
0131CA6C:Refined Large Leather Shield
0131CAD0:Simple Large Leather Shield
0131CB34:Crystal Large Leather Shield
0131CB98:Fire Large Leather Shield
0131CBFC:Chaos Large Leather Shield
0131CC60:Lightning Large Leather Shield
0131CCC4:Deep Large Leather Shield
0131CD28:Dark Large Leather Shield
0131CD8C:Poison Large Leather Shield
0131CDF0:Blood Large Leather Shield
0131CE54:Raw Large Leather Shield
0131CEB8:Blessed Large Leather Shield
0131CF1C:Hollow Large Leather Shield
01323E70:Hawkwood's Shield
01323ED4:Hawkwood's Heavy Shield
01323F38:Hawkwood's Sharp Shield
01323F9C:Hawkwood's Refined Shield
01324000:Hawkwood's Simple Shield
01324064:Hawkwood's Crystal Shield
013240C8:Hawkwood's Fire Shield
0132412C:Hawkwood's Chaos Shield
01324190:Hawkwood's Lightning Shield
013241F4:Hawkwood's Deep Shield
01324258:Hawkwood's Dark Shield
013242BC:Hawkwood's Poison Shield
01324320:Hawkwood's Blood Shield
01324384:Hawkwood's Raw Shield
013243E8:Hawkwood's Blessed Shield
0132444C:Hawkwood's Hollow Shield
01326580:Iron Round Shield
013265E4:Heavy Iron Shield
01326648:Sharp Iron Shield
013266AC:Refined Iron Shield
01326710:Simple Iron Shield
01326774:Crystal Iron Shield
013267D8:Fire Iron Shield
0132683C:Chaos Iron Shield
013268A0:Lightning Iron Shield
01326904:Deep Iron Shield
01326968:Dark Iron Shield
013269CC:Poison Iron Shield
01326A30:Blood Iron Shield
01326A94:Raw Iron Shield
01326AF8:Blessed Iron Shield
01326B5C:Hollow Iron Shield
0132DAB0:Wooden Shield
0132DB14:Heavy Wooden Shield
0132DB78:Sharp Wooden Shield
0132DBDC:Refined Wooden Shield
0132DC40:Simple Wooden Shield
0132DCA4:Crystal Wooden Shield
0132DD08:Fire Wooden Shield
0132DD6C:Chaos Wooden Shield
0132DDD0:Lightning Wooden Shield
0132DE34:Deep Wooden Shield
0132DE98:Dark Wooden Shield
0132DEFC:Poison Wooden Shield
0132DF60:Blood Wooden Shield
0132DFC4:Raw Wooden Shield
0132E028:Blessed Wooden Shield
0132E08C:Hollow Wooden Shield
013301C0:Kite Shield
01330224:Heavy Kite Shield
01330288:Sharp Kite Shield
013302EC:Refined Kite Shield
01330350:Simple Kite Shield
013303B4:Crystal Kite Shield
01330418:Fire Kite Shield
0133047C:Chaos Kite Shield
013304E0:Lightning Kite Shield
01330544:Deep Kite Shield
013305A8:Dark Kite Shield
0133060C:Poison Kite Shield
01330670:Blood Kite Shield
013306D4:Raw Kite Shield
01330738:Blessed Kite Shield
0133079C:Hollow Kite Shield
013328D0:Ghru Rotshield
01332934:Heavy Ghru Rotshield
01332998:Sharp Ghru Rotshield
013329FC:Refined Ghru Rotshield
01332A60:Simple Ghru Rotshield
01332AC4:Crystal Ghru Rotshield
01332B28:Fire Ghru Rotshield
01332B8C:Chaos Ghru Rotshield
01332BF0:Lightning Ghru Rotshield
01332C54:Deep Ghru Rotshield
01332CB8:Dark Ghru Rotshield
01332D1C:Poison Ghru Rotshield
01332D80:Blood Ghru Rotshield
01332DE4:Raw Ghru Rotshield
01332E48:Blessed Ghru Rotshield
01332EAC:Hollow Ghru Rotshield
013376F0:Havel's Greatshield
01339E00:Target Shield
01339E64:Heavy Target Shield
01339EC8:Sharp Target Shield
01339F2C:Refined Target Shield
01339F90:Simple Target Shield
01339FF4:Crystal Target Shield
0133A058:Fire Target Shield
0133A0BC:Chaos Target Shield
0133A120:Lightning Target Shield
0133A184:Deep Target Shield
0133A1E8:Dark Target Shield
0133A24C:Poison Target Shield
0133A2B0:Blood Target Shield
0133A314:Raw Target Shield
0133A378:Blessed Target Shield
0133A3DC:Hollow Target Shield
0133C510:Elkhorn Round Shield
0133C574:Heavy Elkhorn Shield
0133C5D8:Sharp Elkhorn Shield
0133C63C:Refined Elkhorn Shield
0133C6A0:Simple Elkhorn Shield
0133C704:Crystal Elkhorn Shield
0133C768:Fire Elkhorn Shield
0133C7CC:Chaos Elkhorn Shield
0133C830:Lightning Elkhorn Shield
0133C894:Deep Elkhorn Shield
0133C8F8:Dark Elkhorn Shield
0133C95C:Poison Elkhorn Shield
0133C9C0:Blood Elkhorn Shield
0133CA24:Raw Elkhorn Shield
0133CA88:Blessed Elkhorn Shield
0133CAEC:Hollow Elkhorn Shield
0133EC20:Warrior's Round Shield
0133EC84:Heavy Warrior's Shield
0133ECE8:Sharp Warrior's Shield
0133ED4C:Refined Warrior's Shield
0133EDB0:Simple Warrior's Shield
0133EE14:Crystal Warrior's Shield
0133EE78:Fire Warrior's Shield
0133EEDC:Chaos Warrior's Shield
0133EF40:Lightning Warrior's Shield
0133EFA4:Deep Warrior's Shield
0133F008:Dark Warrior's Shield
0133F06C:Poison Warrior's Shield
0133F0D0:Blood Warrior's Shield
0133F134:Raw Warrior's Shield
0133F198:Blessed Warrior's Shield
0133F1FC:Hollow Warrior's Shield
01341330:Caduceus Round Shield
01341394:Heavy Caduceus Shield
013413F8:Sharp Caduceus Shield
0134145C:Refined Caduceus Shield
013414C0:Simple Caduceus Shield
01341524:Crystal Caduceus Shield
01341588:Fire Caduceus Shield
013415EC:Chaos Caduceus Shield
01341650:Lightning Caduceus Shield
013416B4:Deep Caduceus Shield
01341718:Dark Caduceus Shield
0134177C:Poison Caduceus Shield
013417E0:Blood Caduceus Shield
01341844:Raw Caduceus Shield
013418A8:Blessed Caduceus Shield
0134190C:Hollow Caduceus Shield
01343A40:Red and White Round Shield
01343AA4:Heavy Red and White Shield
01343B08:Sharp Red and White Shield
01343B6C:Refined Red and White Shield
01343BD0:Simple Red and White Shield
01343C34:Crystal Red and White Shield
01343C98:Fire Red and White Shield
01343CFC:Chaos Red and White Shield
01343D60:Lightning Red and White Shield
01343DC4:Deep Red and White Shield
01343E28:Dark Red and White Shield
01343E8C:Poison Red and White Shield
01343EF0:Blood Red and White Shield
01343F54:Raw Red and White Shield
01343FB8:Blessed Red and White Shield
0134401C:Hollow Red and White Shield
01346150:Plank Shield
013461B4:Heavy Plank Shield
01346218:Sharp Plank Shield
0134627C:Refined Plank Shield
013462E0:Simple Plank Shield
01346344:Crystal Plank Shield
013463A8:Fire Plank Shield
0134640C:Chaos Plank Shield
01346470:Lightning Plank Shield
013464D4:Deep Plank Shield
01346538:Dark Plank Shield
0134659C:Poison Plank Shield
01346600:Blood Plank Shield
01346664:Raw Plank Shield
013466C8:Blessed Plank Shield
0134672C:Hollow Plank Shield
01348860:Leather Shield
013488C4:Heavy Leather Shield
01348928:Sharp Leather Shield
0134898C:Refined Leather Shield
013489F0:Simple Leather Shield
01348A54:Crystal Leather Shield
01348AB8:Fire Leather Shield
01348B1C:Chaos Leather Shield
01348B80:Lightning Leather Shield
01348BE4:Deep Leather Shield
01348C48:Dark Leather Shield
01348CAC:Poison Leather Shield
01348D10:Blood Leather Shield
01348D74:Raw Leather Shield
01348DD8:Blessed Leather Shield
01348E3C:Hollow Leather Shield
0134AF70:Crimson Parma
0134AFD4:Heavy Crimson Parma
0134B038:Sharp Crimson Parma
0134B09C:Refined Crimson Parma
0134B100:Simple Crimson Parma
0134B164:Crystal Crimson Parma
0134B1C8:Fire Crimson Parma
0134B22C:Chaos Crimson Parma
0134B290:Lightning Crimson Parma
0134B2F4:Deep Crimson Parma
0134B358:Dark Crimson Parma
0134B3BC:Poison Crimson Parma
0134B420:Blood Crimson Parma
0134B484:Raw Crimson Parma
0134B4E8:Blessed Crimson Parma
0134B54C:Hollow Crimson Parma
0134D680:Eastern Iron Shield
0134D6E4:Heavy Eastern Shield
0134D748:Sharp Eastern Shield
0134D7AC:Refined Eastern Shield
0134D810:Simple Eastern Shield
0134D874:Crystal Eastern Shield
0134D8D8:Fire Eastern Shield
0134D93C:Chaos Eastern Shield
0134D9A0:Lightning Eastern Shield
0134DA04:Deep Eastern Shield
0134DA68:Dark Eastern Shield
0134DACC:Poison Eastern Shield
0134DB30:Blood Eastern Shield
0134DB94:Raw Eastern Shield
0134DBF8:Blessed Eastern Shield
0134DC5C:Hollow Eastern Shield
0134FD90:Llewellyn Shield
0134FDF4:Heavy Llewellyn Shield
0134FE58:Sharp Llewellyn Shield
0134FEBC:Refined Llewellyn Shield
0134FF20:Simple Llewellyn Shield
0134FF84:Crystal Llewellyn Shield
0134FFE8:Fire Llewellyn Shield
0135004C:Chaos Llewellyn Shield
013500B0:Lightning Llewellyn Shield
01350114:Deep Llewellyn Shield
01350178:Dark Llewellyn Shield
013501DC:Poison Llewellyn Shield
01350240:Blood Llewellyn Shield
013502A4:Raw Llewellyn Shield
01350308:Blessed Llewellyn Shield
0135036C:Hollow Llewellyn Shield
013524A0:Cleric's Parma
01352504:Heavy Cleric's Parma
01352568:Sharp Cleric's Parma
013525CC:Refined Cleric's Parma
01352630:Simpleton Cleric's Parma
01352694:Crystal Cleric's Parma
013526F8:Fire Cleric's Parma
0135275C:Chaos Cleric's Parma
013527C0:Lightning Cleric's Parma
01352824:Deep Cleric's Parma
01352888:Dark Cleric's Parma
013528EC:Poison Cleric's Parma
01352950:Blood Cleric's Parma
013529B4:Raw Cleric's Parma
01352A18:Blessed Cleric's Parma
01352A7C:Hollow Cleric's Parma
01354BB0:Golden Falcon Shield
01354C14:Heavy Falcon Shield
01354C78:Sharp Falcon Shield
01354CDC:Refined Falcon Shield
01354D40:Simple Falcon Shield
01354DA4:Crystal Falcon Shield
01354E08:Fire Falcon Shield
01354E6C:Chaos Falcon Shield
01354ED0:Lightning Falcon Shield
01354F34:Deep Falcon Shield
01354F98:Dark Falcon Shield
01354FFC:Poison Falcon Shield
01355060:Blood Falcon Shield
013550C4:Raw Falcon Shield
01355128:Blessed Falcon Shield
0135518C:Hollow Falcon Shield
013572C0:Sacred Bloom Shield
013599D0:Ancient Dragon Greatshield
01359A34:Heavy Ancient Dragon Great Shield
01359A98:Sharp Ancient Dragon Great Shield
01359AFC:Refined Ancient Dragon Great Shield
01359B60:Simpleton Ancient Dragon Great Shield
01359BC4:Crystal Ancient Dragon Great Shield
01359C28:Fire Ancient Dragon Great Shield
01359C8C:Chaos Ancient Dragon Great Shield
01359CF0:Lightning Ancient Dragon Great Shield
01359D54:Deep Ancient Dragon Great Shield
01359DB8:Dark Ancient Dragon Great Shield
01359E1C:Poison Ancient Dragon Great Shield
01359E80:Blood Ancient Dragon Great Shield
01359EE4:Raw Ancient Dragon Great Shield
01359F48:Blessed Ancient Dragon Great Shield
01359FAC:Hollow Ancient Dragon Great Shield
0135C0E0:Followers Shield
0135E7F0:Dragonhead Shield
01409650:Lothric Knight Shield
014096B4:Heavy Lothric Shield
01409718:Sharp Lothric Shield
0140977C:Refined Lothric Shield
014097E0:Simple Lothric Shield
01409844:Crystal Lothric Shield
014098A8:Fire Lothric Shield
0140990C:Chaos Lothric Shield
01409970:Lightning Lothric Shield
014099D4:Deep Lothric Shield
01409A38:Dark Lothric Shield
01409A9C:Poison Lothric Shield
01409B00:Blood Lothric Shield
01409B64:Raw Lothric Shield
01409BC8:Blessed Lothric Shield
01409C2C:Hollow Lothric Shield
01410B80:Knight Shield
01410BE4:Heavy Knight Shield
01410C48:Sharp Knight Shield
01410CAC:Refined Knight Shield
01410D10:Simple Knight Shield
01410D74:Crystal Knight Shield
01410DD8:Fire Knight Shield
01410E3C:Chaos Knight Shield
01410EA0:Lightning Knight Shield
01410F04:Deep Knight Shield
01410F68:Dark Knight Shield
01410FCC:Poison Knight Shield
01411030:Blood Knight Shield
01411094:Raw Knight Shield
014110F8:Blessed Knight Shield
0141115C:Hollow Knight Shield
014159A0:Pontiff Knight Shield
01415A04:Heavy Pontiff Knight Shield
01415A68:Sharp Pontiff Knight Shield
01415ACC:Refined Pontiff Knight Shield
01415B30:Simpleton Pontiff Knight Shield
01415B94:Crystal Pontiff Knight Shield
01415BF8:Fire Pontiff Knight Shield
01415C5C:Chaos Pontiff Knight Shield
01415CC0:Lightning Pontiff Knight Shield
01415D24:Deep Pontiff Knight Shield
01415D88:Dark Pontiff Knight Shield
01415DEC:Poison Pontiff Knight Shield
01415E50:Blood Pontiff Knight Shield
01415EB4:Raw Pontiff Knight Shield
01415F18:Blessed Pontiff Knight Shield
01415F7C:Hollow Pontiff Knight Shield
014180B0:Carthus Shield
01418114:Heavy Carthus Shield
01418178:Sharp Carthus Shield
014181DC:Refined Carthus Shield
01418240:Simple Carthus Shield
014182A4:Crystal Carthus Shield
01418308:Fire Carthus Shield
0141836C:Chaos Carthus Shield
014183D0:Lightning Carthus Shield
01418434:Deep Carthus Shield
01418498:Dark Carthus Shield
014184FC:Poison Carthus Shield
01418560:Blood Carthus Shield
014185C4:Raw Carthus Shield
01418628:Blessed Carthus Shield
0141868C:Hollow Carthus Shield
0141F5E0:Black Knight Shield
0141F644:Heavy Black Knight Shield
0141F6A8:Sharp Black Knight Shield
0141F70C:Refined Black Knight Shield
0141F770:Simple Black Knight Shield
0141F7D4:Crystal Black Knight Shield
0141F838:Fire Black Knight Shield
0141F89C:Chaos Black Knight Shield
0141F900:Lightning Black Knight Shield
0141F964:Deep Black Knight Shield
0141F9C8:Dark Black Knight Shield
0141FA2C:Poison Black Knight Shield
0141FA90:Blood Black Knight Shield
0141FAF4:Raw Black Knight Shield
0141FB58:Blessed Black Knight Shield
0141FBBC:Hollow Black Knight Shield
01421CF0:Prince's Shield
01424400:Silver Knight Shield
01424464:Heavy Silver Knight Shield
014244C8:Sharp Silver Knight Shield
0142452C:Refined Silver Knight Shield
01424590:Simple Silver Knight Shield
014245F4:Crystal Silver Knight Shield
01424658:Fire Silver Knight Shield
014246BC:Chaos Silver Knight Shield
01424720:Lightning Silver Knight Shield
01424784:Deep Silver Knight Shield
014247E8:Dark Silver Knight Shield
0142484C:Poison Silver Knight Shield
014248B0:Blood Silver Knight Shield
01424914:Raw Silver Knight Shield
01424978:Blessed Silver Knight Shield
014249DC:Hollow Silver Knight Shield
01426B10:Spiked Shield
01426B74:Heavy Spiked Shield
01426BD8:Sharp Spiked Shield
01426C3C:Refined Spiked Shield
01426CA0:Simple Spiked Shield
01426D04:Crystal Spiked Shield
01426D68:Fire Spiked Shield
01426DCC:Chaos Spiked Shield
01426E30:Lightning Spiked Shield
01426E94:Deep Spiked Shield
01426EF8:Dark Spiked Shield
01426F5C:Poison Spiked Shield
01426FC0:Blood Spiked Shield
01427024:Raw Spiked Shield
01427088:Blessed Spiked Shield
014270EC:Hollow Spiked Shield
01429220:Pierce Shield
01429284:Heavy Pierce Shield
014292E8:Sharp Pierce Shield
0142934C:Refined Pierce Shield
014293B0:Simple Pierce Shield
01429414:Crystal Pierce Shield
01429478:Fire Pierce Shield
014294DC:Chaos Pierce Shield
01429540:Lightning Pierce Shield
014295A4:Deep Pierce Shield
01429608:Dark Pierce Shield
0142966C:Poison Pierce Shield
014296D0:Blood Pierce Shield
01429734:Raw Pierce Shield
01429798:Blessed Pierce Shield
014297FC:Hollow Pierce Shield
0142B930:East-West Shield
0142B994:Heavy East-West Shield
0142B9F8:Sharp East-West Shield
0142BA5C:Refined East-West Shield
0142BAC0:Simple East-West Shield
0142BB24:Crystal East-West Shield
0142BB88:Fire East-West Shield
0142BBEC:Chaos East-West Shield
0142BC50:Lightning East-West Shield
0142BCB4:Deep East-West Shield
0142BD18:Dark East-West Shield
0142BD7C:Poison East-West Shield
0142BDE0:Blood East-West Shield
0142BE44:Raw East-West Shield
0142BEA8:Blessed East-West Shield
0142BF0C:Hollow East-West Shield
0142E040:Sunlight Shield
0142E0A4:Heavy Sunlight Shield
0142E108:Sharp Sunlight Shield
0142E16C:Refined Sunlight Shield
0142E1D0:Simple Sunlight Shield
0142E234:Crystal Sunlight Shield
0142E298:Fire Sunlight Shield
0142E2FC:Chaos Sunlight Shield
0142E360:Lightning Sunlight Shield
0142E3C4:Deep Sunlight Shield
0142E428:Dark Sunlight Shield
0142E48C:Poison Sunlight Shield
0142E4F0:Blood Sunlight Shield
0142E554:Raw Sunlight Shield
0142E5B8:Blessed Sunlight Shield
0142E61C:Hollow Sunlight Shield
01430750:Crest Shield
014307B4:Heavy Crest Shield
01430818:Sharp Crest Shield
0143087C:Refined Crest Shield
014308E0:Simpleton Crest Shield
01430944:Crystal Crest Shield
014309A8:Fire Crest Shield
01430A0C:Chaos Crest Shield
01430A70:Lightning Crest Shield
01430AD4:Deep Crest Shield
01430B38:Dark Crest Shield
01430B9C:Poison Crest Shield
01430C00:Blood Crest Shield
01430C64:Raw Crest Shield
01430CC8:Blessed Crest Shield
01430D2C:Hollow Crest Shield
01432E60:Dragon Crest Shield
01432EC4:Heavy Dragon Crest Shield
01432F28:Sharp Dragon Crest Shield
01432F8C:Refined Dragon Crest Shield
01432FF0:Simpleton Dragon Crest Shield
01433054:Crystal Dragon Crest Shield
014330B8:Fire Dragon Crest Shield
0143311C:Chaos Dragon Crest Shield
01433180:Lightning Dragon Crest Shield
014331E4:Deep Dragon Crest Shield
01433248:Dark Dragon Crest Shield
014332AC:Poison Dragon Crest Shield
01433310:Blood Dragon Crest Shield
01433374:Raw Dragon Crest Shield
014333D8:Blessed Dragon Crest Shield
0143343C:Hollow Dragon Crest Shield
01435570:Spider Shield
014355D4:Heavy Spider Shield
01435638:Sharp Spider Shield
0143569C:Refined Spider Shield
01435700:Simple Spider Shield
01435764:Crystal Spider Shield
014357C8:Fire Spider Shield
0143582C:Chaos Spider Shield
01435890:Lightning Spider Shield
014358F4:Deep Spider Shield
01435958:Dark Spider Shield
014359BC:Poison Spider Shield
01435A20:Blood Spider Shield
01435A84:Raw Spider Shield
01435AE8:Blessed Spider Shield
01435B4C:Hollow Spider Shield
01437C80:Grass Crest Shield
01437CE4:Heavy Grass Crest Shield
01437D48:Sharp Grass Crest Shield
01437DAC:Refined Grass Crest Shield
01437E10:Simpleton Grass Crest Shield
01437E74:Crystal Grass Crest Shield
01437ED8:Fire Grass Crest Shield
01437F3C:Chaos Grass Crest Shield
01437FA0:Lightning Grass Crest Shield
01438004:Deep Grass Crest Shield
01438068:Dark Grass Crest Shield
014380CC:Poison Grass Crest Shield
01438130:Blood Grass Crest Shield
01438194:Raw Grass Crest Shield
014381F8:Blessed Grass Crest Shield
0143825C:Hollow Grass Crest Shield
0143A390:Sunset Shield
0143A3F4:Heavy Sunset Shield
0143A458:Sharp Sunset Shield
0143A4BC:Refined Sunset Shield
0143A520:Simple Sunset Shield
0143A584:Crystal Sunset Shield
0143A5E8:Fire Sunset Shield
0143A64C:Chaos Sunset Shield
0143A6B0:Lightning Sunset Shield
0143A714:Deep Sunset Shield
0143A778:Dark Sunset Shield
0143A7DC:Poison Sunset Shield
0143A840:Blood Sunset Shield
0143A8A4:Raw Sunset Shield
0143A908:Blessed Sunset Shield
0143A96C:Hollow Sunset Shield
0143CAA0:Golden Wing Crest Shield
0143CB04:Heavy Golden Wing Crest Shield
0143CB68:Sharp Golden Wing Crest Shield
0143CBCC:Refined Golden Wing Crest Shield
0143CC30:Simpleton Golden Wing Crest Shield
0143CC94:Crystal Golden Wing Crest Shield
0143CCF8:Fire Golden Wing Crest Shield
0143CD5C:Chaos Golden Wing Crest Shield
0143CDC0:Lightning Golden Wing Crest Shield
0143CE24:Deep Golden Wing Crest Shield
0143CE88:Dark Golden Wing Crest Shield
0143CEEC:Poison Golden Wing Crest Shield
0143CF50:Blood Golden Wing Crest Shield
0143CFB4:Raw Golden Wing Crest Shield
0143D018:Blessed Golden Wing Crest Shield
0143D07C:Hollow Golden Wing Crest Shield
0143F1B0:Blue Wooden Shield
0143F214:Heavy Blue Shield
0143F278:Sharp Blue Shield
0143F2DC:Refined Blue Shield
0143F340:Simple Blue Shield
0143F3A4:Crystal Blue Shield
0143F408:Fire Blue Shield
0143F46C:Chaos Blue Shield
0143F4D0:Lightning Blue Shield
0143F534:Deep Blue Shield
0143F598:Dark Blue Shield
0143F5FC:Poison Blue Shield
0143F660:Blood Blue Shield
0143F6C4:Raw Blue Shield
0143F728:Blessed Blue Shield
0143F78C:Hollow Blue Shield
014418C0:Silver Eagle Kite Shield
01441924:Heavy Eagle Kite Shield
01441988:Sharp Eagle Kite Shield
014419EC:Refined Eagle Kite Shield
01441A50:Simple Eagle Kite Shield
01441AB4:Crystal Eagle Kite Shield
01441B18:Fire Eagle Kite Shield
01441B7C:Chaos Eagle Kite Shield
01441BE0:Lightning Eagle Kite Shield
01441C44:Deep Eagle Kite Shield
01441CA8:Dark Eagle Kite Shield
01441D0C:Poison Eagle Kite Shield
01441D70:Blood Eagle Kite Shield
01441DD4:Raw Eagle Kite Shield
01441E38:Blessed Eagle Kite Shield
01441E9C:Hollow Eagle Kite Shield
01443FD0:Stone Parma
01444034:Heavy Stone Parma
01444098:Sharp Stone Parma
014440FC:Refined Stone Parma
01444160:Simple Stone Parma
014441C4:Crystal Stone Parma
01444228:Fire Stone Parma
0144428C:Chaos Stone Parma
014442F0:Lightning Stone Parma
01444354:Deep Stone Parma
014443B8:Dark Stone Parma
0144441C:Poison Stone Parma
01444480:Blood Stone Parma
014444E4:Raw Stone Parma
01444548:Blessed Stone Parma
014445AC:Hollow Stone Parma
014466E0:Spirit Tree Crest Shield
01446744:Heavy Sacred Wood Crest Shield
014467A8:Sharp Sacred Wood Crest Shield
0144680C:Refined Sacred Wood Crest Shield
01446870:Simpleton Sacred Wood Crest Shield
014468D4:Crystal Sacred Wood Crest Shield
01446938:Fire Sacred Wood Crest Shield
0144699C:Chaos Sacred Wood Crest Shield
01446A00:Lightning Sacred Wood Crest Shield
01446A64:Deep Sacred Wood Crest Shield
01446AC8:Dark Sacred Wood Crest Shield
01446B2C:Poison Sacred Wood Crest Shield
01446B90:Blood Sacred Wood Crest Shield
01446BF4:Raw Sacred Wood Crest Shield
01446C58:Blessed Sacred Wood Crest Shield
01446CBC:Hollow Sacred Wood Crest Shield
01448DF0:Porcine Shield
01448E54:Heavy Porcine Shield
01448EB8:Sharp Porcine Shield
01448F1C:Refined Porcine Shield
01448F80:Simple Porcine Shield
01448FE4:Crystal Porcine Shield
01449048:Fire Porcine Shield
014490AC:Chaos Porcine Shield
01449110:Lightning Porcine Shield
01449174:Deep Porcine Shield
014491D8:Dark Porcine Shield
0144923C:Poison Porcine Shield
014492A0:Blood Porcine Shield
01449304:Raw Porcine Shield
01449368:Blessed Porcine Shield
014493CC:Hollow Porcine Shield
0144B500:Shield of Want
0144DC10:Wargod Wooden Shield
0144DC74:Heavy Wargod Shield
0144DCD8:Sharp Wargod Shield
0144DD3C:Refined Wargod Shield
0144DDA0:Simple Wargod Shield
0144DE04:Crystal Wargod Shield
0144DE68:Fire Wargod Shield
0144DECC:Chaos Wargod Shield
0144DF30:Lightning Wargod Shield
0144DF94:Deep Wargod Shield
0144DFF8:Dark Wargod Shield
0144E05C:Poison Wargod Shield
0144E0C0:Blood Wargod Shield
0144E124:Raw Wargod Shield
0144E188:Blessed Wargod Shield
0144E1EC:Hollow Wargod Shield
01450320:Ethereal Oak Shield
01452A30:Dragonhead Greatshield
014FD890:Lothric Knight Greatshield
014FD8F4:Heavy Lothric Greatshield
014FD958:Sharp Lothric Greatshield
014FD9BC:Refined Lothric Greatshield
014FDA20:Simple Lothric Greatshield
014FDA84:Crystal Lothric Greatshield
014FDAE8:Fire Lothric Greatshield
014FDB4C:Chaos Lothric Greatshield
014FDBB0:Lightning Lothric Greatshield
014FDC14:Deep Lothric Greatshield
014FDC78:Dark Lothric Greatshield
014FDCDC:Poison Lothric Greatshield
014FDD40:Blood Lothric Greatshield
014FDDA4:Raw Lothric Greatshield
014FDE08:Blessed Lothric Greatshield
014FDE6C:Hollow Lothric Greatshield
014FFFA0:Cathedral Knight Greatshield
01500004:Heavy Cathedral Greatshield
01500068:Sharp Cathedral Greatshield
015000CC:Refined Cathedral Greatshield
01500130:Simple Cathedral Greatshield
01500194:Crystal Cathedral Greatshield
015001F8:Fire Cathedral Greatshield
0150025C:Chaos Cathedral Greatshield
015002C0:Lightning Cathedral Greatshield
01500324:Deep Cathedral Greatshield
01500388:Dark Cathedral Greatshield
015003EC:Poison Cathedral Greatshield
01500450:Blood Cathedral Greatshield
015004B4:Raw Cathedral Greatshield
01500518:Blessed Cathedral Greatshield
0150057C:Hollow Cathedral Greatshield
01504DC0:Dragonslayer Greatshield
015074D0:Moaning Shield
01509BE0:Ancient Dragon Great Shield
0150C2F0:Yhorm's Greatshield
0150EA00:Black Iron Greatshield
0150EA64:Heavy Black Iron Greatshield
0150EAC8:Sharp Black Iron Greatshield
0150EB2C:Refined Black Iron Greatshield
0150EB90:Simple Black Iron Greatshield
0150EBF4:Crystal Black Iron Greatshield
0150EC58:Fire Black Iron Greatshield
0150ECBC:Chaos Black Iron Greatshield
0150ED20:Lightning Black Iron Greatshield
0150ED84:Deep Black Iron Greatshield
0150EDE8:Dark Black Iron Greatshield
0150EE4C:Poison Black Iron Greatshield
0150EEB0:Blood Black Iron Greatshield
0150EF14:Raw Black Iron Greatshield
0150EF78:Blessed Black Iron Greatshield
0150EFDC:Hollow Black Iron Greatshield
01511110:Wolf Knight's Greatshield
01513820:Twin Dragon Greatshield
01513884:Heavy Twin Dragon Greatshield
015138E8:Sharp Twin Dragon Greatshield
0151394C:Refined Twin Dragon Greatshield
015139B0:Simple Twin Dragon Greatshield
01513A14:Crystal Twin Dragon Greatshield
01513A78:Fire Twin Dragon Greatshield
01513ADC:Chaos Twin Dragon Greatshield
01513B40:Lightning Twin Dragon Greatshield
01513BA4:Deep Twin Dragon Greatshield
01513C08:Dark Twin Dragon Greatshield
01513C6C:Poison Twin Dragon Greatshield
01513CD0:Blood Twin Dragon Greatshield
01513D34:Raw Twin Dragon Greatshield
01513D98:Blessed Twin Dragon Greatshield
01513DFC:Hollow Twin Dragon Greatshield
01515F30:Greatshield of Glory
01515F94:Heavy Greatshield of Glory
01515FF8:Sharp Greatshield of Glory
0151605C:Refined Greatshield of Glory
015160C0:Simple Greatshield of Glory
01516124:Crystal Greatshield of Glory
01516188:Fire Greatshield of Glory
015161EC:Chaos Greatshield of Glory
01516250:Lightning Greatshield of Glory
015162B4:Deep Greatshield of Glory
01516318:Dark Greatshield of Glory
0151637C:Poison Greatshield of Glory
015163E0:Blood Greatshield of Glory
01516444:Raw Greatshield of Glory
015164A8:Blessed Greatshield of Glory
0151650C:Hollow Greatshield of Glory
01518640:Curse Ward Greatshield
015186A4:Heavy Curse Ward Greatshield
01518708:Sharp Curse Ward Greatshield
0151876C:Refined Curse Ward Greatshield
015187D0:Simple Curse Ward Greatshield
01518834:Crystal Curse Ward Greatshield
01518898:Fire Curse Ward Greatshield
015188FC:Chaos Curse Ward Greatshield
01518960:Lightning Curse Ward Greatshield
015189C4:Deep Curse Ward Greatshield
01518A28:Dark Curse Ward Greatshield
01518A8C:Poison Curse Ward Greatshield
01518AF0:Blood Curse Ward Greatshield
01518B54:Raw Curse Ward Greatshield
01518BB8:Blessed Curse Ward Greatshield
01518C1C:Hollow Curse Ward Greatshield
0151AD50:Bonewheel Shield
0151ADB4:Heavy Bonewheel Shield
0151AE18:Sharp Bonewheel Shield
0151AE7C:Refined Bonewheel Shield
0151AEE0:Simple Bonewheel Shield
0151AF44:Crystal Bonewheel Shield
0151AFA8:Fire Bonewheel Shield
0151B00C:Chaos Bonewheel Shield
0151B070:Lightning Bonewheel Shield
0151B0D4:Deep Bonewheel Shield
0151B138:Dark Bonewheel Shield
0151B19C:Poison Bonewheel Shield
0151B200:Blood Bonewheel Shield
0151B264:Raw Bonewheel Shield
0151B2C8:Blessed Bonewheel Shield
0151B32C:Hollow Bonewheel Shield
0151D460:Stone Greatshield
0151D4C4:Heavy Stone Greatshield
0151D528:Sharp Stone Greatshield
0151D58C:Refined Stone Greatshield
0151D5F0:Simple Stone Greatshield
0151D654:Crystal Stone Greatshield
0151D6B8:Fire Stone Greatshield
0151D71C:Chaos Stone Greatshield
0151D780:Lightning Stone Greatshield
0151D7E4:Deep Stone Greatshield
0151D848:Dark Stone Greatshield
0151D8AC:Poison Stone Greatshield
0151D910:Blood Stone Greatshield
0151D974:Raw Stone Greatshield
0151D9D8:Blessed Stone Greatshield
0151DA3C:Hollow Stone Greatshield
015EF3C0:Torch
015F1AD0:Follower Torch
]]

ArmorDropDownList = [[1:--Armor List: 395 Items Total
FFFFFFFF:Nothing
00000000:Nothing
00061A80:Dingy Hood
00061E68:Dingy Robe
00062250:Dingy Gloves
00062638:Blood-Stained Skirt
000F4240:Dragon Head
000F4628:Dragon Body
000F4A10:Dragon Arms
000F4DF8:Dragon Legs
0121EAC0:Fallen Knight Helm
0121EEA8:Fallen Knight Armor
0121F290:Fallen Knight Gauntlets
0121F678:Fallen Knight Trousers
01298BE0:Knight Helm
01298FC8:Knight Armor
012993B0:Knight Gauntlets
01299798:Knight Leggings
01312D00:Burial Knight's Helm
013130E8:Burial Knight's Armor
013134D0:Burial Knight's Gauntlets
013138B8:Burial Knight's Leggings
01406F40:Firelink Helm
01407328:Firelink Armor
01407710:Firelink Gauntlets
01407AF8:Firelink Leggings
01481060:Sellsword Helm
01481448:Sellsword Armor
01481830:Sellsword Gauntlet
01481C18:Sellsword Trousers
014FB180:Herald Helm
014FB568:Herald Armor
014FB950:Herald Gloves
014FBD38:Herald Trousers
015752A0:Sunless Veil
01575688:Sunless Armor
01575A70:Sunless Gauntlets
01575E58:Sunless Leggings
015EF3C0:Black Hand Hat
015EF7A8:Black Hand Armor
015EFB90:Assassin Gloves
015EFF78:Assassin Trousers
01607A60:Assassin Hood
01607E48:Assassin Armor
016694E0:Xanthous Crown
016698C8:Xanthous Overcoat
01669CB0:Xanthous Gloves
0166A098:Xanthous Trousers
016E3600:Northern Helm
016E39E8:Northern Armor
016E3DD0:Northern Gloves
016E41B8:Northern Trousers
0175D720:Morne's Helm
0175DB08:Morne's Armor
0175DEF0:Morne's Gauntlets
0175E2D8:Morne's Leggings
017D7840:Silver Mask
017D7C28:Leonhard's Garb
017D8010:Leonhard's Gauntlets
017D83F8:Leonhard's Trousers
01851960:Sneering Mask
01851D48:Pale Shade Robe
01852130:Pale Shade Gloves
01852518:Pale Shade Trousers
018CBA80:Sunset Helm
018CBE68:Sunset Armor
018CC250:Sunset Gauntlets
018CC638:Sunset Leggings
01945BA0:Old Sage's Blindfold
01945F88:Cornyx's Garb
01946370:Cornyx's Wrap
01946758:Cornyx's Skirt
019BFCC0:Executioner Helm
019C00A8:Executioner Armor
019C0490:Executioner Gauntlets
019C0878:Executioner Leggings
01A39DE0:Billed Mask
01A3A1C8:Black Dress
01A3A5B0:Black Gauntlets
01A3A998:Black Leggings
01AB3F00:Pyromancer Crown
01AB42E8:Pyromancer Garb
01AB46D0:Pyromancer Wrap
01AB4AB8:Pyromancer Trousers
01B2E408:Antiquated Plain Garb
01B2E7F0:Violet Wrappings
01B2EBD8:Loincloth
01BA8140:Court Sorcerer Hood
01BA8528:Court Sorcerer Robe
01BA8910:Court Sorcerer Gloves
01BA8CF8:Court Sorcerer Trousers
01C22260:Shira's Crown
01C22648:Shira's Armor
01C22A30:Shira's Gloves
01C22E18:Shira's Trousers
01C9C380:Sorcerer Hood
01C9C768:Sorcerer Robe
01C9CB50:Sorcerer Gloves
01C9CF38:Sorcerer Trousers
01CB4E08:Clandestine Coat
01D905C0:Cleric Hat
01D909A8:Cleric Blue Robe
01D90D90:Cleric Gloves
01D91178:Cleric Trousers
01E84800:Lapp's Helm
01E84BE8:Lapp's Armor
01E84FD0:Lapp's Gauntlets
01E853B8:Lapp's Leggings
01F78A40:Grotto Hat
01F78E28:Grotto Robe
01F79210:Grotto Wrap
01F795F8:Grotto Trousers
02625A00:Steel Soldier Helm
02625DE8:Deserter Armor
026261D0:Soldier's Gauntlets
026265B8:Deserter Trousers
0263E0A0:Soldier's Hood
02656740:Thief Mask
029020C0:Sage's Big Hat
029024A8:Elder's Robe
029F6300:Aristocrat's Mask
029F66E8:Jailer Robe
029F6AD0:Jailer Gloves
029F6EB8:Jailer Trousers
02A70420:Saint's Veil
02A70808:Saint's Dress
02AEA540:Footman's Hood
02AEA928:Footman's Overcoat
02AEAD10:Footman's Bracelets
02AEB0F8:Footman's Trousers
02BDE780:Grave Warden Hood
02BDEB68:Grave Warden Robe
02BDEF50:Grave Warden Wrap
02BDF338:Grave Warden Skirt
02CD29C0:Worker Hat
02CD2DA8:Worker Garb
02CD3190:Worker Gloves
02CD3578:Worker Trousers
02D4CAE0:Thrall Hood
02DC6C00:Evangelist Hat
02DC6FE8:Evangelist Robe
02DC73D0:Evangelist Gloves
02DC77B8:Evangelist Trousers
02E40D20:Scholar's Shed Skin
02E41108:Scholar's Robe
02EBAE40:Winged Knight Helm
02EBB228:Winged Knight Armor
02EBB610:Winged Knight Gauntlets
02EBB9F8:Winged Knight Leggings
030291A0:Cathedral Knight Helm
03029588:Cathedral Knight Armor
03029970:Cathedral Knight Gauntlets
03029D58:Cathedral Knight Leggings
03197500:Lothric Knight Helm
031978E8:Lothric Knight Armor
03197CD0:Lothric Knight Gauntlets
031980B8:Lothric Knight Leggings
0328B740:Outrider Knight Helm
0328BB28:Outrider Knight Armor
0328BF10:Outrider Knight Gauntlets
0328C2F8:Outrider Knight Leggings
0337F980:Black Knight Helm
0337FD68:Black Knight Armor
03380150:Black Knight Gauntlets
03380538:Black Knight Leggings
033F9AA0:Dark Mask
033F9E88:Dark Armor
033FA270:Dark Gauntlets
033FA658:Dark Leggings
03473BC0:Exile Mask
03473FA8:Exile Armor
03474390:Exile Gauntlets
03474778:Exile Leggings
03567E00:Pontiff Knight Crown
035681E8:Pontiff Knight Armor
035685D0:Pontiff Knight Gauntlets
035689B8:Pontiff Knight Leggings
0365C040:Golden Crown
0365C428:Dragonscale Armor
0365C810:Golden Bracelets
0365CBF8:Dragonscale Waistcloth
036D6160:Wolnir's Crown
03750280:Undead Legion Helm
03750668:Undead Legion Armor
03750A50:Undead Legion Gauntlet
03750E38:Undead Legion Leggings
038BE5E0:Man Serpent's Mask
038BE9C8:Man Serpent's Robe
03938700:Fire Witch Helm
03938AE8:Fire Witch Armor
03938ED0:Fire Witch Gauntlets
039392B8:Fire Witch Leggings
03A2C940:Lorian's Helm
03A2CD28:Lorian's Armor
03A2D110:Lorian's Gauntlets
03A2D4F8:Lorian's Leggings
03AA6A60:Hood of Prayer
03AA6E48:Robe of Prayer
03AA7618:Skirt of Prayer
03B20B80:Giant's crown
03B20F68:Giant's Armor
03B21350:Giant's Gauntlets
03B21738:Giant's Leggings
03C14DC0:Dancer's Crown
03C151A8:Dancer's Armor
03C15590:Dancer's Gauntlets
03C15978:Dancer's Leggings
03C8EEE0:Ringed Knight Hood
03C8F2C8:Ringed Knight Armor
03C8F6B0:Ringed Knight Gauntlets
03C8FA98:Ringed Knight Leggings
03D09000:Gundyr's Helm
03D093E8:Gundyr's Armor
03D097D0:Gundyr's Gauntlets
03D09BB8:Gundyr's Leggings
03D83120:Harald Legion Head CUT
03D83508:Harald Legion Armor
03D838F0:Harald Legion Gauntlets
03D83CD8:Harald Legion Leggings
03DFD240:Old Monarch's Crown
03DFD628:Old Monarch's Robe
03EF1480:Archdeacon White Crown
03EF1868:Archdeacon Holy Garb
03EF2038:Archdeacon Skirt
03F6B988:Deacon Robe
03F6C158:Deacon Skirt
03FE56C0:Frigid Valley Mask
0405F7E0:Iron Dragonslayer Helm
0405FBC8:Iron Dragonslayer Armor
0405FFB0:Iron Dragonslayer Gauntlets
04060398:Iron Dragonslayer Leggings
040D9900:(Fire Keeper Mask)
040D9CE8:Fire Keeper Robe
040DA0D0:Fire Keeper Gloves
040DA4B8:Fire Keeper Skirt
04153A20:White Preacher Head
042C1D80:Chain Helm
042C2168:Chain Armor
042C2550:Leather Gauntlets
042C2938:Chain Leggings
043B5FC0:Nameless Knight Helm
043B63A8:Nameless Knight Armor
043B6790:Nameless Knight Gauntlets
043B6B78:Nameless Knight Leggings
044AA200:Elite Knight Helm
044AA5E8:Elite Knight Armor
044AA9D0:Elite Knight Gauntlets
044AADB8:Elite Knight Leggings
0459E440:Faraam Helm
0459E828:Faraam Armor
0459EC10:Faraam Gauntlets
0459EFF8:Faraam Boots
04692680:Catarina Helm
04692A68:Catarina Armor
04692E50:Catarina Gauntlets
04693238:Catarina Leggings
0470C7A0:Standard Helm
0470CB88:Hard Leather Armor
0470CF70:Hard Leather Gauntlets
0470D358:Hard Leather Boots
047868C0:Havel's Helm
04786CA8:Havel's Armor
04787090:Havel's Gauntlets
04787478:Havel's Leggings
048009E0:Brigand Hood
04800DC8:Brigand Armor
048011B0:Brigand Gauntlets
04801598:Brigand Trousers
0487AB00:Pharis's Hat
0487AEE8:Leather Armor
0487B2D0:Leather Gloves
0487B6B8:Leather Boots
048F4C20:Ragged Mask
048F5008:Master's Attire
048F53F0:Master's Gloves
048F57D8:Loincloth
0496ED40:Old Sorcerer Hat
0496F128:Old Sorcerer Coat
0496F510:Old Sorcerer Gauntlets
0496F8F8:Old Sorcerer Boots
049E8E60:Conjurator Hood
049E9248:Conjurator Robe
049E9630:Conjurator Manchettes
049E9A18:Conjurator Boots
04A62F80:Thief Mask
04A63368:Black Leather Armor
04A63750:Black Leather Gloves
04A63B38:Black Leather Boots
04ADD0A0:Symbol of Avarice
04B571C0:Creighton's Steel Mask
04B575A8:Mirrah Chain Mail
04B57990:Mirrah Chain Gloves
04B57D78:Mirrah Chain Leggings
04BD12E0:Maiden Hood
04BD16C8:Maiden Robe
04BD1AB0:Maiden Gloves
04BD1E98:Maiden Skirt
04C4B400:Alva Helm
04C4B7E8:Alva Armor
04C4BBD0:Alva Gauntlets
04C4BFB8:Alva Leggings
04CC5520:Ruin Helm
04CC5908:Ruin Armor
04CC5CF0:Ruin Gauntlets
04CC60D8:Ruin Leggings
04D3F640:Shadow Mask
04D3FA28:Shadow Garb
04D3FE10:Shadow Gauntlets
04D401F8:Shadow Leggings
04DB9760:Desert Pyromancer Hood
04DB9B48:Desert Pyromancer Garb
04DB9F30:Desert Pyromancer Gloves
04DBA318:Desert Pyromancer Skirt
04E33880:Eastern Helm
04E33C68:Eastern Armor
04E34050:Eastern Gauntlets
04E34438:Eastern Leggings
04F27AC0:Helm of Favor
04F27EA8:Embraced Armor of Favor
04F28290:Gauntlets of Favor
04F28678:Leggings of Favor
04FA1BE0:Black Witch Veil
04EAD9A0:Black Witch Hat
04EADD88:Black Witch Garb
04EAE170:Black Witch Wrappings
04EAE558:Black Witch Trousers
0501BD00:Brass Helm
0501C0E8:Brass Armor
0501C4D0:Brass Gauntlets
0501C8B8:Brass Leggings
05095E20:Blindfold Mask
0510FF40:Silver Knight Helm
05110328:Silver Knight Armor
05110710:Silver Knight Gauntlets
05110AF8:Silver Knight Leggings
05204180:Lucatiel's Mask
05204568:Mirrah Vest
05204950:Mirrah Gloves
05204D38:Mirrah Trousers
052F83C0:Iron Helm
052F87A8:Armor of the Sun
052F8B90:Iron Bracelets
052F8F78:Iron Leggings
053EC600:Drakeblood Helm
053EC9E8:Drakeblood Armor
053ECDD0:Drakeblood Gauntlets
053ED1B8:Drakeblood Leggings
054E0C28:Drang Armor
054E1010:Drang Gauntlets
054E13F8:Drang Shoes
055D4A80:Black Iron Helm
055D4E68:Black Iron Armor
055D5250:Black Iron Gauntlets
055D5638:Black Iron Leggings
056C8CC0:Painting Guardian Hood
056C90A8:Painting Guardian Gown
056C9490:Painting Guardian Gloves
056C9878:Painting Guardian Waistcloth
057BCF00:Wolf Knight Helm
057BD2E8:Wolf Knight Armor
057BD6D0:Wolf Knight Gauntlets
057BDAB8:Wolf Knight Leggings
058B1140:Dragonslayer Helm
058B1528:Dragonslayer Armor
058B1910:Dragonslayer Gauntlets
058B1CF8:Dragonslayer Leggings
059A5380:Smough's Helm
059A5768:Smough's Armor
059A5B50:Smough's Gauntlets
059A5F38:Smough's Leggings
05A995C0:Hexer's Hood
05A999A8:Hexer's Robes
05A99D90:Hexer's Gloves
05A9A178:Hexer's Boots
05B8D800:Helm of Thorns
05B8DBE8:Armor of Thorns
05B8DFD0:Gauntlets of Thorns
05B8E3B8:Leggings of Thorns
05C81A40:Varangian Helm
05C81E28:Varangian Armor
05C82210:Varangian Cuffs
05C825F8:Varangian Leggings
05D75C80:Crown of Dusk
05D76068:Antiquated Dress
05D76450:Antiquated Gloves
05D76838:Antiquated Skirt
05E69EC0:Karla's Pointed Hat
05E6A2A8:Karla's Coat
05E6A690:Karla's Gloves
05E6AA78:Karla's Trousers
037CA3A0:Follower Helm
037CA788:Follower Armor
037CAB70:Follower Gloves
037CAF58:Follower Boots
034EDCE0:Slave Knight Hood
034EE0C8:Slave Knight Armor
034EE4B0:Slave Knight Gauntlets
034EE898:Slave Knight Leggings
01312D00:Vilhelm's Helm
013130E8:Vilhelm's Armor
013134D0:Vilhelm's Gauntlets
013138B8:Vilhelm's Leggings
039B2820:Millwood Knight Helm
039B2C08:Millwood Knight Armor
039B2FF0:Millwood Knight Gauntlets
039B33D8:Millwood Knight Leggings
035E1F20:Ordained Hood
035E2308:Ordained Dress
035E2AD8:Ordained Trousers
]]

RingDropDownList = [[2:--Ring List: 116 Items Total
FFFFFFFF:Nothing
00000000:Nothing
00002710:Blade of the Darkmoon
00002724:Watchdogs of Farron
0000272E:Aldrich Faithful
00002738:Warrior of Sunlight
00002742:Mound-makers
0000274C:Way of Blue
00002756:Blue Sentinels
00002760:Rosaria's Fingers
0000276A:Spears of the Church
00004E20:Life Ring
00004E21:Life Ring+1
00004E22:Life Ring+2
00004E23:Life Ring+3
00004E2A:Chloranthy Ring
00004E2B:Chloranthy Ring+1
00004E2C:Chloranthy Ring+2
00004E2D:Chloranthy Ring+3
00004E34:Havel's Ring
00004E35:Havel's Ring+1
00004E36:Havel's Ring+2
00004E37:Havel's Ring+3
00004E3E:Ring of Favor
00004E3F:Ring of Favor+1
00004E40:Ring of Favor+2
00004E41:Ring of Favor+3
00004E48:Ring of Steel Protection
00004E49:Ring of Steel Protection+1
00004E4A:Ring of Steel Protection+2
00004E4B:Ring of Steel Protection+3
00004E52:Flame Stoneplate Ring
00004E53:Flame Stoneplate Ring+1
00004E54:Flame Stoneplate Ring+2
00004E5C:Thunder Stoneplate Ring
00004E5D:Thunder Stoneplate Ring+1
00004E5E:Thunder Stoneplate Ring+2
00004E66:Magic Stoneplate Ring
00004E67:Magic Stoneplate Ring+1
00004E68:Magic Stoneplate Ring+2
00004E70:Dark Stoneplate Ring
00004E71:Dark Stoneplate Ring+1
00004E72:Dark Stoneplate Ring+2
00004E7A:Speckled Stoneplate Ring
00004E7B:Speckled Stoneplate Ring+1
00004E84:Bloodbite Ring
00004E85:Bloodbite Ring+1
00004E8E:Poisonbite Ring
00004E8F:Poisonbite Ring+1
00004E98:Cursebite Ring
00004EA2:Fleshbite Ring
00004EA3:Fleshbite Ring+1
00004EAC:Wood Grain Ring
00004EAD:Wood Grain Ring+1
00004EAE:Wood Grain Ring+2
00004EB6:Scholar Ring
00004EC0:Priestess Ring
00004ECA:Red Tearstone Ring
00004ED4:Blue Tearstone Ring
00004EDE:Wolf Ring
00004EDF:Wolf Ring+1
00004EE0:Wolf Ring+2
00004EE1:Wolf Ring+3
00004EE8:Leo Ring
00004EF2:Ring of Sacrifice
00004EFC:Rare Ring of Sacrifice
00004F06:Young Dragon Ring
00004F07:Bellowing Dragoncrest Ring
00004F10:Great Swamp Ring
00004F11:Witch's Ring
00004F1A:Morne's Ring
00004F1B:Ring of the Sun's First Born
00004F2E:Lingering Dragoncrest Ring
00004F2F:Lingering Dragoncrest Ring+1
00004F30:Lingering Dragoncrest Ring+2
00004F38:Sage Ring
00004F39:Sage Ring+1
00004F3A:Sage Ring+2
00004F42:Slumbering Dragoncrest Ring
00004F4C:Dusk Crown Ring
00004F56:Saint's Ring
00004F60:Deep Ring
00004F6A:Darkmoon Ring
00004F74:Ring of the Sun's Firstborn
00004F7E:Darkmoon Blade Covenant Ring
00004F88:Leo Ring
00004F92:Hawk Ring
00004F9C:Hornet Ring
00004FA6:Covetous Gold Serpent Ring
00004FA7:Covetous Gold Serpent Ring+1
00004FA8:Covetous Gold Serpent Ring+2
00004FA9:Covetous Gold Serpent Ring+3
00004FB0:Covetous Silver Serpent Ring
00004FB1:Covetous Silver Serpent Ring+1
00004FB2:Covetous Silver Serpent Ring+2
00004FB3:Covetous Silver Serpent Ring+3
00004FBA:Sun Princess Ring
00004FC4:Silvercat Ring
00004FCE:Skull Ring
00004FD8:Untrue White Ring
00004FE2:Carthus Milkring
00004FEC:Knight's Ring
00004FF6:Hunter's Ring
00005000:Knight Slayer's Ring
0000500A:Magic Clutch Ring
00005014:Lightning Clutch Ring
0000501E:Fire Clutch Ring
00005028:Dark Clutch Ring
00005032:Baneful Bird Ring
0000503C:Flynn's Ring
00005046:Prisoner's Chain
00005050:Untrue Dark Ring
0000505A:Yorgh's Ring
00005064:Obscuring Ring
0000506E:Ring of the Evil Eye
0000506F:Ring of the Evil Eye+1
00005070:Ring of the Evil Eye+2
00005071:Ring of the Evil Eye+3
00005078:Calamity Ring
00005082:Farron Ring
0000508C:Aldrich's Ruby
00005096:Aldrich's Sapphire
000050B4:Lloyd's Sword Ring
000050BE:Lloyd's Shield Ring
000050D2:Ring of Hiding
000050DC:Estus Ring
000050E6:Ashen Estus Ring
000050F0:Horsehoof Ring
000050FA:Carthus Bloodring
00005104:Reversal Ring
0000510E:Pontiff's Right Eye
00005118:Ring of Sustained Toughness
00005122:Ring of Sustained Energy
0000512C:Ring of Sustained Magic
00005136:Pontiff's Left Eye
00005140:Ring of Sustained Essence
0000514A:Ring of Sustained Might
00005154:Ring of Sustained Fortune
0000515E:Dragonscale Ring
00005208:Chillbite Ring
000DBC68:Debug Life Ring
000DBC69:Debug Life Ring+1
000DBC6A:Debug Life Ring+2
000DBC6C:Debug Life Ring+3
000DBC72:Debug Stamina Ring
000DBC73:Debug Stamina Ring+1
000DBC74:Debug Stamina Ring+2
000DE2B0:Debug Miyazaki Ring
]]

GoodsDropDownList = [[3:--Goods List: 288 Items Total
00000000:Nothing
00000064:White Sign Soapstone
00000065:Red Sign Soapstone
00000066:Red Eye Orb
00000067:Black Separation Crystal
0000006C:Roster of Knights
0000006F:Cracked Red Eye Orb
00000073:Black Eye Orb
00000075:Darksign
00000077:Way of White Circlet
00000096:Estus Flask
00000097:Estus Flask
00000098:Estus Flask+1
00000099:Estus Flask+1
0000009A:Estus Flask+2
0000009B:Estus Flask+2
0000009C:Estus Flask+3
0000009D:Estus Flask+3
0000009E:Estus Flask+4
0000009F:Estus Flask+4
000000A0:Estus Flask+5
000000A1:Estus Flask+5
000000A2:Estus Flask+6
000000A3:Estus Flask+6
000000A4:Estus Flask+7
000000A5:Estus Flask+7
000000A6:Estus Flask+8
000000A7:Estus Flask+8
000000A8:Estus Flask+9
000000A9:Estus Flask+9
000000AA:Estus Flask+10
000000AB:Estus Flask+10
000000BE:Ashen Estus Flask
000000BF:Ashen Estus Flask
000000C0:Ashen Estus Flask+1
000000C1:Ashen Estus Flask+1
000000C2:Ashen Estus Flask+2
000000C3:Ashen Estus Flask+2
000000C4:Ashen Estus Flask+3
000000C5:Ashen Estus Flask+3
000000C6:Ashen Estus Flask+4
000000C7:Ashen Estus Flask+4
000000C8:Ashen Estus Flask+5
000000C9:Ashen Estus Flask+5
000000CA:Ashen Estus Flask+6
000000CB:Ashen Estus Flask+6
000000CC:Ashen Estus Flask+7
000000CD:Ashen Estus Flask+7
000000CE:Ashen Estus Flask+8
000000CF:Ashen Estus Flask+8
000000D0:Ashen Estus Flask+9
000000D1:Ashen Estus Flask+9
000000D2:Ashen Estus Flask+10
000000D3:Ashen Estus Flask+10
000000F0:Divine Blessing
000000F1:Hidden Blessing
000000F2:Silver Pendant
00000104:Green Blossom
00000105:Budding Green Blossom
00000106:Budding Green Blossom
0000010E:Bloodred Moss Clump
0000010F:Purple Moss Clump
00000110:Blooming Purple Moss Clump
00000112:Purging Stone
00000114:Rime-blue Moss Clump
00000115:Monastery Charm
00000118:Repair Powder
00000122:Kukri
00000124:Firebomb
00000125:Dung Pie
00000126:Alluring Skull
00000128:Undead Hunter Charm
00000129:Black Firebomb
0000012B:Rope Firebomb
0000012C:Lightning Urn
0000012D:Holy Water Urn
0000012E:Rope Black Firebomb
0000012F:Stalk Dung Pie
00000130:Duel Charm
00000136:Throwing Knife
00000137:Poison Throwing Knife
0000013B:Church Guardian Shiv
0000014A:Charcoal Pine Resin
0000014B:Gold Pine Resin
0000014E:Human Pine Resin
0000014F:Carthus Rouge
00000150:Pale Pine Resin
00000154:Charcoal Pine Bundle
00000155:Gold Pine Bundle
00000157:Rotten Pine Resin
0000015E:Homeward Bone
0000015F:Coiled Sword Fragment
0000016E:Wolf's Blood Swordgrass
0000016F:Human Dregs
00000170:Forked Pale Tongue
00000171:Proof of a Concord Well Kept
00000172:Prism Stone
00000173:Binoculars
00000174:Proof of a Concord Kept
00000175:Pale Tongue
00000176:Vertebra Shackle
00000177:Sunlight Medal
00000178:Pendant
00000179:Dragon Head Stone
0000017A:Dragon Torso Stone
0000017B:Filianore's Spear Ornament
0000017C:Rubbish
00000181:Dried Finger
00000183:Twinkling Dragon Head Stone
00000184:Twinkling Dragon Torso Stone
00000186:Fire Keeper Soul
00000190:Fading Soul
00000191:Soul of a Deserted Corpse
00000192:Large Soul of a Deserted Corpse
00000193:Soul of an Unknown Traveler
00000194:Large Soul of an Unknown Traveler
00000195:Soul of a Nameless Soldier
00000196:Large Soul of a Nameless Soldier
00000197:Soul of a Weary Warrior
00000198:Large Soul of a Weary Warrior
00000199:Soul of a Crestfallen Knight
0000019A:Large Soul of a Crestfallen Knight
0000019B:Soul of a Proud Paladin
0000019C:Large Soul of a Proud Paladin
0000019D:Soul of an Intrepid Hero
0000019E:Large Soul of an Intrepid Hero
0000019F:Soul of a Seasoned Warrior
000001A0:Large Soul of a Seasoned Warrior
000001A1:Soul of an Old Hand
000001A2:Soul of a Venerable Old Hand
000001A3:Soul of a Champion
000001A4:Soul of a Great Champion
000001B8:Seed of a Giant Tree
000001B9:Spirit Amethyst
000001BA:Spirit Amethyst
000001C2:Oozing Charm Berry
000001C3:Oozing Flash Berry
000001C4:Mossfruit
000001C5:Brightbug
000001C6:Young White Branch
000001C7:Rusted Coin
000001C8:Siegbr?¤u
000001C9:Rusted Gold Coin
000001CA:Blue Bug Pellet
000001CB:Red Bug Pellet
000001CC:Yellow Bug Pellet
000001CD:Black Bug Pellet
000001CE:Young White Branch
000001CF:Young White Branch
000001EA:Dark Sigil
000001F4:Ember
000001F5:Ember
000001F6:Ember
000001F7:Ember
000001F8:Ember
000001F9:Ember
000001FA:Ember
000001FB:Ember
000001FC:Ember
000001FD:Ember
000001FE:Ember
00000208:Hello Carving
00000209:Thank you Carving
0000020A:Very good! Carving
0000020B:I'm sorry Carving
0000020C:Help me! Carving
0000028A:Ritual Spear Fragment
0000028B:Divine Spear Fragment
000002C8:Soul of Champion Gundyr
000002C9:Soul of a Wicked Spirit
000002CA:Soul of the Dancer
000002CB:Soul of a Crystal Sage
000002CD:Soul of the Blood of the Wolf
000002CE:Soul of Consumed Oceiros
000002CF:Soul of Boreal Valley Vordt
000002D0:Soul of the Old Demon King
000002D1:Soul of Dragonslayer Armour
000002D2:Soul of the Nameless King
000002D3:Soul of the Great Bat
000002D4:Soul of Pontiff Sulyvahn
000002D5:Soul of Aldrich
000002D6:Soul of High Lord Wolnir
000002D7:Soul of the Rotted Greatwood
000002D8:Soul of Rosaria
000002D9:Soul of the Deacons of the Deep
000002DB:Soul of the Twin Princes
000002DC:Soul of Yhorm the Giant
000002DD:Soul of the Lords
000002E3:Soul of a Demon
000002E6:Soul of the Twin Princes
000002E7:Soul of a Stray Demon
000002E8:Soul of Sister Friede
000002E9:Soul of Slave Knight Gael
000002EA:Soul of the Demon Prince
000002EB:Soul of Darkeater Midir
000003E8:Titanite Shard
000003E9:Large Titanite Shard
000003EA:Titanite Chunk
000003EB:Titanite Slab
000003F2:Dragon Scale
000003FC:Titanite Scale
00000406:Twinkling Titanite
0000044C:Heavy Gem
00000456:Sharp Gem
00000460:Refined Gem
0000046A:Crystal Gem
00000474:Simple Gem
0000047E:Fire Gem
00000488:Chaos Gem
00000492:Lightning Gem
0000049C:Deep Gem
000004A6:Dark Gem
000004B0:Poison Gem
000004BA:Blood Gem
000004C4:Raw Gem
000004CE:Blessed Gem
000004D8:Hollow Gem
000004E2:Shriving Stone
000007D1:Lift Chamber Key
000007D3:Bridge Key
000007D4:Iron Seal of the Wolf
000007D5:Small Doll
000007D7:Jailbreaker's Key
000007D8:Jailer's Key Ring
000007D9:Grave Key
000007DA:Cell Key
000007DB:Dungeon Ground Floor Key
000007DC:Old Cell Key
000007DD:Tower Key
000007DE:Grand Archives Key
000007DF:Tower Key
0000086B:Contraption Key
00000835:Holy Remains
00000836:Small Lothric Banner
00000837:Farron Coal
00000838:Sage's Coal
00000839:Giant's Coal
0000083A:Profaned Coal
0000083B:Mortician's Ashes
0000083C:Dreamchaser's Ashes
0000083D:Paladin's Ashes
0000083E:Grave Warden's Ashes
0000083F:Greirat's Ashes
00000840:Orbeck's Ashes
00000841:Cornyx's Ashes
00000842:Karla's Ashes
00000843:Irina's Ashes
00000844:Yuria's Ashes
00000845:Basin of Vows
00000846:Loretta's Bone
00000847:Braille Divine Tome of Carim
00000848:Braille Divine Tome of Lothric
00000849:Braille Divine Sunlight Tome
0000084B:Cinders of a Lord
0000084C:Cinders of a Lord
0000084D:Cinders of a Lord
0000084E:Cinders of a Lord
0000084F:Great Swamp Pyromancy Tome
00000850:Carthus Pyromancy Tome
00000851:Izalith Pyromancy Tome
00000852:Quelana Pyromancy Tome
00000853:Grave Warden Pyromancy Tome
00000854:Sage's Scroll
00000855:Logan's Scroll
00000856:Crystal Scroll
00000857:Transposing Kiln
00000858:Gwyndolin's Finger
00000859:Coiled Sword
00000869:Champions Bones
0000085A:Eyes of a Fire Keeper
0000085B:Sword of Avowal
0000085C:Golden Scroll
0000085D:Estus Shard
0000085E:Hawkwood's Swordgrass
0000085F:Undead Bone Shard
00000860:Deep Braille Divine Tome
00000861:Londor Braille Divine Tome
00000862:Excrement-covered Ashes
00000863:Prisoner Chief's Ashes
00000864:Xanthous Ashes
00000865:Hollow's Ashes
00000866:Patches' Ashes
00000867:Dragon Chaser's Ashes
00000868:Easterner's Ashes
00000869:Champions Bones
0000086A:Captain's Ashes
0000086C:Small Envoy Banner
0000086D:Old Woman's Ashes
0000086E:Blood of the Dark Soul
0000086F:Young Grass Dew
00002328:Beckon
00002329:Point forward
0000232A:Hurrah!
0000232B:Bow
0000232C:Jump for joy
0000232D:Duel bow
0000232E:Wave
0000232F:Praise the Sun
00002330:Point up
00002331:Point down
00002334:Prostration
00002335:Proper bow
00002336:Prayer
00002337:Welcome
00002338:Joy
00002339:My thanks!
0000233A:Rejoice
0000233B:Rest
0000233C:By my sword
0000233D:Dignified bow
0000233F:Curl up
00002340:Stretch out
00002341:Call over
00002342:Collapse
00002343:Quiet Resolve
00002344:Patches Squat
00002345:Applause
00002346:Path of the Dragon
00002347:Legion Etiquette
00002348:Darkmoon Loyalty
00002349:Sleep
0000234A:Toast
0000234B:Silent Ally
]]

SpellDropDownList = [[4:--Spell List: 111 Items Total
FFFFFFFF:Nothing
0000234C:Savage's Bow
00124F80:Farron Dart
00127690:Great Farron Dart
0013D620:Soul Arrow
0013DA08:Great Soul Arrow
0013DDF0:Heavy Soul Arrow
0013E1D8:Great Heavy Soul Arrow
0013E5C0:Homing Soulmass
0013E9A8:Homing Crystal Soulmass
0013ED90:Soul Spear
0013F178:Crystal Soul Spear
0013F560:Deep Soul
0013F948:Great Deep Soul
0013FD30:Magic Weapon
00140118:Great Magic Weapon
00140500:Crystal Magic Weapon
00144B50:Magic Shield
00144F38:Great Magic Shield
00147260:Hidden Weapon
00147648:Hidden Body
00149970:Cast Light
0014A528:Repair
0014A910:Spook
0014ACF8:Chameleon
0014B0E0:Aural Decoy
0014E790:White Dragon Breath
0014EF60:Farron Hail
0014F348:Crystal Hail
0014F730:Soul Greatsword
0014FB18:Farron Flashsword
0014FF00:Old Moonlight
001875B8:Affinity
001879A0:Great Soul Dregs
00189CC8:Dark Edge
0018B820:Soul Stream
00193138:Twisted Wall of Light
001A8CE0:Pestilent Mercury
00249F00:Fireball
0024A6D0:Fire Orb
0024AAB8:Firestorm
0024B288:Fire Surge
0024BA58:Black Serpent
0024C610:Combustion
0024C9F8:Great Combustion
0024ED20:Poison Mist
0024F108:Toxic Mist
0024F4F0:Acid Surge
00251430:Iron Flesh
00251818:Flash Sweat
002527B8:Carthus Flame Arc
00252BA0:Rapport
00253B40:Power Within
00256250:Great Chaos Fire Orb
00256638:Chaos Storm
00256A20:Fire Whip
00256E08:Black Flame
002575D8:Profaned Flame
002579C0:Chaos Bed Vestiges
00258190:Flame Fan
0025B070:Warmth
002717D0:Profuse Sweat
0027AC40:Dark Orb
0027D350:Black Fire Orb
0027FA60:Bursting Fireball
00282170:Boulder Heave
00284880:Sacred Flame
00286F90:Carthus Beacon
002896A0:Seething Chaos
003540D0:Heal Aid
003567E0:Heal
00356BC8:Med Heal
00356FB0:Great Heal
00357398:Soothing Sunlight
00357780:Replenishment
00357B68:Bountiful Sunlight
00358338:Bountiful Light
00358720:Caressing Tears
00358B08:Lightning Arrow
00359AA8:Morbid Temptation
0035B600:Tears of Denial
0035B9E8:Homeward
0035DD10:Force
0035E0F8:Wrath of the Gods
0035E4E0:Emit Force
00360420:Seek Guidance
00362B30:Lightning Spear
00362F18:Great Lightning Spear
00363300:Sunlight Spear
003636E8:Lightning Storm
00363AD0:Gnaw
00363EB8:Dorhys' Gnawing
00364688:Projected Heal
00365240:Magic Barrier
00365628:Great Magic Barrier
00365DF8:Sacred Oath
0036A448:Vow of Silence
0036C770:Lightning Blade
0036CB58:Darkmoon Blade
00378AC0:Dark Blade
00387520:Dead Again
00389C30:Lightning Stake
0038C340:Divine Pillars of Light
0038EA50:Lifehunt Scythe
00393870:Dorris Swarm
00395F80:Blessed Weapon
00398690:Deep Protection
0039ADA0:Atonement
001408E8:Frozen Weapon
001A90C8:Snap Freeze
00257DA8:Floating Chaos
003642A0:Way of White Corona
]]

AllDropdownAdder()

IgroWidgets:enableRecordById(1337018652)
--(IgroWidgets:getRecordById(1337018652)).Active = true

[DISABLE]
{$lua}
if syntaxcheck then return end
AllDropdownRemover()

{$asm}
unregisterSymbol(BaseA)
unregisterSymbol(BaseB)
unregisterSymbol(BaseC)
unregisterSymbol(BaseD)
unregisterSymbol(BaseE)
unregisterSymbol(BaseF)
unregisterSymbol(BaseZ)
unregisterSymbol(Param)
unregisterSymbol(GameFlagData)
unregisterSymbol(LockBonus_ptr)
unregisterSymbol(DrawNearOnly_ptr)
unregisterSymbol(debug_flags)
unregisterSymbol(XA)
unregisterSymbol(XB)
unregisterSymbol(XC)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>1337085146</ID>
          <Description>"Reattach to DS3 (It auto-attaches once already)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
PROCESS_NAME = 'DarkSoulsIII.exe'
--------
-------- Auto Attach
--------
local autoAttachTimer = nil ---- variable to hold timer object
local autoAttachTimerInterval = 1000 ---- Timer intervals are in milliseconds
local autoAttachTimerTicks = 0 ---- variable to count number of times the timer has run
local autoAttachTimerTickMax = 5000 ---- Set to zero to disable ticks max
local function autoAttachTimer_tick(timer) ---- Timer tick call back
        ---- Destroy timer if max ticks is reached
    if autoAttachTimerTickMax &gt; 0 and autoAttachTimerTicks &gt;= autoAttachTimerTickMax then
        timer.destroy()
    end
        ---- Check if process is running
    if getProcessIDFromProcessName(PROCESS_NAME) ~= nil then
        timer.destroy() ---- Destroy timer
        openProcess(PROCESS_NAME) ---- Open the process
    end
    autoAttachTimerTicks = autoAttachTimerTicks + 1 ---- Increase ticks
end
autoAttachTimer = createTimer(getMainForm()) ---- Create timer with the main form as it's parent
autoAttachTimer.Interval = autoAttachTimerInterval ---- Set timer interval
autoAttachTimer.OnTimer = autoAttachTimer_tick ---- Set timer tick call back
disableMemrec(memrec)
[DISABLE]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1337018652</ID>
          <Description>"Param Patcher v2.0.5"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START PatchInfo class
    Author: Igromanru
    Description: Entity with informations (address, value and valueType).
                    Also enum TYPE, with all possible value types.
]]--
PatchInfo = {
    address = 0,
    value = 0,
    valueType = 0,
    binaryOffset = 0,
    BINARYOFFSET = {
        ONE = 1,
        TWO = 2,
        THREE = 4,
        FOUR = 8,
        FIVE = 16,
        SIX = 32,
        SEVEN = 64,
        EIGHT = 128,
    },
    TYPE = {
        BINARY = 0,
        BYTE = 1,
        TWO_BYTE = 2,
        FOUR_BYTE = 3,
        EIGHT_BYTE = 4,
        FLOAT = 5,
    }
}

function PatchInfo:new(address, value, valueType, binaryOffset)
    local o = {}
    setmetatable(o, self)
    self.__index = self
    if(address ~= nil) then
        o.address = address
    end
    if(value ~= nil) then
        o.value = value
    end
    if(valueType ~= nil) then
        o.valueType = valueType
    end
    if(binaryOffset ~= nil) then
        o.binaryOffset = binaryOffset
    end

    return o
end

function PatchInfo:getBinaryOffset(value)
    local result = value
    if(value == 0) then
        result = PatchInfo.BINARYOFFSET.ONE
    elseif(value == 1) then
        result = PatchInfo.BINARYOFFSET.TWO
    elseif(value == 2) then
        result = PatchInfo.BINARYOFFSET.THREE
    elseif(value == 3) then
        result = PatchInfo.BINARYOFFSET.FOUR
    elseif(value == 4) then
        result = PatchInfo.BINARYOFFSET.FIVE
    elseif(value == 5) then
        result = PatchInfo.BINARYOFFSET.SIX
    elseif(value == 6) then
        result = PatchInfo.BINARYOFFSET.SEVEN
    elseif(value == 7) then
        result = PatchInfo.BINARYOFFSET.EIGHT
    end
    return result
end

--[[END PatchInfo class]]--

--[[START ParamUtils class
    Author: Igromanru
    Description: Utils class for Params
]]--
ParamUtils = {
    masterParamTable = {},
    patchBackUp = {},
    patchBackUpOld = {},
}

function ParamUtils:new()
    local function readIntegerSafe(Input)
        local Value = readInteger(Input)
        if Value &lt; 2147483647 then
            return Value
        else
            return Value - 0x100000000
        end
    end
    local function InitializeAddress()
      autoAssemble([[
        define(ParamPatch,[DarkSoulsIII.exe+4785FE0]+10)
        registerSymbol(ParamPatch)
      ]])
    end
    local o = {}
    setmetatable(o, self)
    self.__index = self

    InitializeAddress()
    o:paramIndexer()
    return o
end

function ParamUtils:destroy()
    unregisterSymbol("ParamPatch")
end

function ParamUtils:toHex(number, length)
    local result = ""
    if(length ~= nil and length &gt; 0) then
        result = string.format("%0"..length.."X",number)
    else
        result = string.format("%X",number)
    end
    return result
end

function ParamUtils:isEmpty(value)
  local result = value == nil
  if(not result) then
    if(type(value) == "string") then
      result = value == ""
    elseif(type(value) == "table") then
      result = true
      for key,tabl in pairs(value) do
        result = key == nil
        break
      end
    end
  end
  return result
end

function ParamUtils:isNotEmpty(value)
  return not self:isEmpty(value)
end

function ParamUtils:logError(message)
    local output = "ParamUtils Error:\r\n"..message
    print(output)
    error(output)
end

function ParamUtils:paramIndexer()
    local Param = getAddress("ParamPatch")
    local Start = readQword(Param)
    local End = readQword(Param+8)
    local Count = (End-Start)/8
    self.masterParamTable = {}

    for i = 0, Count - 1 do
      local ParamOffset = readQword(Start+i*8)
      local ParamString = "Unknown"
      if readInteger(ParamOffset+0x20) &gt; 7 then
         ParamString = readString(readQword(ParamOffset+0x10),90,true)
      else
         ParamString = readString(ParamOffset+0x10,90,true)
      end
      self.masterParamTable[ParamString] = ParamOffset
    end
end

function ParamUtils:getParamAddress(param)
  return self.masterParamTable[param]
end

function ParamUtils:getIdAddress(idTable, Id)
    local result = idTable[Id]
    if(self:isEmpty(result) or result &lt; 0) then
        self:logError("ID: "..Id.." (0x"..self:toHex(Id) ..") couldn't be found")
    end
    return result
end

function ParamUtils:getIdFromAddress(idTable, address)
  local result = 0
  if(self:isNotEmpty(idTable) and self:isNotEmpty(address)) then
    for id,addr in pairs(idTable) do
      if(addr == address) then
        result = id
        break
      end
    end
  end
  if(result == 0) then
    self:logError("ID for address: "..self:toHex(address).." couldn't be found")
  end
  return result
end

function ParamUtils:getParamIdTable(ParamName)
    local IDTable = {}
    local ParamAddr = readQword(readQword(self.masterParamTable[ParamName]+0x68)+0x68)
    local TableCount = byteTableToWord(readBytes(ParamAddr+0xa,2,true))
    for i=0,TableCount-1 do
        local PID = readInteger(ParamAddr+0x40+0x18*i)
        local IDO = readInteger(ParamAddr+0x48+0x18*i)
        IDTable[PID] = ParamAddr + IDO
    end
    return IDTable
end

function ParamUtils:getIdAddressInParam(paramName, id)
    local result = 0
    local idTable = self:getParamIdTable(paramName)

    if(idTable ~= nil) then
        result = self:getIdAddress(idTable, id)
    else
        self:logError("Addresses for Param: '"..paramName.."' couldn't be found")
    end
    return result
end

function ParamUtils:getIdFromAddressInParam(paramName, address)
    local result = 0
    local idTable = self:getParamIdTable(paramName)

    if(self:isNotEmpty(idTable)) then
        result = self:getIdFromAddress(idTable, address)
    end
    return result
end

function ParamUtils:getIdByAddressInAnyParam(address)
  local result = 0
  if(self.masterParamTable ~= nil) then
    for param,paramAddr in pairs(self.masterParamTable) do
      local idTable = self:getParamIdTable(param)
      if(self:isNotEmpty(idTable)) then
        local id = self:getIdFromAddress(idTable, address)
        if(id &gt; 0) then
          result = id
          break
        end
      end
    end
  end
  return result
end

function ParamUtils:getAllAddressFromParam(paramName)
    local result = {}
    local idTable = self:getParamIdTable(paramName)

    if(self:isNotEmpty(idTable)) then
        for id,address in pairs(idTable) do
            table.insert(result, address)
        end
    end
    return result
end

function ParamUtils:paramIterator(ParamName,ChangeTable,uuid)
    local IDTable = self:getParamIdTable(ParamName)
    if uuid ~= nil then --Make a table for backups
        if self.patchBackUpOld == nil then
            self.patchBackUpOld = {}
        end
        self.patchBackUpOld[uuid] = {}
        for k,v in pairs(ChangeTable) do
            local Backup = {}
            local _,DataLength = string.gsub(v[3], "%x+","")
            local idAddress = self:getIdAddress(IDTable,v[1])
            if self:isNotEmpty(idAddress) then
                Backup[1] = idAddress + v[2]
                Backup[2] = readBytes(Backup[1],DataLength,true)
                table.insert(self.patchBackUpOld[uuid],Backup)
                self:paramPatcher(idAddress,v[2],v[3],v[4])
            end
        end
    else
        for k,v in pairs(ChangeTable) do
            local idAddress = self:getIdAddress(IDTable,v[1])
            if self:isNotEmpty(idAddress) then
                self:paramPatcher(idAddress,v[2],v[3],v[4])
            end
        end
    end
end

function ParamUtils:paramPatcher(idAddress,DataOffset,Data,Symbol)
    local WriteAddr = idAddress+DataOffset
    local HexTable = {}
    if Symbol == nil then
        for word in string.gmatch(Data, "%x+") do table.insert(HexTable,tonumber(word,16)) end
        writeBytes(WriteAddr,HexTable)
    else
        registerSymbol(Symbol,WriteAddr,true)
    end
end

function ParamUtils:paramDepatcher(uuid)
  if(self.patchBackUpOld[uuid] ~= nil) then
    for k,v in pairs(self.patchBackUpOld[uuid]) do
      if(self:isNotEmpty(v)) then
        writeBytes(v[1],v[2])
      end
    end
    self.patchBackUpOld[uuid] = nil
  end
end

function ParamUtils:patchMultipleOffsets(paramName, id, patchInfoTable, uuid)
    if(self.patchBackUp[uuid] == nil) then
        local address = getIdAddressInParam()
        for key,patchInfo in pairs(patchInfoTable) do
            patchInfo.address = address
            self:patchValueWithBackup(patchInfo,uuid)
        end
    else
        self:logError("The UUID "..uuid.." is already in use.")
    end
end

function ParamUtils:restore(...)
  local arg = table.pack(...)
  for key,uuid in pairs(arg) do
    if(self:isNotEmpty(self.patchBackUp[uuid])) then
      for index,patchInfo in pairs(self.patchBackUp[uuid]) do
        self:patchValue(patchInfo)
      end
      self.patchBackUp[uuid] = nil
    end
  end
end

function ParamUtils:patchValueWithBackup(patchInfo, uuid)
    local readValue = self:readValue(patchInfo)
    local backup = true

    self:patchValue(patchInfo)

    for key,object in pairs(self.patchBackUp[uuid]) do
        if(object.address == patchInfo.address) then
            backup = false
            break
        end
    end
    if(backup) then
        if(patchInfo.valueType == PatchInfo.TYPE.BINARY) then
            patchInfo.valueType = PatchInfo.TYPE.BYTE
        end
        table.insert(self.patchBackUp[uuid], PatchInfo:new(patchInfo.address, readValue, patchInfo.valueType))
    end
end

function ParamUtils:readValue(patchInfo)
    local value = 0
    if(patchInfo.valueType == PatchInfo.TYPE.BYTE or patchInfo.valueType == PatchInfo.TYPE.BINARY) then
        value = self:readByte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.TWO_BYTE) then
        value = self:read2Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.FOUR_BYTE) then
        value = self:read4Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.EIGHT_BYTE) then
        value = self:read8Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.FLOAT) then
        value = self:readFloat(patchInfo)
    end
    return value
end

function ParamUtils:patchValue(patchInfo)
    if(patchInfo.valueType == PatchInfo.TYPE.BINARY) then
        self:writeBinary(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.BYTE) then
        self:writeByte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.TWO_BYTE) then
        self:write2Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.FOUR_BYTE) then
        self:write4Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.EIGHT_BYTE) then
        self:write8Byte(patchInfo)
    elseif(patchInfo.valueType == PatchInfo.TYPE.FLOAT) then
        self:writeFloat(patchInfo)
    end
end

function ParamUtils:writeBinary(patchInfo)
    if(patchInfo.binaryOffset &gt; 0) then
        local prevValue = self:readByte(patchInfo)
        if(patchInfo.value == 0) then
            patchInfo.value = bAnd(prevValue, ~patchInfo.binaryOffset)
        else
            patchInfo.value = bOr(prevValue,patchInfo.binaryOffset)
        end
        writeBytes(patchInfo.address, patchInfo.value)
    else
        self:logError("To write a binary you've to set the 'binaryOffset'")
    end
end

function ParamUtils:writeByte(patchInfo)
    if(patchInfo.value &gt; 255) then
        self:logError("Byte can't be bigger then 255")
    elseif(patchInfo.value &lt; -127) then
        self:logError("Byte can't be smaller then -127")
    else
        writeBytes(patchInfo.address, patchInfo.value)
    end
end

function ParamUtils:write2Byte(patchInfo)
    if(patchInfo.value &gt; 65535) then
        self:logError("2 Bytes can't be bigger then 65535")
    elseif(patchInfo.value &lt; -32767) then
        self:logError("2 Bytes can't be smaller then -32767")
    else
        writeBytes(patchInfo.address, wordToByteTable(patchInfo.value))
    end
end

function ParamUtils:write4Byte(patchInfo)
    if(patchInfo.value &gt; 4294967295) then
        self:logError("4 Bytes can't be bigger then 4294967295")
    elseif(patchInfo.value &lt; -2147483648) then
        self:logError("4 Bytes can't be smaller then -2147483648")
    else
        writeInteger(patchInfo.address, patchInfo.value)
    end
end

function ParamUtils:write8Byte(patchInfo)
    if(patchInfo.value &gt; 9223372036854775807) then
        self:logError("8 Bytes can't be bigger then 9223372036854775807")
    elseif(patchInfo.value &lt; -9223372036854775808) then
        self:logError("8 Bytes can't be smaller then -9223372036854775808")
    else
        writeQword(patchInfo.address, patchInfo.value)
    end
end

function ParamUtils:writeFloat(patchInfo)
    if(patchInfo.value &gt; 3.4028235E38) then
        self:logError("Float can't be bigger then 3.4028235E38")
    elseif(patchInfo.value &lt; -3.4028235E38) then
        self:logError("Float can't be smaller then -3.4028235E38")
    else
        writeFloat(patchInfo.address, patchInfo.value)
    end
end

-- read functions
function ParamUtils:readByte(patchInfo)
    return readBytes(patchInfo.address, 1)
end

function ParamUtils:read2Byte(patchInfo)
    return byteTableToWord(readBytes(patchInfo.address, 2, true))
end

function ParamUtils:read4Byte(patchInfo)
    return readInteger(patchInfo.address)
end

function ParamUtils:read8Byte(patchInfo)
    return readQword(patchInfo.address)
end

function ParamUtils:readFloat(patchInfo)
    return readFloat(patchInfo.address)
end

function ParamUtils:restoreAllBackups()
  if(self:isNotEmpty(self.patchBackUp)) then
    for uuid,tBackup in pairs(self.patchBackUp) do
      self:restore(uuid)
    end
  end
  self.patchBackUp = {}
end

function ParamUtils:restoreAllOldBackups()
  if(self:isNotEmpty(self.patchBackUpOld)) then
    for uuid,tBackup in pairs(self.patchBackUpOld) do
      self:restore(uuid)
    end
  end
  self.patchBackUpOld = {}
end

function ParamUtils:printAllBackups()
  if(self:isNotEmpty(self.patchBackUp)) then
    for uuid,tBackup in pairs(self.patchBackUp) do
      print("UUID: "..uuid)
      for key,object in pairs(tBackup) do
        print("Address: "..object.address.." Value: "..object.value.." Type: "..object.valueType)
      end
    end
  end
end

function ParamUtils:printAllOldBackups()
  if(self:isNotEmpty(self.patchBackUpOld)) then
    for uuid,tBackup in pairs(self.patchBackUpOld) do
      print("UUID: "..uuid)
      for address,byteArray in pairs(tBackup) do
        print("Address: "..address.." Byte Array: ")
      end
    end
  end
end

function ParamUtils:printParams()
  if(self:isNotEmpty(self.masterParamTable)) then
    for key,address in pairs(self.masterParamTable) do
      print("Param: "..key.." Address: "..self:toHex(address))
    end
  end
end

function ParamUtils:printParamsIds(param)
  if(self:isNotEmpty(self.masterParamTable)) then
    local idTable = self:getParamIdTable(param)
    for id,address in pairs(idTable) do
      print("ID: "..id.." (0x"..self:toHex(id)..") Address: "..self:toHex(address))
    end
  end
end

function ParamUtils:printParamAddress(param)
  local address = self:getParamAddress(param)
  if(self:isNotEmpty(address)) then
    print("Param: "..param..", Address: "..self:toHex(address))
  else
    print("Param: "..param.." couldn't be found.")
  end
end

-- Creating an instance of ParamUtils
paramUtils = ParamUtils:new()
--[[END ParamUtils class]]--
local function enableRecord(thread, id)
  local record = getAddressList().getMemoryRecordByID(id)
  if(record ~= nil) then
    sleep(500)
    record.Active = true
  else
    print("Record with ID "..id.." doesn't exists")
  end
end
createNativeThread(enableRecord, 252) --Enable PP classes
IgroWidgets:enableRecordById(1337033885)
[DISABLE]
{$lua}
if syntaxcheck then return end
paramUtils:restoreAllBackups()
paramUtils:printAllOldBackups()
paramUtils:destroy()
local function disableRecord(thread, id)
  local record = getAddressList().getMemoryRecordByID(id)
  if(record ~= nil) then
    sleep(500)
    record.Active = false
  else
    print("Record with ID "..id.." doesn't exists")
  end
end
createNativeThread(disableRecord, 252) --Disable PP classes
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>1337018912</ID>
              <Description>"Classes"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <Color>E1E1E1</Color>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1337018942</ID>
                  <Description>"Don't disable Param Patcher classes"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>FF0000</Color>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>252</ID>
                  <Description>"BaseParamClass"</Description>
                  <Options moHideChildren="1" moActivateChildrenAsWell="1"/>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START BaseParamClass class]]--
BaseParamClass = {
    id = 0,
    param = "",
    backupUuid = "",
    address = 0
}

function BaseParamClass:new(param, uuid, id, address)
  local o = {}
  self.__index = self
  setmetatable(o, self)

  o:init(param, uuid, id, address)
  return o
end

function BaseParamClass:init(param, uuid, id, address)
  if(param ~= nil) then
    self.param = param
  end
  if(uuid ~= nil) then
    self.backupUuid = uuid
  end
  if(id ~= nil) then
    self.id = id
  end
  if(self.param ~= "" and self.backupUuid ~= "") then
    if(paramUtils.patchBackUp[self.backupUuid] == nil) then
      paramUtils.patchBackUp[self.backupUuid] = {}
    end
    if(address ~= nil and address &gt; 0) then
      self.address = address
    elseif(self.id ~= nil and self.id &gt; 0) then
      self:stripSelfIdForParams()
      self.address = paramUtils:getIdAddressInParam(self.param, self.id)
    end
  end
end

-- Removes first Hex digit of the ID
function BaseParamClass:stripIdForParams(id)
    local idHex = paramUtils:toHex(id, 8)
    return tonumber(idHex:sub(2),16)
end

function BaseParamClass:stripSelfIdForParams()
  if(self.id ~= nil and self.id &gt; 0) then
    self.id = self:stripIdForParams(self.id)
  end
end

--Patch all values
function BaseParamClass:patchAll(offset, value, valueType, binaryOffset)
    local addresses = paramUtils:getAllAddressFromParam(self.param)
    for key,address in pairs(addresses) do
        local patchInfo = PatchInfo:new(address + offset, value, valueType, PatchInfo:getBinaryOffset(binaryOffset))
        paramUtils:patchValueWithBackup(patchInfo, self.backupUuid)
    end
end

function BaseParamClass:patchAllBinary(offset, value, binaryOffset)
    self:patchAll(offset, value, PatchInfo.TYPE.BINARY, binaryOffset)
end

function BaseParamClass:patchAllByte(offset, value)
    self:patchAll(offset, value, PatchInfo.TYPE.BYTE)
end

function BaseParamClass:patchAll2Byte(offset, value)
    self:patchAll(offset, value, PatchInfo.TYPE.TWO_BYTE)
end

function BaseParamClass:patchAll4Byte(offset, value)
    self:patchAll(offset, value, PatchInfo.TYPE.FOUR_BYTE)
end

function BaseParamClass:patchAll8Byte(offset, value)
    self:patchAll(offset, value, PatchInfo.TYPE.EIGHT_BYTE)
end

function BaseParamClass:patchAllFloat(offset, value)
    self:patchAll(offset, value, PatchInfo.TYPE.FLOAT)
end

-- Patch value
function BaseParamClass:patchValue(offset, value, valueType, binaryOffset)
    local patchInfo = PatchInfo:new(self.address + offset, value, valueType, PatchInfo:getBinaryOffset(binaryOffset))
    paramUtils:patchValueWithBackup(patchInfo, self.backupUuid)
end

function BaseParamClass:patchBinary(offset, value, binaryOffset)
    self:patchValue(offset, value, PatchInfo.TYPE.BINARY, binaryOffset)
end

function BaseParamClass:patchByte(offset, value)
    self:patchValue(offset, value, PatchInfo.TYPE.BYTE)
end

function BaseParamClass:patch2Byte(offset, value)
    self:patchValue(offset, value, PatchInfo.TYPE.TWO_BYTE)
end

function BaseParamClass:patch4Byte(offset, value)
    self:patchValue(offset, value, PatchInfo.TYPE.FOUR_BYTE)
end

function BaseParamClass:patch8Byte(offset, value)
    self:patchValue(offset, value, PatchInfo.TYPE.EIGHT_BYTE)
end

function BaseParamClass:patchFloat(offset, value)
    self:patchValue(offset, value, PatchInfo.TYPE.FLOAT)
end

-- Read value
function BaseParamClass:readValue(offset, valueType, binaryOffset)
    local patchInfo = PatchInfo:new(self.address + offset, nil, valueType, PatchInfo:getBinaryOffset(binaryOffset))
    return paramUtils:readValue(patchInfo)
end

function BaseParamClass:readBinary(offset, binaryOffset)
    local bByte = self:readValue(offset, PatchInfo.TYPE.BINARY, binaryOffset)
    return bAnd(bByte, PatchInfo:getBinaryOffset(binaryOffset)) ~= 0
end

function BaseParamClass:readByte(offset)
    return self:readValue(offset, PatchInfo.TYPE.BYTE)
end

function BaseParamClass:read2Byte(offset)
    return self:readValue(offset, PatchInfo.TYPE.TWO_BYTE)
end

function BaseParamClass:read4Byte(offset)
    return self:readValue(offset, PatchInfo.TYPE.FOUR_BYTE)
end

function BaseParamClass:read8Byte(offset)
    return self:readValue(offset, PatchInfo.TYPE.EIGHT_BYTE)
end

function BaseParamClass:readFloat(offset)
    return self:readValue(offset, PatchInfo.TYPE.FLOAT)
end

--[[END BaseParamClass class]]--

[DISABLE]
{$lua}
--if syntaxcheck then return end

</AssemblerScript>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1337033268</ID>
                      <Description>"EquipParamWeapon"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
--if syntaxcheck then return end

--[[START EquipParamWeapon class]]--
EquipParamWeapon = BaseParamClass:new()

function EquipParamWeapon:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("EquipParamWeapon", uuid, id, address)
    return o
end

function EquipParamWeapon:behaviorVariationId(value)
    self:patch4Byte(0x0, value)
end

function EquipParamWeapon:sortId(value)
    self:patch4Byte(0x4, value)
end

function EquipParamWeapon:wanderingEquipId(value)
    self:patch4Byte(0x8, value)
end

-- Weight
function EquipParamWeapon:weight(value)
    self:patchFloat(0xC, value)
end

function EquipParamWeapon:weaponWeightRate(value)
    self:patchFloat(0x10, value)
end

-- Prices
function EquipParamWeapon:fixPrice(value)
    self:patch4Byte(0x14, value)
end

function EquipParamWeapon:basicPrice(value)
    self:patch4Byte(0x18, value)
end

function EquipParamWeapon:sellValue(value)
    self:patch4Byte(0x1C, value)
end

-- Scaling
function EquipParamWeapon:correctStrength(value)
    self:patchFloat(0x20, value)
end

function EquipParamWeapon:correctAgility(value)
    self:patchFloat(0x24, value)
end

function EquipParamWeapon:correctMagic(value)
    self:patchFloat(0x28, value)
end

function EquipParamWeapon:correctFaith(value)
    self:patchFloat(0x2C, value)
end

--Block Rate
function EquipParamWeapon:physGuardCutRate(value)
    self:patchFloat(0x30, value)
end

function EquipParamWeapon:magGuardCutRate(value)
    self:patchFloat(0x34, value)
end

function EquipParamWeapon:fireGuardCutRate(value)
    self:patchFloat(0x38, value)
end

function EquipParamWeapon:thunGuardCutRate(value)
    self:patchFloat(0x3C, value)
end

-- Effects on hit
function EquipParamWeapon:spEffectBehaviorId(value)
    self:patch4Byte(0x40, value)
end

function EquipParamWeapon:spEffectBehaviorId1(value)
    self:patch4Byte(0x44, value)
end

function EquipParamWeapon:spEffectBehaviorId2(value)
    self:patch4Byte(0x48, value)
end

-- Effects on self
function EquipParamWeapon:residentSpEffectId(value)
    self:patch4Byte(0x4C, value)
end

function EquipParamWeapon:residentSpEffectId1(value)
    self:patch4Byte(0x50, value)
end

function EquipParamWeapon:residentSpEffectId2(value)
    self:patch4Byte(0x54, value)
end

function EquipParamWeapon:materialSetId(value)
    self:patch4Byte(0x58, value)
end

--Origin Equip Weapon
function EquipParamWeapon:originEquipWep(value)
    self:patch4Byte(0x5C, value)
end

function EquipParamWeapon:originEquipWep1(value)
    self:patch4Byte(0x60, value)
end

function EquipParamWeapon:originEquipWep2(value)
    self:patch4Byte(0x64, value)
end

function EquipParamWeapon:originEquipWep3(value)
    self:patch4Byte(0x68, value)
end

function EquipParamWeapon:originEquipWep4(value)
    self:patch4Byte(0x6C, value)
end

function EquipParamWeapon:originEquipWep5(value)
    self:patch4Byte(0x70, value)
end

function EquipParamWeapon:originEquipWep6(value)
    self:patch4Byte(0x74, value)
end

function EquipParamWeapon:originEquipWep7(value)
    self:patch4Byte(0x78, value)
end

function EquipParamWeapon:originEquipWep8(value)
    self:patch4Byte(0x7C, value)
end

function EquipParamWeapon:originEquipWep9(value)
    self:patch4Byte(0x80, value)
end

function EquipParamWeapon:originEquipWep10(value)
    self:patch4Byte(0x84, value)
end

function EquipParamWeapon:originEquipWep11(value)
    self:patch4Byte(0x88, value)
end

function EquipParamWeapon:originEquipWep12(value)
    self:patch4Byte(0x8C, value)
end

function EquipParamWeapon:originEquipWep13(value)
    self:patch4Byte(0x90, value)
end

function EquipParamWeapon:originEquipWep14(value)
    self:patch4Byte(0x94, value)
end

function EquipParamWeapon:originEquipWep15(value)
    self:patch4Byte(0x98, value)
end

--Anti Damage Rate
function EquipParamWeapon:antiDemonDamageRate(value)
    self:patchFloat(0x9C, value)
end

function EquipParamWeapon:antUndeadDamageRate(value)
    self:patchFloat(0xA0, value)
end

function EquipParamWeapon:antHollowDamageRate(value)
    self:patchFloat(0xA4, value)
end

function EquipParamWeapon:antAbyssalDamageRate(value)
    self:patchFloat(0xA8, value)
end

-- AC-BA
function EquipParamWeapon:vagrantItemLotId(value)
    self:patch4Byte(0xAC, value)
end

function EquipParamWeapon:vagrantBonusEneDropItemLotId(value)
    self:patch4Byte(0xB0, value)
end

function EquipParamWeapon:vagrantItemEneDropItemLotId(value)
    self:patch4Byte(0xB4, value)
end

function EquipParamWeapon:equipModelId(value)
    self:patch2Byte(0xB8, value)
end

function EquipParamWeapon:iconId(value)
    self:patch2Byte(0xBA, value)
end

-- Durability
function EquipParamWeapon:durability(value)
    self:patch2Byte(0xBC, value)
end

function EquipParamWeapon:durabilityMax(value)
    self:patch2Byte(0xBE, value)
end

-- C0-C2
function EquipParamWeapon:attackThrowEscape(value)
    self:patch2Byte(0xC0, value)
end

function EquipParamWeapon:parryDamageLife(value)
    self:patch2Byte(0xC2, value)
end

--Attack Damage
function EquipParamWeapon:attackBasePhysics(value)
    self:patch2Byte(0xC4, value)
end

function EquipParamWeapon:attackBaseMagic(value)
    self:patch2Byte(0xC6, value)
end

function EquipParamWeapon:attackBaseFire(value)
    self:patch2Byte(0xC8, value)
end

function EquipParamWeapon:attackBaseThunder(value)
    self:patch2Byte(0xCA, value)
end

function EquipParamWeapon:attackBaseStamina(value) -- Stamina consuption to block
    self:patch2Byte(0xCC, value)
end

-- CE-ED
function EquipParamWeapon:saWeaponDamage(value)
    self:patch2Byte(0xCE, value)
end

function EquipParamWeapon:saDurability(value)
    self:patch2Byte(0xD0, value)
end

function EquipParamWeapon:guardAngle(value)
    self:patch2Byte(0xD2, value)
end

function EquipParamWeapon:staminaGuardDef(value)
    self:patch2Byte(0xD4, value)
end

function EquipParamWeapon:reinforceTypeId(value)
    self:patch2Byte(0xD6, value)
end

function EquipParamWeapon:trophySGradeId(value)
    self:patch2Byte(0xD8, value)
end

function EquipParamWeapon:trophySeqId(value)
    self:patch2Byte(0xDA, value)
end

function EquipParamWeapon:throwAtkRate(value) --100 minimum
    self:patch2Byte(0xDC, value)
end

function EquipParamWeapon:bowDistRate(value)
    self:patch2Byte(0xDE, value)
end

function EquipParamWeapon:equipModelCategory(value)
    self:patchByte(0xE0, value)
end

function EquipParamWeapon:equipModelGender(value)
    self:patchByte(0xE1, value)
end

function EquipParamWeapon:weaponCategory(value)
    self:patchByte(0xE2, value)
end

function EquipParamWeapon:wepmotionCategory(value)
    self:patchByte(0xE3, value)
end

function EquipParamWeapon:guardmotionCategory(value)
    self:patchByte(0xE4, value)
end

function EquipParamWeapon:atkMaterial(value)
    self:patchByte(0xE5, value)
end

function EquipParamWeapon:defMaterial(value)
    self:patchByte(0xE6, value)
end

function EquipParamWeapon:defSfxMaterial(value)
    self:patchByte(0xE7, value)
end

function EquipParamWeapon:correctType(value)
    self:patchByte(0xE8, value)
end

function EquipParamWeapon:spAttribute(value)
    self:patchByte(0xE9, value)
end

function EquipParamWeapon:spAtkcategory(value)
    self:patch2Byte(0xEA, value)
end

function EquipParamWeapon:AnimationList(value)
    self:patchByte(0xEB, value)
end

function EquipParamWeapon:wepmotionOneHandId(value)
    self:patchByte(0xEC, value)
end

function EquipParamWeapon:wepmotionBothHandId(value)
    self:patchByte(0xED, value)
end

-- Requirements
function EquipParamWeapon:properStrength(value)
    self:patchByte(0xEE, value)
end

function EquipParamWeapon:properAgility(value)
    self:patchByte(0xEF, value)
end

function EquipParamWeapon:properMagic(value)
    self:patchByte(0xF0, value)
end

function EquipParamWeapon:properFaith(value)
    self:patchByte(0xF1, value)
end

-- F2-100
function EquipParamWeapon:overStrength(value)
    self:patchByte(0xF2, value)
end

function EquipParamWeapon:attackBaseParry(value)
    self:patchByte(0xF3, value)
end

function EquipParamWeapon:defenseBaseParry(value)
    self:patchByte(0xF4, value)
end

function EquipParamWeapon:guardBaseRepel(value)
    self:patchByte(0xF5, value)
end

function EquipParamWeapon:attackBaseRepel(value)
    self:patchByte(0xF6, value)
end

function EquipParamWeapon:guardCutCancelRate(value)
    self:patchByte(0xF7, value)
end

function EquipParamWeapon:guardLevel(value)
    self:patchByte(0xF8, value)
end

function EquipParamWeapon:slashGuardCutRate(value)
    self:patchByte(0xF9, value)
end

function EquipParamWeapon:blowGuardCutRate(value)
    self:patchByte(0xFA, value)
end

function EquipParamWeapon:thrustGuardCutRate(value)
    self:patchByte(0xFB, value)
end

function EquipParamWeapon:poisonGuardResist(value)
    self:patchByte(0xFC, value)
end

function EquipParamWeapon:diseaseGuardResist(value)
    self:patchByte(0xFD, value)
end

function EquipParamWeapon:bloodGuardResist(value)
    self:patchByte(0xFE, value)
end

function EquipParamWeapon:curseGuardResist(value)
    self:patchByte(0xFF, value)
end

function EquipParamWeapon:isDurabilityDivergence(value)
    self:patchByte(0x100, value)
end

-- Flags
-- 101
function EquipParamWeapon:rightHandEquipable(value)
    self:patchBinary(0x101, value, 0)
end

function EquipParamWeapon:leftHandEquipable(value)
    self:patchBinary(0x101, value, 1)
end

function EquipParamWeapon:bothHandEquipable(value)
    self:patchBinary(0x101, value, 2)
end

function EquipParamWeapon:arrowSlotEquipable(value)
    self:patchBinary(0x101, value, 3)
end

function EquipParamWeapon:boltSlotEquipable(value)
    self:patchBinary(0x101, value, 4)
end

function EquipParamWeapon:enableGuard(value)
    self:patchBinary(0x101, value, 5)
end

function EquipParamWeapon:enableParry(value)
    self:patchBinary(0x101, value, 6)
end

function EquipParamWeapon:enableMagic(value)
    self:patchBinary(0x101, value, 7)
end

-- 102
function EquipParamWeapon:enablePyromancy(value)
    self:patchBinary(0x102, value, 0)
end

function EquipParamWeapon:enableMiracle(value)
    self:patchBinary(0x102, value, 1)
end

function EquipParamWeapon:enableVowMagic(value)
    self:patchBinary(0x102, value, 2)
end

function EquipParamWeapon:isNormalAttackType(value)
    self:patchBinary(0x102, value, 3)
end

function EquipParamWeapon:isBlowAttackType(value)
    self:patchBinary(0x102, value, 4)
end

function EquipParamWeapon:isSlashAttackType(value)
    self:patchBinary(0x102, value, 5)
end

function EquipParamWeapon:isThrustAttackType(value)
    self:patchBinary(0x102, value, 6)
end

function EquipParamWeapon:isEnhance(value)
    self:patchBinary(0x102, value, 7)
end

-- 103
function EquipParamWeapon:isLuckCorrect(value)
    self:patchBinary(0x103, value, 0)
end

function EquipParamWeapon:isCustom(value)
    self:patchBinary(0x103, value, 1)
end

function EquipParamWeapon:disableBaseChangeReset(value)
    self:patchBinary(0x103, value, 2)
end

function EquipParamWeapon:disableRepair(value)
    self:patchBinary(0x103, value, 3)
end

function EquipParamWeapon:isDarkHand(value)
    self:patchBinary(0x103, value, 4)
end

function EquipParamWeapon:simpleModelForDlc(value)
    self:patchBinary(0x103, value, 5)
end

function EquipParamWeapon:ubytelanternWep(value)
    self:patchBinary(0x103, value, 6)
end

function EquipParamWeapon:isVersusGhostWep(value)
    self:patchBinary(0x103, value, 7)
end

--Changes the infusion icon
function EquipParamWeapon:baseChangeCategory(value)
    self:patchBinary(0x104, value, 0)
end
function EquipParamWeapon:baseChangeCategory1(value)
    self:patchBinary(0x104, value, 1)
end
function EquipParamWeapon:baseChangeCategory2(value)
    self:patchBinary(0x104, value, 2)
end
function EquipParamWeapon:baseChangeCategory3(value)
    self:patchBinary(0x104, value, 3)
end
function EquipParamWeapon:baseChangeCategory4(value)
    self:patchBinary(0x104, value, 4)
end
function EquipParamWeapon:baseChangeCategory5(value)
    self:patchBinary(0x104, value, 5)
end

--Greatbow/Greatarrow
function EquipParamWeapon:isDragonSlayer(value)
    self:patchBinary(0x104, value, 6)
end

function EquipParamWeapon:isDeposit(value)
    self:patchBinary(0x104, value, 7)
end

function EquipParamWeapon:disableMultiDropShare(value)
    self:patchBinary(0x105, value, 0)
end

function EquipParamWeapon:isDiscard(value)
    self:patchBinary(0x105, value, 1)
end

function EquipParamWeapon:isDrop(value)
    self:patchBinary(0x105, value, 2)
end

function EquipParamWeapon:weaponPosition(value)
    self:patch4Byte(0x170, value)
end

function EquipParamWeapon:dualWeaponType(value)
    self:patchByte(0x178, value)
end

function EquipParamWeapon:correctTypeMagic(value)
    self:patchByte(0x179, value)
end

function EquipParamWeapon:correctTypeFire(value)
    self:patchByte(0x17A, value)
end

function EquipParamWeapon:correctTypeThunder(value)
    self:patchByte(0x17B, value)
end

-- insert Unknown 1 104 Binary 4 - 180 here

function EquipParamWeapon:darkGuardCutRate(value)
    self:patchFloat(0x184, value)
end

function EquipParamWeapon:attackBaseDark(value)
    self:patch2Byte(0x188, value)
end

function EquipParamWeapon:correctTypeDark(value)
    self:patchByte(0x18A, value)
end

-- insert Unknown 2 18A-193 here

function EquipParamWeapon:frostGuardResist(value)
    self:patchByte(0x192, value)
end

function EquipParamWeapon:swordArt(value)
    self:patch4Byte(0x194, value)
end

function EquipParamWeapon:correctLuck(value)
    self:patchFloat(0x198, value)
end


-- insert Unknown 3 197-258 here

function EquipParamWeapon:quiverModel(value)
    self:patch4Byte(0x19C, value)
end

function EquipParamWeapon:categoryName(value)
    self:patch2Byte(0x1A2, value)
end


function EquipParamWeapon:sfxId0(value)
    self:patch4Byte(0x1D0, value)
end

function EquipParamWeapon:sfxId1(value)
    self:patch4Byte(0x1D4, value)
end

function EquipParamWeapon:sfxId2(value)
    self:patch4Byte(0x1D8, value)
end

function EquipParamWeapon:sfxId3(value)
    self:patch4Byte(0x1DC, value)
end

function EquipParamWeapon:sfxPos0(value)
    self:patch4Byte(0x1E0, value)
end

function EquipParamWeapon:sfxPos1(value)
    self:patch4Byte(0x1E4, value)
end

function EquipParamWeapon:sfxPos2(value)
    self:patch4Byte(0x1E8, value)
end

function EquipParamWeapon:sfxPos3(value)
    self:patch4Byte(0x1EC, value)
end

function EquipParamWeapon:staminaConsumption(value)
    self:patchFloat(0x1F0, value)
end


function EquipParamWeapon:AttackElementCorrect(value)
    self:patch4Byte(0x228, value)
end

function EquipParamWeapon:shopPrice(value)
    self:patch4Byte(0x22C, value)
end

function EquipParamWeapon:StackSize(value)
    self:patchByte(0x231, value)
end

--[[END EquipParamWeapon class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033269</ID>
                      <Description>"EquipParamProtector"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START EquipParamProtector class]]--
EquipParamProtector = BaseParamClass:new()

function EquipParamProtector:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("EquipParamProtector", uuid, id, address)
    return o
end

function EquipParamProtector:sortId(value)
    self:patch4Byte(0x0, value)
end

function EquipParamProtector:wanderingEquipId(value)
    self:patch4Byte(0x4, value)
end

function EquipParamProtector:vagrantItemLotId(value)
    self:patch4Byte(0x8, value)
end

function EquipParamProtector:vagrantBonusEneDropItemLotId(value)
    self:patch4Byte(0xC, value)
end

function EquipParamProtector:vagrantItemEneDropItemLotId(value)
    self:patch4Byte(0x10, value)
end

--Prices
function EquipParamProtector:fixPrice(value)
    self:patch4Byte(0x14, value)
end

function EquipParamProtector:basicPrice(value)
    self:patch4Byte(0x18, value)
end

function EquipParamProtector:sellValue(value)
    self:patch4Byte(0x1C, value)
end

function EquipParamProtector:weight(value)
    self:patchFloat(0x20, value)
end

--Effect On Equip
function EquipParamProtector:residentSpEffectId(value)
    self:patch4Byte(0x24, value)
end

function EquipParamProtector:residentSpEffectId2(value)
    self:patch4Byte(0x28, value)
end

function EquipParamProtector:residentSpEffectId3(value)
    self:patch4Byte(0x2C, value)
end


function EquipParamProtector:materialSetId(value)
    self:patch4Byte(0x30, value)
end

function EquipParamProtector:partsDamageRate(value)
    self:patchFloat(0x34, value)
end

function EquipParamProtector:corectSARecover(value)
    self:patchFloat(0x38, value)
end

--Origin Equip Pros
function EquipParamProtector:originEquipPro(value)
    self:patch4Byte(0x3C, value)
end

function EquipParamProtector:originEquipPro1(value)
    self:patch4Byte(0x40, value)
end

function EquipParamProtector:originEquipPro2(value)
    self:patch4Byte(0x44, value)
end

function EquipParamProtector:originEquipPro3(value)
    self:patch4Byte(0x48, value)
end

function EquipParamProtector:originEquipPro4(value)
    self:patch4Byte(0x4C, value)
end

function EquipParamProtector:originEquipPro5(value)
    self:patch4Byte(0x50, value)
end

function EquipParamProtector:originEquipPro6(value)
    self:patch4Byte(0x54, value)
end

function EquipParamProtector:originEquipPro7(value)
    self:patch4Byte(0x58, value)
end

function EquipParamProtector:originEquipPro8(value)
    self:patch4Byte(0x5C, value)
end

function EquipParamProtector:originEquipPro9(value)
    self:patch4Byte(0x60, value)
end

function EquipParamProtector:originEquipPro10(value)
    self:patch4Byte(0x64, value)
end

function EquipParamProtector:originEquipPro11(value)
    self:patch4Byte(0x68, value)
end

function EquipParamProtector:originEquipPro12(value)
    self:patch4Byte(0x6C, value)
end

function EquipParamProtector:originEquipPro13(value)
    self:patch4Byte(0x70, value)
end

function EquipParamProtector:originEquipPro14(value)
    self:patch4Byte(0x74, value)
end

function EquipParamProtector:originEquipPro15(value)
    self:patch4Byte(0x78, value)
end

--faceScale

function EquipParamProtector:faceScaleM_ScaleX(value)
    self:patchFloat(0x7C, value)
end

function EquipParamProtector:faceScaleM_ScaleZ(value)
    self:patchFloat(0x80, value)
end

function EquipParamProtector:faceScaleM_MaxX(value)
    self:patchFloat(0x84, value)
end

function EquipParamProtector:faceScaleM_MaxZ(value)
    self:patchFloat(0x88, value)
end

function EquipParamProtector:faceScaleF_ScaleX(value)
    self:patchFloat(0x8C, value)
end

function EquipParamProtector:faceScaleF_ScaleZ(value)
    self:patchFloat(0x90, value)
end

function EquipParamProtector:faceScaleF_MaxX(value)
    self:patchFloat(0x94, value)
end

function EquipParamProtector:faceScaleF_MaxZ(value)
    self:patchFloat(0x98, value)
end

function EquipParamProtector:qwcId(value)
    self:patch4Byte(0x9C, value)
end


function EquipParamProtector:equipModelId(value)
    self:patch2Byte(0xA0, value)
end

function EquipParamProtector:iconIdM(value)
    self:patch2Byte(0xA2, value)
end

function EquipParamProtector:iconIdF(value)
    self:patch4Byte(0xA4, value)
end

function EquipParamProtector:knockbackBounceRate(value)
    self:patch2Byte(0xA8, value)
end

--Durability
function EquipParamProtector:durability(value)
    self:patch2Byte(0xAA, value)
end

function EquipParamProtector:durabilityMax(value)
    self:patch2Byte(0xAC, value)
end

function EquipParamProtector:saDurability(value)
    self:patch2Byte(0xAE, value)
end


function EquipParamProtector:defFlickPower(value)
    self:patch2Byte(0xB0, value)
end

function EquipParamProtector:defensePhysics(value)
    self:patch2Byte(0xB2, value)
end

function EquipParamProtector:defenseMagic(value)
    self:patch2Byte(0xB4, value)
end

function EquipParamProtector:defenseFire(value)
    self:patch2Byte(0xB6, value)
end

function EquipParamProtector:defenseThunder(value)
    self:patch2Byte(0xB8, value)
end

function EquipParamProtector:defenseSlash(value)
    self:patch2Byte(0xBA, value)
end

function EquipParamProtector:defenseBlow(value)
    self:patch2Byte(0xBC, value)
end

function EquipParamProtector:defenseThrust(value)
    self:patch2Byte(0xBE, value)
end


--Resistence
function EquipParamProtector:resistPoison(value)
    self:patch2Byte(0xC0, value)
end

function EquipParamProtector:resistDisease(value)
    self:patch2Byte(0xC2, value)
end

function EquipParamProtector:resistBlood(value)
    self:patch2Byte(0xC4, value)
end

function EquipParamProtector:resistCurse(value)
    self:patch2Byte(0xC6, value)
end

function EquipParamProtector:reinforceTypeId(value)
    self:patch2Byte(0xC8, value)
end

function EquipParamProtector:trophySGradeId(value)
    self:patch2Byte(0xCA, value)
end

function EquipParamProtector:shopLv(value)
    self:patch2Byte(0xCC, value)
end

function EquipParamProtector:knockbackParamId(value)
    self:patchByte(0xCE, value)
end

function EquipParamProtector:flickDamageCutRate(value)
    self:patchByte(0xCF, value)
end

function EquipParamProtector:equipModelCategory(value)
    self:patchByte(0xD0, value)
end

function EquipParamProtector:equipModelGender(value)
    self:patchByte(0xD0, value)
end

function EquipParamProtector:protectorCategory(value)
    self:patchByte(0xD2, value)
end

function EquipParamProtector:defenseMaterial(value)
    self:patchByte(0xD3, value)
end

function EquipParamProtector:defenseMaterialSfx(value)
    self:patchByte(0xD4, value)
end

function EquipParamProtector:partsDmgType(value)
    self:patchByte(0xD5, value)
end

function EquipParamProtector:defenseMaterial_Weak(value)
    self:patchByte(0xD6, value)
end

function EquipParamProtector:defenseMaterialSfx_Weak(value)
    self:patchByte(0xD7, value)
end


function EquipParamProtector:isDiscard(value)
    self:patchBinary(0xDF, value, 0)
end

function EquipParamProtector:isDrop(value)
    self:patchBinary(0xDF, value, 1)
end



--Defense
function EquipParamProtector:absorbtionPhysical(value)
    self:patchFloat(0xE0, value)
end

function EquipParamProtector:absorbtionSlash(value)
    self:patchFloat(0xE4, value)
end

function EquipParamProtector:absorbtionStrike(value)
    self:patchFloat(0xE8, value)
end

function EquipParamProtector:absorbtionThrust(value)
    self:patchFloat(0xEC, value)
end

function EquipParamProtector:absorbtionMagic(value)
    self:patchFloat(0xF0, value)
end

function EquipParamProtector:absorbtionFire(value)
    self:patchFloat(0xF4, value)
end

function EquipParamProtector:absorbtionFire(value)
    self:patchFloat(0xF8, value)
end


function EquipParamProtector:poise(value)
    self:patchFloat(0x110, value)
end

function EquipParamProtector:absorbtionDark(value)
    self:patchFloat(0x118, value)
end

function EquipParamProtector:defenseDark(value)
    self:patch2Byte(0x11C, value)
end

function EquipParamProtector:shopPrice(value)
    self:patch4Byte(0x128, value)
end

function EquipParamProtector:resistFrost(value)
    self:patch2Byte(0x12C, value)
end

--[[END EquipParamProtector class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033270</ID>
                      <Description>"EquipParamGoods"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START EquipParamGoods class]]--
EquipParamGoods = BaseParamClass:new()

function EquipParamGoods:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("EquipParamGoods", uuid, id, address)
    return o
end

function EquipParamGoods:refId1(value)
    self:patch4Byte(0x0, value)
end

function EquipParamGoods:sfxVariationId(value)
    self:patch4Byte(0x4, value)
end

function EquipParamGoods:weight(value)
    self:patchFloat(0x8, value)
end

function EquipParamGoods:basicPrice(value)
    self:patch4Byte(0xC, value)
end

function EquipParamGoods:sellValue(value)
    self:patch4Byte(0x10, value)
end

function EquipParamGoods:behaviorId(value)
    self:patch4Byte(0x14, value)
end

function EquipParamGoods:replaceItemId(value)
    self:patch4Byte(0x18, value)
end

function EquipParamGoods:sortId(value)
    self:patch4Byte(0x1C, value)
end

function EquipParamGoods:qwcId(value)
    self:patch4Byte(0x20, value)
end

function EquipParamGoods:yesNoDialogMessageId(value)
    self:patch4Byte(0x24, value)
end

function EquipParamGoods:magicId(value)
    self:patch4Byte(0x28, value)
end

function EquipParamGoods:iconId(value)
    self:patch2Byte(0x2C, value)
end

function EquipParamGoods:modelId(value)
    self:patch2Byte(0x2E, value)
end

function EquipParamGoods:shopLv(value)
    self:patch2Byte(0x30, value)
end

function EquipParamGoods:compTrophySedId(value)
    self:patch2Byte(0x32, value)
end

function EquipParamGoods:trophySeqId(value)
    self:patch2Byte(0x34, value)
end

function EquipParamGoods:maxNum(value)
    self:patch2Byte(0x36, value)
end

function EquipParamGoods:consumeHeroPoint(value)
    self:patchByte(0x38, value)
end

function EquipParamGoods:overDexterity(value)
    self:patchByte(0x39, value)
end

function EquipParamGoods:goodsType(value)
    self:patchByte(0x3A, value)
end

function EquipParamGoods:refCategory(value)
    self:patchByte(0x3B, value)
end

function EquipParamGoods:spEffectCategory(value)
    self:patchByte(0x3C, value)
end

function EquipParamGoods:goodsUseAnim(value)
    self:patchByte(0x3E, value)
end

function EquipParamGoods:opmeMenuType(value)
    self:patchByte(0x3F, value)
end

function EquipParamGoods:useLimitCategory(value)
    self:patchByte(0x40, value)
end

function EquipParamGoods:replaceCategory(value)
    self:patchByte(0x41, value)
end

--Vow Types
function EquipParamGoods:vowType0(value)
    self:patchBinary(0x42, value, 0)
end

function EquipParamGoods:vowType1(value)
    self:patchBinary(0x42, value, 1)
end

function EquipParamGoods:vowType2(value)
    self:patchBinary(0x42, value, 2)
end

function EquipParamGoods:vowType3(value)
    self:patchBinary(0x42, value, 3)
end

function EquipParamGoods:vowType4(value)
    self:patchBinary(0x42, value, 4)
end

function EquipParamGoods:vowType5(value)
    self:patchBinary(0x42, value, 5)
end

function EquipParamGoods:vowType6(value)
    self:patchBinary(0x42, value, 6)
end

function EquipParamGoods:vowType7(value)
    self:patchBinary(0x42, value, 7)
end

function EquipParamGoods:vowType8(value)
    self:patchBinary(0x43, value, 0)
end

function EquipParamGoods:vowType9(value)
    self:patchBinary(0x43, value, 1)
end

function EquipParamGoods:vowType10(value)
    self:patchBinary(0x43, value, 2)
end

function EquipParamGoods:vowType11(value)
    self:patchBinary(0x43, value, 3)
end

function EquipParamGoods:vowType12(value)
    self:patchBinary(0x43, value, 4)
end

function EquipParamGoods:vowType13(value)
    self:patchBinary(0x43, value, 5)
end

function EquipParamGoods:vowType14(value)
    self:patchBinary(0x43, value, 6)
end

function EquipParamGoods:vowType15(value)
    self:patchBinary(0x43, value, 7)
end

--Flags
function EquipParamGoods:enable_live(value)
    self:patchBinary(0x44, value, 0)
end

function EquipParamGoods:enable_gray(value)
    self:patchBinary(0x44, value, 1)
end

function EquipParamGoods:enable_white(value)
    self:patchBinary(0x44, value, 2)
end

function EquipParamGoods:enable_black(value)
    self:patchBinary(0x44, value, 3)
end

function EquipParamGoods:enable_multi(value)
    self:patchBinary(0x44, value, 4)
end

function EquipParamGoods:disable_offline(value)
    self:patchBinary(0x44, value, 5)
end

function EquipParamGoods:isEquip(value)
    self:patchBinary(0x44, value, 6)
end

function EquipParamGoods:isConsume(value)
    self:patchBinary(0x44, value, 7)
end

function EquipParamGoods:isAutoEquip(value)
    self:patchBinary(0x45, value, 0)
end

function EquipParamGoods:isEstablishment(value)
    self:patchBinary(0x45, value, 1)
end

function EquipParamGoods:isOnlyOne(value)
    self:patchBinary(0x45, value, 2)
end

function EquipParamGoods:isDiscard(value)
    self:patchBinary(0x45, value, 3)
end

function EquipParamGoods:isDeposit(value)
    self:patchBinary(0x45, value, 4)
end

function EquipParamGoods:isDisableHand(value)
    self:patchBinary(0x45, value, 5)
end

function EquipParamGoods:IsTravelItem(value)
    self:patchBinary(0x45, value, 6)
end

function EquipParamGoods:isSuppleItem(value)
    self:patchBinary(0x45, value, 7)
end

function EquipParamGoods:isFullSuppleItem(value)
    self:patchBinary(0x46, value, 0)
end

function EquipParamGoods:isEnhance1(value)
    self:patchBinary(0x46, value, 1)
end

function EquipParamGoods:isFixItem(value)
    self:patchBinary(0x46, value, 2)
end

function EquipParamGoods:disableMultiDropShare(value)
    self:patchBinary(0x46, value, 3)
end

function EquipParamGoods:disableUseAtColiseum(value)
    self:patchBinary(0x46, value, 4)
end

function EquipParamGoods:disableUseAtOutOfColiseum(value)
    self:patchBinary(0x46, value, 5)
end

function EquipParamGoods:refId2(value)
    self:patch4Byte(0x48, value)
end

function EquipParamGoods:DamageScaling(value)
    self:patch4Byte(0x4C, value)
end

function EquipParamGoods:vagrantItemLotId(value)
    self:patch4Byte(0x50, value)
end

function EquipParamGoods:vagrantBonusEneDropItemLotId(value)
    self:patch4Byte(0x54, value)
end

function EquipParamGoods:vagrantItemEneDropItemLotId(value)
    self:patch4Byte(0x58, value)
end

function EquipParamGoods:sfxId(value)
    self:patch4Byte(0x5C, value)
end

function EquipParamGoods:sfxId1(value)
    self:patch4Byte(0x60, value)
end

function EquipParamGoods:sfxId2(value)
    self:patch4Byte(0x64, value)
end

function EquipParamGoods:isUse(value)
    self:patchBinary(0x68, value, 0)
end

function EquipParamGoods:ladderUse(value)
    self:patchBinary(0x68, value, 2)
end

function EquipParamGoods:isUseSelected(value)
    self:patchBinary(0x68, value, 4)
end

function EquipParamGoods:isEnhanceLeft(value)
    self:patchBinary(0x68, value, 5)
end

function EquipParamGoods:blockUse(value)
    self:patchBinary(0x68, value, 7)
end

function EquipParamGoods:isDrop(value)
    self:patchByte(0x6B, value)
end

function EquipParamGoods:storageMax(value)
    self:patch2Byte(0x6C, value)
end

function EquipParamGoods:shopPrice(value)
    self:patch4Byte(0x70, value)
end

function EquipParamGoods:FPCost(value)
    self:patch2Byte(0x74, value)
end

function EquipParamGoods:specialRestrict(value)
    self:patchByte(0x76, value)
end

--[[END EquipParamGoods class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033271</ID>
                      <Description>"EquipParamAccessory"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end


EquipParamAccessory = BaseParamClass:new()

function EquipParamAccessory:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("EquipParamAccessory", uuid, id, address)
    return o
end

function EquipParamAccessory:refId1(value)
    self:patch4Byte(0x0, value)
end

function EquipParamAccessory:sfxVariation(value)
    self:patch4Byte(0x4, value)
end

function EquipParamAccessory:weight(value)
    self:patchFloat(0x8, value)
end

function EquipParamAccessory:behaviorId(value)
    self:patch4Byte(0xC, value)
end

function EquipParamAccessory:basicPrice(value)
    self:patch4Byte(0x10, value)
end

function EquipParamAccessory:sellValue(value)
    self:patch4Byte(0x14, value)
end

function EquipParamAccessory:sortId(value)
    self:patch4Byte(0x18, value)
end

function EquipParamAccessory:qwcId(value)
    self:patch4Byte(0x1C, value)
end

function EquipParamAccessory:equipModelId(value)
    self:patch2Byte(0x20, value)
end

function EquipParamAccessory:iconId(value)
    self:patch2Byte(0x22, value)
end

function EquipParamAccessory:shopLv(value)
    self:patch2Byte(0x24, value)
end

function EquipParamAccessory:trophySGradeId(value)
    self:patch2Byte(0x26, value)
end

function EquipParamAccessory:trophySeqId(value)
    self:patch2Byte(0x28, value)
end

function EquipParamAccessory:equipModelCategory(value)
    self:patchByte(0x2A, value)
end

function EquipParamAccessory:equipModelGender(value)
    self:patchByte(0x2B, value)
end

function EquipParamAccessory:accessoryCategory(value)
    self:patchByte(0x2C, value)
end

function EquipParamAccessory:refCategory(value)
    self:patchByte(0x2D, value)
end

function EquipParamAccessory:spEffectCategory(value)
    self:patchByte(0x2E, value)
end

function EquipParamAccessory:isDiscard(value)
    self:patchBinary(0x3C, value, 3)
end

function EquipParamAccessory:isDrop(value)
    self:patchBinary(0x3C, value, 4)
end

function EquipParamAccessory:Covenant(value)
    self:patchByte(0x46, value)
end

function EquipParamAccessory:refId2(value)
    self:patch4Byte(0x48, value)
end

function EquipParamAccessory:refId3(value)
    self:patch4Byte(0x4C, value)
end

function EquipParamAccessory:refId4(value)
    self:patch4Byte(0x50, value)
end

function EquipParamAccessory:refId5(value)
    self:patch4Byte(0x54, value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033272</ID>
                      <Description>"SpEffectParam"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START SpEffectParam class]]--
SpEffectParam = BaseParamClass:new()

function SpEffectParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("SpEffectParam", uuid, id, address)
    return o
end

function SpEffectParam:iconId(value)
    self:patch4Byte(0x0, value)
end

function SpEffectParam:conditionHp(value)
    self:patchFloat(0x4, value)
end

function SpEffectParam:effectEndurance(value)
    self:patchFloat(0x8, value)
end

function SpEffectParam:motionInterval(value)
    self:patchFloat(0xC, value)
end

--Modifier
function SpEffectParam:maxHpRate(value)
    self:patchFloat(0x10, value)
end

function SpEffectParam:maxMpRate(value)
    self:patchFloat(0x14, value)
end

function SpEffectParam:maxStaminaRate(value)
    self:patchFloat(0x18, value)
end

--Damage Cut
function SpEffectParam:slashDamageCutRate(value)
    self:patchFloat(0x1C, value)
end

function SpEffectParam:blowDamageCutRate(value)
    self:patchFloat(0x20, value)
end

function SpEffectParam:thrustDamageCutRate(value)
    self:patchFloat(0x24, value)
end

function SpEffectParam:neutralDamageCutRate(value)
    self:patchFloat(0x28, value)
end

function SpEffectParam:magicDamageCutRate(value)
    self:patchFloat(0x2C, value)
end

function SpEffectParam:fireDamageCutRate(value)
    self:patchFloat(0x30, value)
end

function SpEffectParam:thunderDamageCutRate(value)
    self:patchFloat(0x34, value)
end

--Rate
function SpEffectParam:physicsAttackRate(value)
    self:patchFloat(0x38, value)
end

function SpEffectParam:magicAttackRate(value)
    self:patchFloat(0x3C, value)
end

function SpEffectParam:fireAttackRate(value)
    self:patchFloat(0x40, value)
end

function SpEffectParam:thunderAttackRate(value)
    self:patchFloat(0x44, value)
end

--Power Rate
function SpEffectParam:physicsAttackPowerRate(value)
    self:patchFloat(0x48, value)
end

function SpEffectParam:magicAttackPowerRate(value)
    self:patchFloat(0x4C, value)
end

function SpEffectParam:fireAttackPowerRate(value)
    self:patchFloat(0x50, value)
end

function SpEffectParam:thunderAttackPowerRate(value)
    self:patchFloat(0x54, value)
end

function SpEffectParam:physicsAttackPower(value)
    self:patch4Byte(0x58, value)
end

function SpEffectParam:magicAttackPower(value)
    self:patch4Byte(0x5C, value)
end

function SpEffectParam:fireAttackPower(value)
    self:patch4Byte(0x60, value)
end

function SpEffectParam:thunderAttackPower(value)
    self:patch4Byte(0x64, value)
end

--Diffence Rate
function SpEffectParam:physicsDiffenceRate(value)
    self:patchFloat(0x68, value)
end

function SpEffectParam:magicDiffenceRate(value)
    self:patchFloat(0x6C, value)
end

function SpEffectParam:fireDiffenceRate(value)
    self:patchFloat(0x70, value)
end

function SpEffectParam:thunderDiffenceRate(value)
    self:patchFloat(0x74, value)
end

function SpEffectParam:physicsDiffence(value)
    self:patch4Byte(0x78, value)
end

function SpEffectParam:magicDiffence(value)
    self:patch4Byte(0x7C, value)
end

function SpEffectParam:fireDiffence(value)
    self:patch4Byte(0x80, value)
end

function SpEffectParam:thunderDiffence(value)
    self:patch4Byte(0x84, value)
end

--Change Rare 1
function SpEffectParam:noGuardDamageRate(value)
    self:patchFloat(0x88, value)
end

function SpEffectParam:vitalSpotChangeRate(value)
    self:patchFloat(0x8C, value)
end

function SpEffectParam:normalSpotChangeRate(value)
    self:patchFloat(0x90, value)
end

function SpEffectParam:maxHpChangeRate(value)
    self:patchFloat(0x94, value)
end


function SpEffectParam:behaviorId(value)
    self:patch4Byte(0x98, value)
end

--Change Rare 2
function SpEffectParam:changeHpRate(value)
    self:patchFloat(0x9C, value)
end

function SpEffectParam:changeHpPoint(value)
    self:patch4Byte(0xA0, value)
end

function SpEffectParam:changeMpRate(value)
    self:patchFloat(0xA4, value)
end

function SpEffectParam:changeMpPoint(value)
    self:patch4Byte(0xA8, value)
end

function SpEffectParam:mpRecoverChangeSpeed(value)
    self:patch4Byte(0xAC, value)
end

function SpEffectParam:changeStaminaRate(value)
    self:patchFloat(0xB0, value)
end

function SpEffectParam:changeStaminaPoint(value)
    self:patch4Byte(0xB4, value)
end

function SpEffectParam:staminaRecoverChangeSpeed(value)
    self:patch4Byte(0xB8, value)
end


function SpEffectParam:magicEffectTimeChange(value)
    self:patchFloat(0xBC, value)
end

--Durability
function SpEffectParam:insideDurability(value)
    self:patch4Byte(0xC0, value)
end

function SpEffectParam:maxDurability(value)
    self:patch4Byte(0xC4, value)
end


function SpEffectParam:staminaAttackRate(value)
    self:patchFloat(0xC8, value)
end

function SpEffectParam:poizonAttackPower(value)
    self:patch4Byte(0xCC, value)
end

function SpEffectParam:registIllness(value)
    self:patch4Byte(0xD0, value)
end

function SpEffectParam:registBlood(value)
    self:patch4Byte(0xD4, value)
end

function SpEffectParam:registCurse(value)
    self:patch4Byte(0xD8, value)
end

function SpEffectParam:fallDamageRate(value)
    self:patchFloat(0xDC, value)
end

function SpEffectParam:soulRate(value)
    self:patchFloat(0xE0, value)
end

function SpEffectParam:equipWeightChangeRate(value)
    self:patchFloat(0xE4, value)
end

function SpEffectParam:allItemWeightChangeRate(value)
    self:patchFloat(0xE8, value)
end

function SpEffectParam:soul(value)
    self:patch4Byte(0xEC, value)
end

function SpEffectParam:animIdOffset(value)
    self:patch4Byte(0xF0, value)
end

function SpEffectParam:haveSoulRate(value)
    self:patchFloat(0xF4, value)
end

function SpEffectParam:targetPriority(value)
    self:patchFloat(0xF8, value)
end

function SpEffectParam:sightSearchEnemyCut(value)
    self:patch4Byte(0xFC, value)
end

function SpEffectParam:hearingSearchEnemyCut(value)
    self:patchFloat(0x100, value)
end

function SpEffectParam:grabityRate(value)
    self:patchFloat(0x104, value)
end

--Change Rate 3
function SpEffectParam:registPoizonChangeRate(value)
    self:patchFloat(0x108, value)
end

function SpEffectParam:registIllnessChangeRate(value)
    self:patchFloat(0x10C, value)
end

function SpEffectParam:registBloodChangeRate(value)
    self:patchFloat(0x110, value)
end

function SpEffectParam:registCurseChangeRate(value)
    self:patchFloat(0x114, value)
end


function SpEffectParam:soulStealRate(value)
    self:patchFloat(0x118, value)
end

function SpEffectParam:lifeReductionRate(value)
    self:patchFloat(0x11C, value)
end

function SpEffectParam:hpRecoverRate(value)
    self:patchFloat(0x120, value)
end

function SpEffectParam:replaceSpEffectId(value)
    self:patch4Byte(0x124, value)
end

function SpEffectParam:cycleOccurrenceSpEffectId(value)
    self:patch4Byte(0x128, value)
end

function SpEffectParam:atkOccurence(value)
    self:patch4Byte(0x12C, value)
end

function SpEffectParam:guardDefFlickPowerRate(value)
    self:patchFloat(0x130, value)
end

function SpEffectParam:guardStaminaCutRate(value)
    self:patchFloat(0x134, value)
end

function SpEffectParam:rayCastPassedTime(value)
    self:patch2Byte(0x138, value)
end

function SpEffectParam:changeSuperArmorPoint(value)
    self:patch2Byte(0x13A, value)
end

function SpEffectParam:bowDistRate(value)
    self:patch2Byte(0x13C, value)
end

function SpEffectParam:spCategory(value)
    self:patch2Byte(0x13E, value)
end

function SpEffectParam:categoryPriority(value)
    self:patchByte(0x140, value)
end

function SpEffectParam:saveCategory(value)
    self:patchByte(0x141, value)
end

function SpEffectParam:changeMagicSlot(value)
    self:patchByte(0x142, value)
end

function SpEffectParam:changeMiracleSlot(value)
    self:patchByte(0x143, value)
end

function SpEffectParam:heroPointDamage(value)
    self:patchByte(0x144, value)
end

function SpEffectParam:defFlickPower(value)
    self:patchByte(0x145, value)
end

function SpEffectParam:flickDamageCutRate(value)
    self:patchByte(0x146, value)
end

function SpEffectParam:bloodDamageRate(value)
    self:patchByte(0x147, value)
end

--Damage Level
function SpEffectParam:dmgLv_None(value)
    self:patchByte(0x148, value)
end

function SpEffectParam:dmgLv_S(value)
    self:patchByte(0x149, value)
end

function SpEffectParam:dmgLv_M(value)
    self:patchByte(0x14A, value)
end

function SpEffectParam:dmgLv_L(value)
    self:patchByte(0x14B, value)
end

function SpEffectParam:dmgLv_BlowM(value)
    self:patchByte(0x14C, value)
end

function SpEffectParam:dmgLv_Push(value)
    self:patchByte(0x14D, value)
end

function SpEffectParam:dmgLv_Strike(value)
    self:patchByte(0x14E, value)
end

function SpEffectParam:dmgLv_BlowS(value)
    self:patchByte(0x14F, value)
end

function SpEffectParam:dmgLv_Min(value)
    self:patchByte(0x150, value)
end

function SpEffectParam:dmgLv_Uppercut(value)
    self:patchByte(0x151, value)
end

function SpEffectParam:dmgLv_BlowLL(value)
    self:patchByte(0x152, value)
end

function SpEffectParam:dmgLv_Breath(value)
    self:patchByte(0x153, value)
end


function SpEffectParam:atkAttribute(value)
    self:patchByte(0x154, value)
end

function SpEffectParam:spAttribute(value)
    self:patchByte(0x155, value)
end

function SpEffectParam:stateInfo(value)
    self:patch2Byte(0x156, value)
end

function SpEffectParam:wepParamChange(value)
    self:patchByte(0x158, value)
end

function SpEffectParam:moveType(value)
    self:patchByte(0x159, value)
end

function SpEffectParam:lifeReductionType(value)
    self:patchByte(0x15A, value)
end

function SpEffectParam:throwCondition(value)
    self:patchByte(0x15C, value)
end

function SpEffectParam:addBehaviorJudgeId_condition(value)
    self:patchByte(0x15D, value)
end

function SpEffectParam:addBehaviorJudgeId_add(value)
    self:patchByte(0x15E, value)
end

-- insert Minor 1 here

function SpEffectParam:TargetSelf(value)
    self:patchBinary(0x15F, value, 0)
end

function SpEffectParam:TargetFriend(value)
    self:patchBinary(0x15F, value, 1)
end

function SpEffectParam:TargetEnemy(value)
    self:patchBinary(0x15F, value, 2)
end

function SpEffectParam:TargetPlayer(value)
    self:patchBinary(0x15F, value, 3)
end

function SpEffectParam:TargetAI(value)
    self:patchBinary(0x15F, value, 4)
end

function SpEffectParam:TargetLive(value)
    self:patchBinary(0x15F, value, 5)
end

function SpEffectParam:TargetGhost(value)
    self:patchBinary(0x15F, value, 6)
end

function SpEffectParam:TargetWhiteGhost(value)
    self:patchBinary(0x15F, value, 7)
end

function SpEffectParam:TargetBlackGhost(value)
    self:patchBinary(0x160, value, 0)
end

function SpEffectParam:TargetAttacker(value)
    self:patchBinary(0x160, value, 1)
end

function SpEffectParam:DispIconNonactive(value)
    self:patchBinary(0x160, value, 2)
end

function SpEffectParam:useSpEffectEffect(value)
    self:patchBinary(0x160, value, 3)
end

--scales with int
function SpEffectParam:bAdjustMagicAblity(value)
    self:patchBinary(0x160, value, 4)
end

--scales with fth
function SpEffectParam:bAdjustFaithAblity(value)
    self:patchBinary(0x160, value, 5)
end

--scales with NG+
function SpEffectParam:bGameClearBonus(value)
    self:patchBinary(0x160, value, 6)
end

--affects sorceries
function SpEffectParam:magParamChange(value)
    self:patchBinary(0x160, value, 7)
end

--affects miracles
function SpEffectParam:miracleParamChange(value)
    self:patchBinary(0x161, value, 0)
end

--removes souls
function SpEffectParam:clearSoul(value)
    self:patchBinary(0x161, value, 1)
end

--places white summon sign
function SpEffectParam:requestSOS(value)
    self:patchBinary(0x161, value, 2)
end

--places red summon sign
function SpEffectParam:requestBlackSOS(value)
    self:patchBinary(0x161, value, 3)
end

--try to invade
function SpEffectParam:requestForceJoinBlackSOS(value)
    self:patchBinary(0x161, value, 4)
end

--black crystal menu
function SpEffectParam:requestKickSession(value)
    self:patchBinary(0x161, value, 5)
end

--leave world as phantom
function SpEffectParam:requestLeaveSession(value)
    self:patchBinary(0x161, value, 6)
end

--search for npc world to invade if available
function SpEffectParam:requestNpcInveda(value)
    self:patchBinary(0x161, value, 7)
end

function SpEffectParam:noDead(value)
    self:patchBinary(0x162, value, 0)
end

function SpEffectParam:bCurrHPIndependeMaxHP(value)
    self:patchBinary(0x162, value, 1)
end

function SpEffectParam:corrosionIgnore(value)
    self:patchBinary(0x162, value, 2)
end

function SpEffectParam:sightSearchCutIgnore(value)
    self:patchBinary(0x162, value, 3)
end

function SpEffectParam:hearingSearchCutIgnore(value)
    self:patchBinary(0x162, value, 4)
end

function SpEffectParam:antiMagicIgnore(value)
    self:patchBinary(0x162, value, 5)
end

function SpEffectParam:fakeTargetIgnore(value)
    self:patchBinary(0x162, value, 6)
end

function SpEffectParam:fakeTargetIgnoreUndead(value)
    self:patchBinary(0x162, value, 7)
end

function SpEffectParam:fakeTargetIgnoreAnimal(value)
    self:patchBinary(0x163, value, 0)
end

function SpEffectParam:grabityIgnore(value)
    self:patchBinary(0x163, value, 1)
end

function SpEffectParam:disablePoison(value)
    self:patchBinary(0x163, value, 2)
end

function SpEffectParam:disableDisease(value)
    self:patchBinary(0x163, value, 3)
end

function SpEffectParam:disableBlood(value)
    self:patchBinary(0x163, value, 4)
end

function SpEffectParam:disableCurse(value)
    self:patchBinary(0x163, value, 5)
end

function SpEffectParam:enableCharm(value)
    self:patchBinary(0x163, value, 6)
end

function SpEffectParam:enableLifeTime(value)
    self:patchBinary(0x163, value, 7)
end

function SpEffectParam:hasTarget(value)
    self:patchBinary(0x164, value, 0)
end

function SpEffectParam:isFireDamageCancel(value)
    self:patchBinary(0x164, value, 1)
end

function SpEffectParam:isExtendSpEffectLife(value)
    self:patchBinary(0x164, value, 2)
end

--leave arena match
function SpEffectParam:requestLeaveColiseumSession(value)
    self:patchBinary(0x164, value, 3)
end

function SpEffectParam:vowType0(value)
    self:patchBinary(0x165, value, 0)
end

function SpEffectParam:vowType1(value)
    self:patchBinary(0x165, value, 1)
end

function SpEffectParam:vowType2(value)
    self:patchBinary(0x165, value, 2)
end

function SpEffectParam:vowType3(value)
    self:patchBinary(0x165, value, 3)
end

function SpEffectParam:vowType4(value)
    self:patchBinary(0x165, value, 4)
end

function SpEffectParam:vowType5(value)
    self:patchBinary(0x165, value, 5)
end

function SpEffectParam:vowType6(value)
    self:patchBinary(0x165, value, 6)
end

function SpEffectParam:vowType7(value)
    self:patchBinary(0x165, value, 7)
end

function SpEffectParam:vowType8(value)
    self:patchBinary(0x166, value, 0)
end

function SpEffectParam:vowType9(value)
    self:patchBinary(0x166, value, 1)
end

function SpEffectParam:vowType10(value)
    self:patchBinary(0x166, value, 2)
end

function SpEffectParam:vowType11(value)
    self:patchBinary(0x166, value, 3)
end

function SpEffectParam:vowType12(value)
    self:patchBinary(0x166, value, 4)
end

function SpEffectParam:vowType13(value)
    self:patchBinary(0x166, value, 5)
end

function SpEffectParam:vowType14(value)
    self:patchBinary(0x166, value, 6)
end

function SpEffectParam:vowType15(value)
    self:patchBinary(0x166, value, 7)
end


function SpEffectParam:behaviorFireFrom(value)
    self:patchByte(0x16E, value)
end

function SpEffectParam:effectSfx(value)
    self:patch4Byte(0x170, value)
end

function SpEffectParam:triggerEffect(value)
    self:patch4Byte(0x174, value)
end

function SpEffectParam:triggerRequirement(value)
    self:patch4Byte(0x178, value)
end

function SpEffectParam:effectSfx1(value)
    self:patch4Byte(0x190, value)
end

-- insert Unknown here

function SpEffectParam:registFrost(value)
    self:patch4Byte(0x1AC, value)
end

function SpEffectParam:darkDamageCutRate(value)
    self:patchFloat(0x1D4, value)
end

function SpEffectParam:darkDiffenceRate(value)
    self:patchFloat(0x1D8, value)
end

function SpEffectParam:darkDiffence(value)
    self:patchFloat(0x1DC, value)
end

function SpEffectParam:darkAttackPowerRate(value)
    self:patchFloat(0x1E4, value)
end

function SpEffectParam:darkAttackPower(value)
    self:patch4Byte(0x1E8, value)
end

function SpEffectParam:itemDiscovery(value)
    self:patchFloat(0x1FC, value)
end

--absorbtions pvp
function SpEffectParam:pvpAbsorbtionPhys(value)
    self:patchFloat(0x268, value)
end

function SpEffectParam:pvpAbsorbtionMag(value)
    self:patchFloat(0x26C, value)
end

function SpEffectParam:pvpAbsorbtionFire(value)
    self:patchFloat(0x270, value)
end

function SpEffectParam:pvpAbsorbtionThun(value)
    self:patchFloat(0x274, value)
end

function SpEffectParam:pvpAbsorbtionDark(value)
    self:patchFloat(0x278, value)
end

--absorbtions pve
function SpEffectParam:pveAbsorbtionPhys(value)
    self:patchFloat(0x27C, value)
end

function SpEffectParam:pveAbsorbtionMag(value)
    self:patchFloat(0x280, value)
end

function SpEffectParam:pveAbsorbtionFire(value)
    self:patchFloat(0x284, value)
end

function SpEffectParam:pveAbsorbtionThun(value)
    self:patchFloat(0x288, value)
end

function SpEffectParam:pveAbsorbtionDark(value)
    self:patchFloat(0x28C, value)
end

--damage pvp
function SpEffectParam:pvpAttackPhys(value)
    self:patchFloat(0x294, value)
end

function SpEffectParam:pvpAttackMag(value)
    self:patchFloat(0x298, value)
end

function SpEffectParam:pvpAttackFire(value)
    self:patchFloat(0x29C, value)
end

function SpEffectParam:pvpAttackThun(value)
    self:patchFloat(0x2A0, value)
end

function SpEffectParam:pvpAttackDark(value)
    self:patchFloat(0x2A4, value)
end

--damage pve
function SpEffectParam:pvpAttackPhys(value)
    self:patchFloat(0x2A8, value)
end

function SpEffectParam:pvpAttackMag(value)
    self:patchFloat(0x2AC, value)
end

function SpEffectParam:pvpAttackFire(value)
    self:patchFloat(0x2B0, value)
end

function SpEffectParam:pvpAttackThun(value)
    self:patchFloat(0x2B4, value)
end

function SpEffectParam:pvpAttackDark(value)
    self:patchFloat(0x2B8, value)
end

function SpEffectParam:registFrostChange(value)
    self:patch4Byte(0x2BC, value)
end



function SpEffectParam:pyroParamChange(value)
    self:patchBinary(0x2C6, value, 0)
end

function SpEffectParam:castDexterity(value)
    self:patchByte(0x2C7, value)
end

function SpEffectParam:magicMpCost(value)
    self:patchFloat(0x2D0, value)
end

function SpEffectParam:pyroMpCost(value)
    self:patchFloat(0x2D4, value)
end

function SpEffectParam:miracleMpCost(value)
    self:patchFloat(0x2D8, value)
end


function SpEffectParam:estusHpRate(value)
    self:patch4Byte(0x2DC, value)
end

function SpEffectParam:estusHpPoint(value)
    self:patch4Byte(0x2E0, value)
end

function SpEffectParam:estusMpRate(value)
    self:patch4Byte(0x2E4, value)
end

function SpEffectParam:etsusMpPoint(value)
    self:patch4Byte(0x2E8, value)
end

function SpEffectParam:estusMult(value)
    self:patchFloat(0x2EC, value)
end

function SpEffectParam:ashenMult(value)
    self:patchFloat(0x2F0, value)
end

--Buffs
function SpEffectParam:vigor(value)
    self:patchByte(0x308, value)
end

function SpEffectParam:attunement(value)
    self:patchByte(0x309, value)
end

function SpEffectParam:endurance(value)
    self:patchByte(0x30A, value)
end

function SpEffectParam:vitality(value)
    self:patchByte(0x30B, value)
end

function SpEffectParam:strength(value)
    self:patchByte(0x30C, value)
end

function SpEffectParam:dexterity(value)
    self:patchByte(0x30D, value)
end

function SpEffectParam:intelligence(value)
    self:patchByte(0x30E, value)
end

function SpEffectParam:faith(value)
    self:patchByte(0x30F, value)
end

function SpEffectParam:luck(value)
    self:patchByte(0x310, value)
end


--Compatibility
function SpEffectParam:vigorBuff(value)
    self:patchByte(0x308, value)
end

function SpEffectParam:attunementBuff(value)
    self:patchByte(0x309, value)
end

function SpEffectParam:enduranceBuff(value)
    self:patchByte(0x30A, value)
end

function SpEffectParam:vitalityBuff(value)
    self:patchByte(0x30B, value)
end

function SpEffectParam:strenghtBuff(value)
    self:patchByte(0x30C, value)
end

function SpEffectParam:dextrerityBuff(value)
    self:patchByte(0x30D, value)
end

function SpEffectParam:intelligenceBuff(value)
    self:patchByte(0x30E, value)
end

function SpEffectParam:faithBuff(value)
    self:patchByte(0x30F, value)
end

function SpEffectParam:luckBuff(value)
    self:patchByte(0x310, value)
end

--[[END SpEffectParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033273</ID>
                      <Description>"Magic"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START Magic class]]--
Magic = BaseParamClass:new()

function Magic:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("Magic", uuid, id, address)
    return o
end

function Magic:YesNoDialogMessageId(value)
    self:patchByte(0x0, value)
end

function Magic:LimitCancelSpEffectId(value)
    self:patch4Byte(0x4, value)
end

function Magic:SortId(value)
    self:patch2Byte(0x8, value)
end

function Magic:RefId(value)
    self:patch2Byte(0xA, value)
end

function Magic:Mp(value)
    self:patch2Byte(0xC, value)
end

function Magic:Stamina(value)
    self:patch2Byte(0xE, value)
end

function Magic:IconId(value)
    self:patch2Byte(0x10, value)
end

function Magic:BehaviorId(value)
    self:patch2Byte(0x12, value)
end

function Magic:MtrlItemId(value)
    self:patch2Byte(0x14, value)
end

function Magic:ReplaceMagicId(value)
    self:patch2Byte(0x16, value)
end

function Magic:MaxQuantity(value)
    self:patch2Byte(0x18, value)
end

function Magic:Humanity(value)
    self:patchByte(0x1A, value)
end

function Magic:OverDexterity(value)
    self:patchByte(0x1B, value)
end

function Magic:SfxVariationId(value)
    self:patchByte(0x1C, value)
end

function Magic:SlotLength(value)
    self:patchByte(0x1D, value)
end

function Magic:RequirementIntellect(value)
    self:patchByte(0x1E, value)
end

function Magic:RequirementFaith(value)
    self:patchByte(0x1F, value)
end

function Magic:AnalogDexiterityMin(value)
    self:patchByte(0x20, value)
end

function Magic:AnalogDexiterityMax(value)
    self:patchByte(0x21, value)
end

function Magic:EzStateBehaviorType(value)
    self:patchByte(0x22, value)
end

function Magic:RefCategory(value)
    self:patchByte(0x23, value)
end

function Magic:SpEffectCategory(value)
    self:patchByte(0x24, value)
end

function Magic:RefType(value)
    self:patchByte(0x25, value)
end

function Magic:OpmeMenuType(value)
    self:patchByte(0x26, value)
end

function Magic:HasSpEffectType(value)
    self:patchByte(0x27, value)
end

function Magic:ReplaceCategory(value)
    self:patchByte(0x28, value)
end

function Magic:UseLimitCategory(value)
    self:patchByte(0x29, value)
end

function Magic:DisableOffline(value)
    self:patchBinary(0x2A, value, 0)
end

function Magic:CastResonanceMagic(value)
    self:patchBinary(0x2A, value, 1)
end

function Magic:VowType0(value)
    self:patchBinary(0x2C, value, 0)
end

function Magic:VowType1(value)
    self:patchBinary(0x2C, value, 1)
end

function Magic:VowType2(value)
    self:patchBinary(0x2C, value, 2)
end

function Magic:VowType3(value)
    self:patchBinary(0x2C, value, 3)
end

function Magic:VowType4(value)
    self:patchBinary(0x2C, value, 4)
end

function Magic:VowType5(value)
    self:patchBinary(0x2C, value, 5)
end

function Magic:VowType6(value)
    self:patchBinary(0x2C, value, 6)
end

function Magic:VowType7(value)
    self:patchBinary(0x2C, value, 7)
end

function Magic:Enable_multi(value)
    self:patchBinary(0x2D, value, 0)
end

function Magic:Enable_multi_only(value)
    self:patchBinary(0x2D, value, 1)
end

function Magic:IsEnchant(value)
    self:patchBinary(0x2D, value, 2)
end

function Magic:IsShieldEnchant(value)
    self:patchBinary(0x2D, value, 3)
end

function Magic:Enable_live(value)
    self:patchBinary(0x2D, value, 4)
end

function Magic:Enable_gray(value)
    self:patchBinary(0x2D, value, 5)
end

function Magic:Enable_white(value)
    self:patchBinary(0x2D, value, 6)
end

function Magic:Enable_black(value)
    self:patchBinary(0x2D, value, 7)
end

function Magic:VowType8(value)
    self:patchBinary(0x2F, value, 0)
end

function Magic:VowType9(value)
    self:patchBinary(0x2F, value, 1)
end

function Magic:VowType10(value)
    self:patchBinary(0x2F, value, 2)
end

function Magic:VowType11(value)
    self:patchBinary(0x2F, value, 3)
end

function Magic:VowType12(value)
    self:patchBinary(0x2F, value, 4)
end

function Magic:VowType13(value)
    self:patchBinary(0x2F, value, 5)
end

function Magic:VowType14(value)
    self:patchBinary(0x2F, value, 6)
end

function Magic:VowType15(value)
    self:patchBinary(0x2F, value, 7)
end

-- insert 2E-2F

function Magic:sfxID1(value)
    self:patch4Byte(0x30, value)
end

function Magic:sfxID2(value)
    self:patch4Byte(0x34, value)
end

function Magic:sfxID3(value)
    self:patch4Byte(0x38, value)
end

-- insert 3C-40

--Faith Breakpoints
function Magic:FaithBreakpoint20(value)
    self:patchByte(0x41, value)
end

function Magic:FaithBreakpoint30(value)
    self:patchByte(0x42, value)
end

function Magic:FaithBreakpoint40(value)
    self:patchByte(0x43, value)
end

function Magic:FaithBreakpoint60(value)
    self:patchByte(0x44, value)
end

function Magic:useBullet2(value)
    self:patchByte(0x45, value)
end

--Spell cast at X Faith
function Magic:Spellcastat20Faith(value)
    self:patch4Byte(0x48, value)
end

function Magic:Spellcastat20Faith(value)
    self:patch4Byte(0x4C, value)
end

function Magic:Spellcastat20Faith(value)
    self:patch4Byte(0x50, value)
end

function Magic:Spellcastat20Faith(value)
    self:patch4Byte(0x54, value)
end

function Magic:useBullet3(value)
    self:patchByte(0x5D, value)
end

-- Bullets
function Magic:Bullet1(value)
    self:patch4Byte(0x64, value)
end

function Magic:Bullet2(value)
    self:patch4Byte(0x68, value)
end

function Magic:Bullet3(value)
    self:patch4Byte(0x6C, value)
end

function Magic:Bullet4(value)
    self:patch4Byte(0x70, value)
end


-- Compatibility with old names
function Magic:YesNoDialogBox(value)
    self:patchByte(0x0, value)
end

function Magic:LimitCancelSpEffectID(value)
    self:patch4Byte(0x4, value)
end

function Magic:SortID(value)
    self:patch2Byte(0x8, value)
end

function Magic:ReferenceID(value)
    self:patch2Byte(0xA, value)
end

function Magic:FPCost(value)
    self:patch2Byte(0xC, value)
end

function Magic:StaminaCost(value)
    self:patch2Byte(0xE, value)
end

function Magic:IconID(value)
    self:patch2Byte(0x10, value)
end

function Magic:BehaviorID(value)
    self:patch2Byte(0x12, value)
end

function Magic:MaterialItemID(value)
    self:patch2Byte(0x14, value)
end

function Magic:ReplaceMagicID(value)
    self:patch2Byte(0x16, value)
end

function Magic:NumberofCasts(value)
    self:patch2Byte(0x18, value)
end

function Magic:SFXVariation(value)
    self:patchByte(0x1C, value)
end

function Magic:SlotsUsed(value)
    self:patchByte(0x1D, value)
end

function Magic:RequiredINT(value)
    self:patchByte(0x1E, value)
end

function Magic:RequiredFAI(value)
    self:patchByte(0x1F, value)
end

function Magic:DexterityMinimumCastSpeedScaling(value)
    self:patchByte(0x20, value)
end

function Magic:DexterityMaximumCastSpeedScaling(value)
    self:patchByte(0x21, value)
end

function Magic:ReferenceCategory(value)
    self:patchByte(0x23, value)
end

function Magic:CastAnimation(value)
    self:patchByte(0x25, value)
end

function Magic:MenuType(value)
    self:patchByte(0x26, value)
end

function Magic:EnableMulti(value)
    self:patchBinary(0x2D, value, 0)
end

function Magic:EnableMultOnly(value)
    self:patchBinary(0x2D, value, 1)
end

function Magic:IsWeaponEnchant(value)
    self:patchBinary(0x2D, value, 2)
end

function Magic:EnableHuman(value)
    self:patchBinary(0x2D, value, 4)
end

function Magic:EnableDragonPhantom(value)
    self:patchBinary(0x2D, value, 5)
end

function Magic:EnableWhitePhantom(value)
    self:patchBinary(0x2D, value, 6)
end

function Magic:EnableBlackPhantom(value)
    self:patchBinary(0x2D, value, 7)
end

--[[END Magic class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033274</ID>
                      <Description>"Bullet"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START Bullet class]]--
Bullet = BaseParamClass:new()

function Bullet:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("Bullet", uuid, id, address)
    return o
end

function Bullet:atkId_Bullet(value)
    self:patch4Byte(0x0, value)
end

function Bullet:sfxId_Bullet(value)
    self:patch4Byte(0x4, value)
end

function Bullet:sfxId_Hit(value)
    self:patch4Byte(0x8, value)
end

function Bullet:sfxId_Flick(value)
    self:patch4Byte(0xC, value)
end

function Bullet:life(value)
    self:patchFloat(0x10, value)
end

function Bullet:dist(value)
    self:patchFloat(0x14, value)
end

function Bullet:shootInterval(value)
    self:patchFloat(0x18, value)
end

function Bullet:gravityInRange(value)
    self:patch4Byte(0x1C, value)
end

function Bullet:gravityOutRange(value)
    self:patchFloat(0x20, value)
end

function Bullet:hormingStopRange(value)
    self:patchFloat(0x24, value)
end

function Bullet:initVellocity(value)
    self:patchFloat(0x28, value)
end

function Bullet:accelInRange(value)
    self:patchFloat(0x2C, value)
end

function Bullet:accelOutRange(value)
    self:patchFloat(0x30, value)
end

function Bullet:maxVellocity(value)
    self:patchFloat(0x34, value)
end

function Bullet:minVellocity(value)
    self:patchFloat(0x38, value)
end

function Bullet:accelTime(value)
    self:patchFloat(0x3C, value)
end

function Bullet:homingBeginDist(value)
    self:patchFloat(0x40, value)
end

function Bullet:hitRadius(value)
    self:patchFloat(0x44, value)
end

function Bullet:hitRadiusMax(value)
    self:patchFloat(0x48, value)
end

function Bullet:spreadTime(value)
    self:patchFloat(0x4C, value)
end

function Bullet:expDelay(value)
    self:patchFloat(0x50, value)
end

function Bullet:hormingOffsetRange(value)
    self:patchFloat(0x54, value)
end

function Bullet:dmgHitRecordLifeTime(value)
    self:patchFloat(0x58, value)
end

function Bullet:externalForce(value)
    self:patch4Byte(0x5C, value)
end

function Bullet:spEffectIDForShooter(value)
    self:patch4Byte(0x60, value)
end

function Bullet:autoSearchNPCThinkID(value)
    self:patch4Byte(0x64, value)
end

function Bullet:HitBulletID(value)
    self:patch4Byte(0x68, value)
end

--Special Effect IDs
function Bullet:spEffectId0(value)
    self:patch4Byte(0x6C, value)
end

function Bullet:spEffectId1(value)
    self:patch4Byte(0x70, value)
end

function Bullet:spEffectId2(value)
    self:patch4Byte(0x74, value)
end

function Bullet:spEffectId3(value)
    self:patch4Byte(0x78, value)
end

function Bullet:spEffectId4(value)
    self:patch4Byte(0x7C, value)
end

function Bullet:numShoot(value)
    self:patch2Byte(0x80, value)
end

function Bullet:homingAngle(value)
    self:patch2Byte(0x82, value)
end

function Bullet:shootAngle(value)
    self:patch2Byte(0x84, value)
end

function Bullet:shootAngleInterval(value)
    self:patch2Byte(0x86, value)
end

function Bullet:shootAngleXInterval(value)
    self:patch2Byte(0x88, value)
end

--Damp's
function Bullet:damageDamp(value)
    self:patchByte(0x8A, value)
end

function Bullet:spelDamageDamp(value)
    self:patchByte(0x8B, value)
end

function Bullet:fireDamageDamp(value)
    self:patchByte(0x8C, value)
end

function Bullet:thunderDamageDamp(value)
    self:patchByte(0x8D, value)
end

function Bullet:staminaDamp(value)
    self:patchByte(0x8E, value)
end

function Bullet:knockbackDamp(value)
    self:patchByte(0x8F, value)
end


function Bullet:shootAngleXZ(value)
    self:patchByte(0x90, value)
end

function Bullet:lockShootLimitAng(value)
    self:patchByte(0x91, value)
end

function Bullet:isPenetrate(value)
    self:patchByte(0x92, value)
end

function Bullet:prevVelocityDirRate(value)
    self:patchByte(0x93, value)
end

function Bullet:atkAttribute(value)
    self:patchByte(0x94, value)
end

function Bullet:spAttribute(value)
    self:patchByte(0x95, value)
end

function Bullet:Material_AttackType(value)
    self:patchByte(0x96, value)
end

function Bullet:Material_AttackMaterial(value)
    self:patchByte(0x97, value)
end

function Bullet:Material_Size(value)
    self:patchByte(0x99, value)
end

function Bullet:launchConditionType(value)
    self:patchByte(0x99, value)
end

--Falgs
function Bullet:FollowType(value)
    self:patchBinary(0x9A, value, 0)
end

function Bullet:EmittePosType(value)
    self:patchBinary(0x9A, value, 1)
end

function Bullet:isAttackSFX(value)
    self:patchBinary(0x9A, value, 2)
end

function Bullet:isEndlessHit(value)
    self:patchBinary(0x9A, value, 3)
end

function Bullet:isPenetrateMap(value)
    self:patchBinary(0x9B, value, 0)
end

function Bullet:isHitBothTeam(value)
    self:patchBinary(0x9B, value, 1)
end

function Bullet:isUseSharedHitList(value)
    self:patchBinary(0x9B, value, 2)
end

function Bullet:isUseMultiDmyPolyIfPlace(value)
    self:patchBinary(0x9B, value, 3)
end

function Bullet:attachEffectType(value)
    self:patchBinary(0x9B, value, 4)
end

function Bullet:isHitForceBullet(value)
    self:patchBinary(0x9B, value, 5)
end

function Bullet:isIgnoreSfxIfHitWater(value)
    self:patchBinary(0x9B, value, 6)
end

function Bullet:isIgnoreMoveStateIfHitWater(value)
    self:patchBinary(0x9B, value, 7)
end

function Bullet:isHitDarkForceBullet(value)
    self:patchBinary(0x9C, value, 0)
end

-- insert Unknown binary flags 1-7 for 0x9C

--[[END Bullet class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033275</ID>
                      <Description>"ThrowParam"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START ThrowParam class]]--
ThrowParam = BaseParamClass:new()

function ThrowParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("ThrowParam", uuid, id, address)
    return o
end

function ThrowParam:AtkChrId(value)
    self:patch4Byte(0x0, value)
end

function ThrowParam:DefChrId(value)
    self:patch4Byte(0x4, value)
end

function ThrowParam:Dist(value)
    self:patchFloat(0x8, value)
end

function ThrowParam:DiffAngMin(value)
    self:patchFloat(0xC, value)
end

function ThrowParam:DiffAngMax(value)
    self:patchFloat(0x10, value)
end

function ThrowParam:UpperYRange(value)
    self:patchFloat(0x14, value)
end

function ThrowParam:LowerYRange(value)
    self:patchFloat(0x18, value)
end

function ThrowParam:DiffAngMyToDef(value)
    self:patchFloat(0x1C, value)
end

function ThrowParam:ThrowTypeId(value)
    self:patch4Byte(0x20, value)
end

function ThrowParam:AtkAnimId(value)
    self:patch4Byte(0x24, value)
end

function ThrowParam:DefAnimId(value)
    self:patch4Byte(0x28, value)
end

function ThrowParam:EscHp(value)
    self:patch2Byte(0x2C, value)
end

function ThrowParam:SelfEscCycleTime(value)
    self:patch2Byte(0x2E, value)
end

function ThrowParam:SphereCastRadiusRateTop(value)
    self:patch2Byte(0x30, value)
end

function ThrowParam:SphereCastRadiusRateLow(value)
    self:patch2Byte(0x32, value)
end

function ThrowParam:PadType(value)
    self:patchByte(0x34, value)
end

function ThrowParam:AtkEnableState(value)
    self:patchByte(0x35, value)
end

function ThrowParam:AtkSorbDmyId(value)
    self:patchByte(0x36, value)
end

function ThrowParam:DefSorbDmyId(value)
    self:patchByte(0x37, value)
end

function ThrowParam:ThrowType(value)
    self:patchByte(0x38, value)
end

function ThrowParam:SelfEscCycleCnt(value)
    self:patchByte(0x39, value)
end

function ThrowParam:DmyHasChrDirType(value)
    self:patchByte(0x3A, value)
end

-- insert 3B-7C here

--[[END ThrowParam class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033276</ID>
                      <Description>"BehaviorParam_PC"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START BehaviorParam_PC class]]--
BehaviorParam_PC = BaseParamClass:new()

function BehaviorParam_PC:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("BehaviorParam_PC", uuid, id, address)
    return o
end

function BehaviorParam_PC:variationId(value)
    self:patch4Byte(0x0, value)
end

function BehaviorParam_PC:behaviorJudgeId(value)
    self:patch4Byte(0x4, value)
end

function BehaviorParam_PC:ezStateBehaviorType_old(value)
    self:patchByte(0x8, value)
end

function BehaviorParam_PC:refType(value)
    self:patchByte(0x9, value)
end

function BehaviorParam_PC:refId(value)
    self:patch4Byte(0xC, value)
end

function BehaviorParam_PC:sfxVariationId(value)
    self:patch4Byte(0x10, value)
end

function BehaviorParam_PC:stamina(value)
    self:patch4Byte(0x14, value)
end

function BehaviorParam_PC:mp(value)
    self:patch4Byte(0x18, value)
end

function BehaviorParam_PC:category(value)
    self:patchByte(0x1C, value)
end

function BehaviorParam_PC:heroPoint(value)
    self:patchByte(0x1D, value)
end

function BehaviorParam_PC:pad1(value)
    self:patchByte(0x1E, value)
end

-- insert 0x1F here

--[[END BehaviorParam_PC class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033277</ID>
                      <Description>"AtkParam_Pc"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START AttackParam_PC class]]--
AtkParam_Pc = BaseParamClass:new()

function AtkParam_Pc:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("AtkParam_Pc", uuid, id, address)
    return o
end

function AtkParam_Pc:Hit0_Radius(value)
    self:patchFloat(0x0, value)
end

function AtkParam_Pc:Hit1_Radius(value)
    self:patchFloat(0x4, value)
end

function AtkParam_Pc:Hit2_Radius(value)
    self:patchFloat(0x8, value)
end

function AtkParam_Pc:Hit3_Radius(value)
    self:patchFloat(0xC, value)
end

function AtkParam_Pc:KnockbackDist(value)
    self:patchFloat(0x10, value)
end

function AtkParam_Pc:HitStopTime(value)
    self:patchFloat(0x14, value)
end

--Special Effect IDs
function AtkParam_Pc:SpecialEffectId0(value)
    self:patch4Byte(0x18, value)
end

function AtkParam_Pc:SpecialEffectId1(value)
    self:patch4Byte(0x1C, value)
end

function AtkParam_Pc:SpecialEffectId2(value)
    self:patch4Byte(0x20, value)
end

function AtkParam_Pc:SpecialEffectId3(value)
    self:patch4Byte(0x24, value)
end

function AtkParam_Pc:SpecialEffectId4(value)
    self:patch4Byte(0x28, value)
end

--Hit DmyPoly
function AtkParam_Pc:Hit0_DmyPoly1(value)
    self:patch2Byte(0x2C, value)
end

function AtkParam_Pc:Hit1_DmyPoly1(value)
    self:patch2Byte(0x2E, value)
end

function AtkParam_Pc:Hit2_DmyPoly1(value)
    self:patch2Byte(0x30, value)
end

function AtkParam_Pc:Hit3_DmyPoly1(value)
    self:patch2Byte(0x32, value)
end

function AtkParam_Pc:Hit0_DmyPoly2(value)
    self:patch2Byte(0x34, value)
end

function AtkParam_Pc:Hit1_DmyPoly2(value)
    self:patch2Byte(0x36, value)
end

function AtkParam_Pc:Hit2_DmyPoly2(value)
    self:patch2Byte(0x38, value)
end

function AtkParam_Pc:Hit3_DmyPoly2(value)
    self:patch2Byte(0x3A, value)
end
--

function AtkParam_Pc:BlowingCorrection(value)
    self:patch2Byte(0x3C, value)
end

--Corrections
function AtkParam_Pc:AtkPhysCorrection(value)
    self:patch2Byte(0x3E, value)
end

function AtkParam_Pc:AtkMagCorrection(value)
    self:patch2Byte(0x40, value)
end

function AtkParam_Pc:AtkFireCorrection(value)
    self:patch2Byte(0x42, value)
end

function AtkParam_Pc:AtkThunCorrection(value)
    self:patch2Byte(0x44, value)
end

function AtkParam_Pc:AtkStamCorrection(value)
    self:patch2Byte(0x46, value)
end

function AtkParam_Pc:GuardAtkRateCorrection(value)
    self:patch2Byte(0x48, value)
end

function AtkParam_Pc:GuardBreakCorrection(value)
    self:patch2Byte(0x4A, value)
end

function AtkParam_Pc:AtkThrowEscapeCorrection(value)
    self:patch2Byte(0x4C, value)
end

function AtkParam_Pc:AtkSuperArmorCorrection(value)
    self:patch2Byte(0x4E, value)
end
--

--Attack
function AtkParam_Pc:AtkPhys(value)
    self:patch2Byte(0x50, value)
end

function AtkParam_Pc:AtkMag(value)
    self:patch2Byte(0x52, value)
end

function AtkParam_Pc:AtkFire(value)
    self:patch2Byte(0x54, value)
end

function AtkParam_Pc:AtkThun(value)
    self:patch2Byte(0x56, value)
end

function AtkParam_Pc:AtkStam(value)
    self:patch2Byte(0x58, value)
end

function AtkParam_Pc:GuardAtkRate(value)
    self:patch2Byte(0x5A, value)
end

function AtkParam_Pc:GuardBreakRate(value)
    self:patch2Byte(0x5C, value)
end

function AtkParam_Pc:AtkSuperArmor(value)
    self:patch2Byte(0x5E, value)
end

function AtkParam_Pc:AtkThrowEscape(value)
    self:patch2Byte(0x60, value)
end

function AtkParam_Pc:AtkObj(value)
    self:patch2Byte(0x62, value)
end
--

function AtkParam_Pc:GuardStaminaCutRate(value)
    self:patch2Byte(0x64, value)
end

function AtkParam_Pc:GuardRate(value)
    self:patch2Byte(0x66, value)
end

function AtkParam_Pc:ThrowTypeId(value)
    self:patch2Byte(0x68, value)
end

--Hit Type
function AtkParam_Pc:Hit0_hitType(value)
    self:patchByte(0x6A, value)
end

function AtkParam_Pc:Hit1_hitType(value)
    self:patchByte(0x6B, value)
end

function AtkParam_Pc:Hit2_hitType(value)
    self:patchByte(0x6C, value)
end

function AtkParam_Pc:Hit3_hitType(value)
    self:patchByte(0x6D, value)
end


-- insert Unknown 1 6E-71

function AtkParam_Pc:DamageLevel(value)
    self:patchByte(0x72, value)
end

function AtkParam_Pc:MapHitType(value)
    self:patchByte(0x73, value)
end

function AtkParam_Pc:GuardCutCancelRate(value)
    self:patchByte(0x74, value)
end

function AtkParam_Pc:AtkAttribute(value)
    self:patchByte(0x75, value)
end

function AtkParam_Pc:SpecialAttributes(value)
    self:patchByte(0x76, value)
end

function AtkParam_Pc:AttackType(value)
    self:patchByte(0x77, value)
end

function AtkParam_Pc:AtkMaterial(value)
    self:patchByte(0x78, value)
end

function AtkParam_Pc:AtkSize(value)
    self:patchByte(0x79, value)
end

function AtkParam_Pc:DefMaterial(value)
    self:patchByte(0x7A, value)
end

function AtkParam_Pc:DefSfxMaterial(value)
    self:patchByte(0x7B, value)
end

function AtkParam_Pc:HitSourceType(value)
    self:patchByte(0x7C, value)
end

function AtkParam_Pc:ThrowFlag(value)
    self:patchByte(0x7D, value)
end

function AtkParam_Pc:isEffectDisabled(value)
    self:patchBinary(0x7E, value, 2)
end

function AtkParam_Pc:DoubleDamage(value) --Clientside
    self:patchBinary(0x7D, value, 6)
end

function AtkParam_Pc:isHitboxEnabled(value)
    self:patchBinary(0x81, value, 0)
end

function AtkParam_Pc:isHitBothTeams(value)
    self:patchBinary(0x81, value, 1)
end

function AtkParam_Pc:isSelfHit(value)
    self:patchBinary(0x81, value, 2)
end

function AtkParam_Pc:CameraActOnHit(value) --clientside
    self:patch4Byte(0x98, value)
end

function AtkParam_Pc:ThrowCameraAct(value) --clientside
    self:patch4Byte(0x9C, value)
end

-- insert Unknown 2 7E-1A4 here

--[[END AttackParam_PC class]]--

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033278</ID>
                      <Description>"SpEffectVFXClass"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START SpEffectVfxParam class]]--
SpEffectVfxParam = BaseParamClass:new()

function SpEffectVfxParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("SpEffectVfxParam", uuid, id, address)
    return o
end

function SpEffectVfxParam:midstSfxID(value)
    self:patch4Byte(0x0, value)
end

function SpEffectVfxParam:midstSeID(value)
    self:patch4Byte(0x4, value)
end

function SpEffectVfxParam:initSfxID(value)
    self:patch4Byte(0x8, value)
end

function SpEffectVfxParam:InitSeID(value)
    self:patch4Byte(0xC, value)
end

function SpEffectVfxParam:FinishSfxID(value)
    self:patch4Byte(0x10, value)
end

function SpEffectVfxParam:FinishSeID(value)
    self:patch4Byte(0x14, value)
end

function SpEffectVfxParam:camouflageBeginDist(value)
    self:patchFloat(0x18, value)
end

function SpEffectVfxParam:camouflageEndDist(value)
    self:patchFloat(0x1C, value)
end

function SpEffectVfxParam:transformProtectorID(value)
    self:patch4Byte(0x20, value)
end

function SpEffectVfxParam:midstDmyID(value)
    self:patch2Byte(0x24, value)
end

function SpEffectVfxParam:initDmyID(value)
    self:patch2Byte(0x26, value)
end

function SpEffectVfxParam:FinishDmyID(value)
    self:patch2Byte(0x28, value)
end

function SpEffectVfxParam:EffectType(value)
    self:patchByte(0x2A, value)
end

function SpEffectVfxParam:SoulParamIDForWepEnchant(value)
    self:patchByte(0x2B, value)
end

function SpEffectVfxParam:PlayCategory(value)
    self:patchByte(0x2C, value)
end

function SpEffectVfxParam:PlayPriority(value)
    self:patchByte(0x2D, value)
end

function SpEffectVfxParam:ExistEffectForLarge(value)
    self:patchBinary(0x2E, value , 0)
end

function SpEffectVfxParam:ExistEffectForSoul(value)
    self:patchBinary(0x2E, value , 1)
end

function SpEffectVfxParam:EffectInvisibleAtCamouflage(value)
    self:patchBinary(0x2E, value , 2)
end

function SpEffectVfxParam:useCamouflage(value)
    self:patchBinary(0x2E, value , 3)
end

function SpEffectVfxParam:InvisibleAtFriendCamouflage(value)
    self:patchBinary(0x2E, value , 4)
end

function SpEffectVfxParam:addMapAreaBlock(value)
    self:patchBinary(0x2E, value , 5)
end

function SpEffectVfxParam:halfCamouflage(value)
    self:patchBinary(0x2E, value , 6)
end

function SpEffectVfxParam:isFullBodyTransformProtectorID(value)
    self:patchBinary(0x2E, value , 7)
end

function SpEffectVfxParam:IsInvisibleWeapon(value)
    self:patchBinary(0x2F, value , 0)
end

function SpEffectVfxParam:IsSilence(value)
    self:patchBinary(0x2F, value , 1)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033279</ID>
                      <Description>"ObjectParamClass"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START ObjectParam class]]--
ObjectParam = BaseParamClass:new()

function ObjectParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("ObjectParam", uuid, id, address)
    return o
end

function ObjectParam:HP(value)
    self:patch2Byte(0x0, value)
end

function ObjectParam:IsBreakbyPlayerCollide(value)
    self:patchBinary(0x9, value, 1)
end


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033280</ID>
                      <Description>"BonfireWarpParam"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START BonfireWarpParam class]]--
BonfireWarpParam = BaseParamClass:new()

function BonfireWarpParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("BonfireWarpParam", uuid, id, address)
    return o
end

function BonfireWarpParam:LocationID(value)
    self:patch4Byte(0x0, value)
end

function BonfireWarpParam:WarpID(value)
    self:patch4Byte(0x4, value)
end

function BonfireWarpParam:NameID(value)
    self:patch4Byte(0x8, value)
end

--+C

function BonfireWarpParam:PictureID(value)
    self:patch4Byte(0x10, value)
end

function BonfireWarpParam:SectionID(value)
    self:patchByte(0x14, value)
end

--14

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033281</ID>
                      <Description>"HitSfxClass"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

HitEffectSfxParam = BaseParamClass:new()

function HitEffectSfxParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("HitEffectSfxParam", uuid, id, address)
    return o
end

function HitEffectSfxParam:Sfx1(value)
    self:patch4Byte(0x0, value)
end

function HitEffectSfxParam:Sfx2(value)
    self:patch4Byte(0x4, value)
end

function HitEffectSfxParam:Sfx3(value)
    self:patch4Byte(0x8, value)
end

function HitEffectSfxParam:Sfx4(value)
    self:patch4Byte(0xC, value)
end

function HitEffectSfxParam:Sfx5(value)
    self:patch4Byte(0x10, value)
end

function HitEffectSfxParam:Sfx6(value)
    self:patch4Byte(0x14, value)
end

function HitEffectSfxParam:Sfx7(value)
    self:patch4Byte(0x18, value)
end

function HitEffectSfxParam:Sfx8(value)
    self:patch4Byte(0x1C, value)
end

function HitEffectSfxParam:Sfx9(value)
    self:patch4Byte(0x20, value)
end

function HitEffectSfxParam:Sfx10(value)
    self:patch4Byte(0x24, value)
end

function HitEffectSfxParam:Sfx11(value)
    self:patch4Byte(0x28, value)
end

function HitEffectSfxParam:Sfx12(value)
    self:patch4Byte(0x2C, value)
end

function HitEffectSfxParam:Sfx13(value)
    self:patch4Byte(0x30, value)
end

function HitEffectSfxParam:Sfx14(value)
    self:patch4Byte(0x34, value)
end

function HitEffectSfxParam:Sfx15(value)
    self:patch4Byte(0x38, value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337037177</ID>
                      <Description>"ShopLineupParam"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

ShopLineupParam = BaseParamClass:new()

function ShopLineupParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("ShopLineupParam", uuid, id, address)
    return o
end

function ShopLineupParam:EquipId(value)
    self:patch4Byte(0x0,value)
end

function ShopLineupParam:Value(value)
    self:patch4Byte(0x4,value)
end

function ShopLineupParam:EventFlag(value)
    self:patch4Byte(0x8,value)
end

function ShopLineupParam:MtrlId(value)
    self:patch4Byte(0xC,value)
end

function ShopLineupParam:Soul(value)
    self:patch4Byte(0x10,value)
end

function ShopLineupParam:SellQuantity(value)
    self:patch2Byte(0x14,value)
end

function ShopLineupParam:ShopType(value)
    self:patchByte(0x16,value)
end

function ShopLineupParam:EquipType(value)
    self:patchByte(0x17,value)
end

function ShopLineupParam:Durability(value)
    self:patch2Byte(0x18,value)
end

function ShopLineupParam:Unknown(value)
    self:patch4Byte(0x1C,value)
end

function ShopLineupParam:ValueCorrection(value)
    self:patchFloat(0x20,value)
end


--Compatibility
function ShopLineupParam:ItemId(value)
    self:patch4Byte(0x0,value)
end

function ShopLineupParam:Price(value)
    self:patch2Byte(0x4,value)
end

function ShopLineupParam:ModelId(value)
    self:patch2Byte(0x10,value)
end

function ShopLineupParam:Amount(value)
    self:patch2Byte(0x14,value)
end

function ShopLineupParam:Category(value)
    self:patchByte(0x17,value)
end

function ShopLineupParam:CostMultiplier(value)
    self:patchFloat(0x20,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337072047</ID>
                      <Description>"ClearCountCorrectParam"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

ClearCountCorrectParam = BaseParamClass:new()

function ClearCountCorrectParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("ClearCountCorrectParam", uuid, id, address)
    return o
end

function ClearCountCorrectParam:MaxHP(value)
    self:patch4Byte(0x00,value)
end

function ClearCountCorrectParam:Unknown1(value)
    self:patch4Byte(0x08,value)
end

function ClearCountCorrectParam:Unknown2(value)
    self:patch4Byte(0x0C,value)
end

function ClearCountCorrectParam:PhysicalATK(value)
    self:patch4Byte(0x1C,value)
end

function ClearCountCorrectParam:MagATK(value)
    self:patch4Byte(0x20,value)
end

function ClearCountCorrectParam:FireATK(value)
    self:patch4Byte(0x24,value)
end

function ClearCountCorrectParam:ThunATK(value)
    self:patch4Byte(0x28,value)
end

function ClearCountCorrectParam:DarkATK(value)
    self:patch4Byte(0x2C,value)
end

function ClearCountCorrectParam:PhysicalDEF(value)
    self:patch4Byte(0x30,value)
end

function ClearCountCorrectParam:MagDEF(value)
    self:patch4Byte(0x34,value)
end

function ClearCountCorrectParam:FireDEF(value)
    self:patch4Byte(0x38,value)
end

function ClearCountCorrectParam:ThunDEF(value)
    self:patch4Byte(0x3C,value)
end

function ClearCountCorrectParam:DarkDEF(value)
    self:patch4Byte(0x40,value)
end

function ClearCountCorrectParam:Unknown3(value)
    self:patch4Byte(0x44,value)
end

function ClearCountCorrectParam:Soul(value)
    self:patch4Byte(0x48,value)
end

function ClearCountCorrectParam:PoisonRES(value)
    self:patch4Byte(0x4C,value)
end

function ClearCountCorrectParam:ToxicRES(value)
    self:patch4Byte(0x50,value)
end

function ClearCountCorrectParam:BloodRES(value)
    self:patch4Byte(0x54,value)
end

function ClearCountCorrectParam:CurseRES(value)
    self:patch4Byte(0x58,value)
end

function ClearCountCorrectParam:FrostRES(value)
    self:patch4Byte(0x5C,value)
end

function ClearCountCorrectParam:Unknown4(value)
    self:patch4Byte(0x64,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337072045</ID>
                      <Description>"CharaInitParam"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

CharaInitParam = BaseParamClass:new()

function CharaInitParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("CharaInitParam", uuid, id, address)
    return o
end

function CharaInitParam:Souls(value)
    self:patch4Byte(0x0C,value)
end

function CharaInitParam:PrimaryRightWep(value)
    self:patch4Byte(0x10,value)
end

function CharaInitParam:SecondaryRightWep(value)
    self:patch4Byte(0x14,value)
end

function CharaInitParam:PrimaryLeftWep(value)
    self:patch4Byte(0x18,value)
end

function CharaInitParam:SecondaryLeftWep(value)
    self:patch4Byte(0x1C,value)
end

function CharaInitParam:Helmet(value)
    self:patch4Byte(0x20,value)
end

function CharaInitParam:Armor(value)
    self:patch4Byte(0x24,value)
end

function CharaInitParam:Gauntlet(value)
    self:patch4Byte(0x28,value)
end

function CharaInitParam:Leggings(value)
    self:patch4Byte(0x2C,value)
end

function CharaInitParam:PrimaryArrow(value)
    self:patch4Byte(0x30,value)
end

function CharaInitParam:PrimaryBolt(value)
    self:patch4Byte(0x34,value)
end

function CharaInitParam:SecondaryArrow(value)
    self:patch4Byte(0x38,value)
end

function CharaInitParam:SecondaryBolt(value)
    self:patch4Byte(0x3C,value)
end

function CharaInitParam:Ring1(value)
    self:patch4Byte(0x40,value)
end

function CharaInitParam:Ring2(value)
    self:patch4Byte(0x44,value)
end

function CharaInitParam:Ring3(value)
    self:patch4Byte(0x48,value)
end

function CharaInitParam:Ring4(value)
    self:patch4Byte(0x4C,value)
end

function CharaInitParam:VOW_Type(value)
    self:patch4Byte(0x50,value)
end

function CharaInitParam:AttunementSlot1(value)
    self:patch4Byte(0x60,value)
end

function CharaInitParam:AttunementSlot2(value)
    self:patch4Byte(0x64,value)
end

function CharaInitParam:AttunementSlot3(value)
    self:patch4Byte(0x68,value)
end

function CharaInitParam:AttunementSlot4(value)
    self:patch4Byte(0x6C,value)
end

function CharaInitParam:AttunementSlot5(value)
    self:patch4Byte(0x70,value)
end

function CharaInitParam:AttunementSlot6(value)
    self:patch4Byte(0x74,value)
end

function CharaInitParam:AttunementSlot7(value)
    self:patch4Byte(0x78,value)
end

function CharaInitParam:QuickItem1(value)
    self:patch4Byte(0x7C,value)
end

function CharaInitParam:QuickItem2(value)
    self:patch4Byte(0x80,value)
end

function CharaInitParam:QuickItem3(value)
    self:patch4Byte(0x84,value)
end

function CharaInitParam:QuickItem4(value)
    self:patch4Byte(0x88,value)
end

function CharaInitParam:QuickItem5(value)
    self:patch4Byte(0x8C,value)
end

function CharaInitParam:QuickItem6(value)
    self:patch4Byte(0x90,value)
end

function CharaInitParam:QuickItem7(value)
    self:patch4Byte(0x94,value)
end

function CharaInitParam:QuickItem8(value)
    self:patch4Byte(0x98,value)
end

function CharaInitParam:QuickItem9(value)
    self:patch4Byte(0x9C,value)
end

function CharaInitParam:QuickItem10(value)
    self:patch4Byte(0x100,value)
end

function CharaInitParam:TertiaryRightHand(value)
    self:patch4Byte(0x108,value)
end

function CharaInitParam:TertiaryLeftWep(value)
    self:patch4Byte(0x10C,value)
end

function CharaInitParam:Toolbelt1(value)
    self:patch4Byte(0x114,value)
end

function CharaInitParam:Toolbelt2(value)
    self:patch4Byte(0x118,value)
end

function CharaInitParam:Toolbelt3(value)
    self:patch4Byte(0x11C,value)
end

function CharaInitParam:Toolbelt4(value)
    self:patch4Byte(0x120,value)
end

function CharaInitParam:Toolbelt5(value)
    self:patch4Byte(0x124,value)
end

function CharaInitParam:Toolbelt6(value)
    self:patch4Byte(0x128,value)
end

function CharaInitParam:ToolbeltAmount1(value)
    self:patchByte(0x12C,value)
end

function CharaInitParam:ToolbeltAmount2(value)
    self:patchByte(0x12D,value)
end

function CharaInitParam:ToolbeltAmount3(value)
    self:patchByte(0x12E,value)
end

function CharaInitParam:ToolbeltAmount4(value)
    self:patchByte(0x12F,value)
end

function CharaInitParam:ToolbeltAmount5(value)
    self:patchByte(0x130,value)
end

function CharaInitParam:ToolbeltAmount6(value)
    self:patchByte(0x131,value)
end

function CharaInitParam:EstusFlask(value)
    self:patchByte(0x132,value)
end

function CharaInitParam:AshenEstusFlask(value)
    self:patchByte(0x133,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033283</ID>
                      <Description>"ItemLotParam"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

ItemLotParam = BaseParamClass:new()

function ItemLotParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("ItemLotParam", uuid, id, address)
    return o
end

function ShopLineupParam:ItemId(value)
    self:patch4Byte(0x0,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337078663</ID>
                      <Description>"RoleParam"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

RoleParam = BaseParamClass:new()

function RoleParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("RoleParam", uuid, id, address)
    return o
end

function RoleParam:teamType(value)
    self:patchByte(0x00,value)
end

function RoleParam:phantomParamId(value)
    self:patch4Byte(0x04,value)
end

function RoleParam:soapstoneColor1(value)
    self:patch4Byte(0x30,value)
end

function RoleParam:soapstoneColor(value)
    self:patch4Byte(0x34,value)
end

function RoleParam:animEntry(value)
    self:patch4Byte(0x38,value)
end

function RoleParam:itemLotId(value)
    self:patch4Byte(0x3C,value)
end

function RoleParam:voiceChat(value)
    self:patchByte(0x40,value)
end

function RoleParam:displayNameType(value)
    self:patchByte(0x41,value)
end

function RoleParam:displayTeamTypeName(value)
    self:patch4Byte(0x44,value)
end

function RoleParam:teamType1(value)
    self:patch4Byte(0x48,value)
end

function RoleParam:phantomParamId1(value)
    self:patch4Byte(0x4C,value)
end

function RoleParam:phantomParamId2(value)
    self:patch4Byte(0x50,value)
end

function RoleParam:phantomParamId3(value)
    self:patch4Byte(0x54,value)
end

function RoleParam:spEffectId(value)
    self:patch4Byte(0x58,value)
end

function RoleParam:spEffectId1(value)
    self:patch4Byte(0x5C,value)
end

function RoleParam:spEffectId2(value)
    self:patch4Byte(0x60,value)
end

function RoleParam:spEffectId3(value)
    self:patch4Byte(0x64,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337079938</ID>
                      <Description>"PhantomParam"</Description>
                      <LastState Activated="1"/>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

PhantomParam = BaseParamClass:new()

function PhantomParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("PhantomParam", uuid, id, address)
    return o
end

function PhantomParam:Brightness(value)
    self:patchFloat(0x00,value)
end

function PhantomParam:Brightness1(value)
    self:patchFloat(0x04,value)
end

function PhantomParam:Brightness2(value)
    self:patchFloat(0x08,value)
end

function PhantomParam:Brightness3(value)
    self:patchFloat(0x0C,value)
end

function PhantomParam:Brightness4(value)
    self:patchFloat(0x10,value)
end

function PhantomParam:Red(value)
    self:patchByte(0x11,value)
end

function PhantomParam:Green(value)
    self:patchByte(0x12,value)
end

function PhantomParam:Blue(value)
    self:patchByte(0x13,value)
end

function PhantomParam:Red1(value)
    self:patchByte(0x14,value)
end

function PhantomParam:Green1(value)
    self:patchByte(0x15,value)
end

function PhantomParam:Blue1(value)
    self:patchByte(0x16,value)
end

function PhantomParam:Red2(value)
    self:patchByte(0x17,value)
end

function PhantomParam:Green2(value)
    self:patchByte(0x18,value)
end

function PhantomParam:Blue2(value)
    self:patchByte(0x19,value)
end

function PhantomParam:Red3(value)
    self:patchByte(0x1A,value)
end

function PhantomParam:Green3(value)
    self:patchByte(0x1B,value)
end

function PhantomParam:Blue3(value)
    self:patchByte(0x1C,value)
end

function PhantomParam:Red4(value)
    self:patchByte(0x1D,value)
end

function PhantomParam:Green4(value)
    self:patchByte(0x1E,value)
end

function PhantomParam:Blue4(value)
    self:patchByte(0x1F,value)
end

function PhantomParam:Fade(value)
    self:patchFloat(0x24,value)
end

function PhantomParam:Fade1(value)
    self:patchFloat(0x28,value)
end

function PhantomParam:FadeType(value)
    self:patchByte(0x2C,value)
end

function PhantomParam:Flag(value)
    self:patchByte(0x2D,value)
end

function PhantomParam:Flag1(value)
    self:patchByte(0x2E,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337033284</ID>
                      <Description>"SwordArtsParam"</Description>
                      <LastState Activated="1"/>
                      <Color>000000</Color>
                      <VariableType>Auto Assembler Script</VariableType>
                      <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end

--[[START SwordArtsParam class]]--
SwordArtsParam = BaseParamClass:new()

function SwordArtsParam:new(uuid, id, address)
    local o = {}
    self.__index = self
    setmetatable(o, self)

    o:init("SwordArtsParam", uuid, id, address)
    return o
end

function SwordArtsParam:WeaponArtId(value)
    self:patchByte(0x0,value)
end

function SwordArtsParam:FPcost(value)
    self:patch2Byte(0xE,value)
end

function SwordArtsParam:R1FP(value)
    self:patch2Byte(0x10,value)
end

function SwordArtsParam:R2FP(value)
    self:patch2Byte(0x12,value)
end

[DISABLE]
{$lua}
if syntaxcheck then return end

</AssemblerScript>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>1337033885</ID>
              <Description>"Custom Weapons"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>1337085155</ID>
                  <Description>"OneAtATime"</Description>
                  <Options moHideChildren="1"/>
                  <LastState/>
                  <Color>808000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                </CheatEntry>
                <CheatEntry>
                  <ID>1337033886</ID>
                  <Description>"Open/close all weapon classes"</Description>
                  <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>1337080048</ID>
                      <Description>"Daggers"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085227</ID>
                          <Description>"Bandit's Knife"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080031</ID>
                              <Description>"Bandit's Knife: Painting CS 1/2HR1 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BanditsKnife1",1010000)
   weapon:behaviorVariationId(5301)
   weapon:wepmotionCategory(101)
   --Bandits1:spAtkcategory(141)
   weapon:swordArt(606)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BanditsKnife1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080032</ID>
                              <Description>"Bandit's Knife: Painting CS 1H Set &amp; WA and 1H Dagger Set as 2H Set"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BanditsKnife1",1010000)
   weapon:behaviorVariationId(5301)
   weapon:wepmotionCategory(101)--101
   weapon:spAtkcategory(141)--141
   weapon:swordArt(606)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BanditsKnife1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034001</ID>
                          <Description>"Brigand Twindaggers: Sellsword 1H Set &amp; WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BrigandTwindaggers2",16060000)
    weapon:behaviorVariationId(5304)--5300
    weapon:wepmotionCategory(137)--137
    weapon:spAtkcategory(141)--141,143
    weapon:swordArt(2700)--605
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BrigandTwindaggers2")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085228</ID>
                          <Description>"Corvian Greatknife"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034018</ID>
                              <Description>"Corvian Greatknife: Ember WA (RKSS) &amp; Thrust 2HR2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("CorvianGreatknife",1090000)
   weapon:behaviorVariationId(2330)
--   CorvianGK:wepmotionCategory(0)
   weapon:spAtkcategory(251)
--   CorvianGK:AnimationList(0)
   weapon:swordArt(207)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)

    local RKSS_Atk1 = AtkParam_Pc:new("CorvianGreatknife",2330700)
    RKSS_Atk1:Hit0_Radius(1.8)

    local RKSS_Atk2 = AtkParam_Pc:new("CorvianGreatknife",2330701)
    RKSS_Atk2:Hit0_Radius(1.8)

    local RKSS_Atk3 = AtkParam_Pc:new("CorvianGreatknife",2330710)
    RKSS_Atk3:Hit0_Radius(1.8)

    local RKSS_Atk4 = AtkParam_Pc:new("CorvianGreatknife",2330711)
    RKSS_Atk4:Hit0_Radius(1.8)

    local RKSS_Atk5 = AtkParam_Pc:new("CorvianGreatknife",2330721)
    RKSS_Atk5:Hit0_Radius(1.8)

    local RKSS_Atk6 = AtkParam_Pc:new("CorvianGreatknife",2330730)
    RKSS_Atk6:Hit0_Radius(1.8)

    local RKSS_Atk7 = AtkParam_Pc:new("CorvianGreatknife",2330740)
    RKSS_Atk7:Hit0_Radius(1.8)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CorvianGreatknife")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034019</ID>
                              <Description>"Corvian Greatknife: Prying Wedge WA (Sabre) &amp; Thrust 2H R2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CorvianGreatknife1",1090000)
    weapon:behaviorVariationId(2812)
    weapon:spAtkcategory(247)
    weapon:swordArt(607)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CorvianGreatknife1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033981</ID>
                              <Description>"Corvian Greatknife: Sacred Light &amp; Flame WA &amp; Stab 2HR2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CorvianGreatknife",1090000)
    weapon:behaviorVariationId(2511)--2500/2300
    weapon:correctMagic(25)
    weapon:correctFaith(25)
    weapon:attackBasePhysics(70)
    weapon:attackBaseFire(25)
    weapon:spAttribute(2)
    weapon:spAtkcategory(155)--155
    weapon:swordArt(305)--300/200
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CorvianGreatknife")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079967</ID>
                              <Description>"Corvian Greatknife: Katana R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CorvianGreatknife",1090000)
    weapon:behaviorVariationId(2900)
    weapon:wepmotionCategory(29)
    weapon:spAtkcategory(37)
    weapon:swordArt(802)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CorvianGreatknife")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034023</ID>
                          <Description>"Dagger: Stance WA (SS) &amp; Estoc R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Dagger1",1000000)
    weapon:behaviorVariationId(2306)
    weapon:spAtkcategory(113)
    weapon:swordArt(200)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Dagger1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080101</ID>
                          <Description>"Handmaid's Dagger: Frost Blade WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HandmaidsDagger1",1120000)
    weapon:behaviorVariationId(5303)
    weapon:wepmotionCategory(164)
    weapon:spAtkcategory(20)
    --HandmaidsD1:AnimationList(1)
    weapon:swordArt(603)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HandmaidsDagger1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085233</ID>
                          <Description>"Harpe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034110</ID>
                              <Description>"Harpe: 1H Dagger Set on 2H &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Harpe1",1060000)
    weapon:behaviorVariationId(5360)
--    HarpeD1:wepmotionCategory(28)
    weapon:spAtkcategory(141)
--    HarpeD1:AnimationList(1)
    weapon:swordArt(600)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Harpe1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033964</ID>
                              <Description>"Harpe: Dancer's 2HR1s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Harpe1",1060000)
    weapon:behaviorVariationId(2806)
--    HarpeD1:wepmotionCategory(28)
    weapon:spAtkcategory(139)
--    HarpeD1:AnimationList(1)
    weapon:swordArt(2720)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Harpe1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085232</ID>
                          <Description>"Mail Breaker"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034123</ID>
                              <Description>"Mail Breaker: Parry and Attack LH, Slash 1HR2s &amp; Blind Spot WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("MailBreaker",3010000)
--   weapon:behaviorId(2704)
--   Breaker:wepmotionCategory(0)
   weapon:spAtkcategory(218)
--   Breaker:AnimationList(0)
--   Breaker:swordArt(502)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MailBreaker")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034072</ID>
                              <Description>"Mailbreaker: Crow Quills L1s &amp; 2H Set &amp; Quill Jump WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("MailBreaker",3010000)
   weapon:behaviorVariationId(2711)
--   Breaker:wepmotionCategory(0)
   weapon:spAtkcategory(237)
--   Breaker:AnimationList(0)
   weapon:wepmotionBothHandId(3)
   weapon:dualWeaponType(26)
   weapon:swordArt(605)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MailBreaker")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085231</ID>
                          <Description>"Murky Hand Scythe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034112</ID>
                              <Description>"Murky Hand Scythe: Dagger 1H Set on 2H &amp; Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MurkyHandScythe1",1150000)
    weapon:behaviorVariationId(2500)
    weapon:spAtkcategory(141)--/247/137/139/151
    weapon:wepmotionBothHandId(15)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MurkyHandScythe1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033784</ID>
                              <Description>"Murky Hand Scythe: Dancer's 2HR1s &amp; Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MurkyHandScythe1",1150000)
    weapon:behaviorVariationId(2500)
    weapon:spAtkcategory(139)--/247/137/139/151
--    MurkyHS1:Qmark(1)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MurkyHandScythe1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034111</ID>
                              <Description>"Murky Hand Scythe: Hold WA (Frayed)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MurkyHandScythe1",1150000)
    weapon:behaviorVariationId(2813)
    --MurkyHS1:wepmotionCategory(141)--23/28/164
    weapon:spAtkcategory(2)
    weapon:AnimationList(1)
    weapon:swordArt(804)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MurkyHandScythe1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085230</ID>
                          <Description>"Scholar's Candlestick"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034088</ID>
                              <Description>"Scholar's Candlestick: Weapon Art WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ScholarsCandlestick2",1070000)
    weapon:swordArt(60)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ScholarsCandlestick2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034089</ID>
                              <Description>"Scholar's Candlestick: Wrath of the Gods WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ScholarsCandlestick1",1070000)
    weapon:behaviorVariationId(2512)
    weapon:spAtkcategory(156)
    weapon:swordArt(301)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ScholarsCandlestick1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034095</ID>
                          <Description>"Tailbone Short Sword: Dragon Roar WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("TailboneShortSword1",1080000)
    weapon:behaviorVariationId(4707)
    weapon:spAtkcategory(255)
    weapon:swordArt(3321)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("TailboneShortSword1")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080049</ID>
                      <Description>"Straight Swords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337079963</ID>
                          <Description>"Anri's Straight Sword: Richard's Lunge and Push &amp; Estoc R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("AnrisStraightSword1",2230000)
    weapon:behaviorVariationId(2704)
    weapon:spAtkcategory(113)
    weapon:swordArt(502)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("AnrisStraightSword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033971</ID>
                          <Description>"Astora Staight Sword: Hurl Spear WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
local weapon = EquipParamWeapon:new("AstoraStraightSword1",2200000)
    weapon:behaviorVariationId(3635)
    weapon:spAtkcategory(246)
    weapon:swordArt(1312)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("AstoraStraightSword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033973</ID>
                          <Description>"Barbed Straight Sword: Blind Spot WA &amp; CGK R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BarbedStraightSword1",2210000)
   weapon:behaviorVariationId(2001)
   weapon:spAtkcategory(72)
   weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BarbedStraightSword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034002</ID>
                          <Description>"Broadsword: Spin Slash WA (Falchion, no damage first hit) &amp; Flachion 2H R2"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Broadsword1",2020000)
    --Broad1:behaviorId(2704)
    weapon:wepmotionCategory(28)
    weapon:swordArt(600)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Broadsword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085226</ID>
                          <Description>"Broken Straight Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034114</ID>
                              <Description>"Broken Straight Sword: 2H Dagger 1st 2HR1 &amp; Ricard's Lunge &amp; Press"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BrokenStraightSword",2030000)
   weapon:behaviorVariationId(2704)
   weapon:spEffectBehaviorId(129001200)
   weapon:spEffectBehaviorId1(129001100)
   weapon:spAtkcategory(45)--45/141/143/215
--   BrokeAF:AnimationList(0)
   weapon:swordArt(502)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BrokenStraightSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034115</ID>
                              <Description>"Broken Straight Sword: Feasting Branch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BrokenStraightSword",2030000)
   weapon:behaviorVariationId(4108)
   weapon:spEffectBehaviorId(129001200)
   weapon:spEffectBehaviorId1(129001100)
   weapon:spAtkcategory(9)--45/141/143/215
   weapon:AnimationList(1)
   weapon:weaponPosition(153)
   weapon:swordArt(2205)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BrokenStraightSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034012</ID>
                              <Description>"Broken Straight Sword: Shield Bash WA &amp; 2HR2, Boadsword 1HR2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BrokenStraightSword",2030000)
   weapon:behaviorVariationId(4800)
   weapon:spEffectBehaviorId(129001200)
   weapon:spEffectBehaviorId1(129001100)
   weapon:wepmotionCategory(48)
   weapon:swordArt(3200)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BrokenStraightSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034113</ID>
                              <Description>"Broken Straight Sword: Tracer R2s and 2HR1s &amp; War Cry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BrokenStraightSword",2030000)
   weapon:behaviorVariationId(3000)
   weapon:spEffectBehaviorId(129001200)
   weapon:spEffectBehaviorId1(129001100)
   weapon:spAtkcategory(143)--45/141/143/215
   weapon:wepmotionBothHandId(2)
   weapon:weaponPosition(153)
   weapon:swordArt(900)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BrokenStraightSword")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033787</ID>
                          <Description>"Dark Sword: Broadsword 1HR2, Katana 2HR2 &amp; WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DarkSword",6240000)
    weapon:behaviorVariationId(2900)
    weapon:wepmotionCategory(29)
    weapon:spAtkcategory(53)
--    DarkSw:Qmark(0)
    weapon:swordArt(800)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DarkSword")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085225</ID>
                          <Description>"Irithyll Straight Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034061</ID>
                              <Description>"Irithyll Straight Sword: Wolf Sword WA and WKGS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("IrithyllStraighSword3",2140000)
    weapon:behaviorVariationId(2508)
    weapon:spAtkcategory(131)
    weapon:swordArt(306)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllStraighSword3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034059</ID>
                              <Description>"Irithyll Straight Sword: Blade of Peril WA (Gael's)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("IrithyllStraighSword1",2140000)
    weapon:behaviorVariationId(2519)
    weapon:spAtkcategory(7)
    weapon:AnimationList(1)
    weapon:swordArt(312)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllStraighSword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034060</ID>
                              <Description>"Irithyll Straight Sword: Buffable"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("IrithyllStraighSword2",2140000)
    weapon:isEnhance(1)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllStraighSword2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085224</ID>
                          <Description>"Long Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034063</ID>
                              <Description>"Long Sword: Hollowslayer 2H R1's &amp; 1/2HR2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LongSword1",2010000)
    --LongS1:behaviorVariationId(2503)
    weapon:spAtkcategory(157)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LongSword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048114</ID>
                              <Description>"Long Sword: Prying Wedge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LongSword1",2010000)
    weapon:behaviorVariationId(2812)
    weapon:spAtkcategory(247)
    weapon:swordArt(607)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LongSword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337048129</ID>
                          <Description>"Lothric Knight Sword: Rapier 2HR1/2 &amp; Quill Jump WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
local weapon = EquipParamWeapon:new("LothricKS",2060000)
    weapon:behaviorVariationId(2711)
    weapon:spAtkcategory(237)
    weapon:wepmotionBothHandId(3)
    weapon:swordArt(605)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKS")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085223</ID>
                          <Description>"Morion Blade"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034076</ID>
                              <Description>"Morion Blade: Weapon Art WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MorionBlade2",2180000)
    weapon:swordArt(60)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MorionBlade2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034075</ID>
                              <Description>"Morion Blade: Bloodlust WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MorionBlade1",2180000)
    weapon:behaviorVariationId(2903)
    weapon:spAtkcategory(198)
    weapon:swordArt(801)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MorionBlade1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080038</ID>
                          <Description>"Ringed Knight SS: Broad Sword Set &amp; Ember (RKPUGS) WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RKSS",2250000)--6350000
    weapon:behaviorVariationId(2615)
    weapon:wepmotionCategory(253)
    weapon:attackBasePhysics(200)
    weapon:attackBaseFire(10)
    weapon:spAtkcategory(53)--90/57--253--163
--    RKSS:AnimationList(1)
    weapon:swordArt(410)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RKSS")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085222</ID>
                          <Description>"Shortsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033790</ID>
                              <Description>"Shortsword: Broadsword 1HR2, Rapier 2HR2 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Shortsword",2000000)
    weapon:behaviorVariationId(2700)
    weapon:wepmotionCategory(27)
    weapon:spAtkcategory(53)
--    Shortsw:Qmark(0)
    weapon:swordArt(500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Shortsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034091</ID>
                              <Description>"Shortsword: Warcry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Shortsword1",2000000)
    weapon:behaviorVariationId(3010)
    weapon:swordArt(900)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Shortsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080050</ID>
                      <Description>"Greatswords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085216</ID>
                          <Description>"Bastard Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033961</ID>
                              <Description>"Bastard Sword: Zwei 1HR2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BastardSword",6000000)
   weapon:behaviorVariationId(2605)
--   Bastard:wepmotionCategory(0)
   weapon:spAtkcategory(203)--202/203
--   Bastard:AnimationList(0)
--   Bastard:swordArt(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BastardSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048132</ID>
                              <Description>"Raw Bastard Sword-&gt;Broken Greatsword"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BastardSword",6001300)
   weapon:behaviorVariationId(2020)
--   Bastard:wepmotionCategory(0)
   weapon:spAtkcategory(205)--54)--202/203
   weapon:equipModelId(8002)
--   Bastard:AnimationList(0)
   weapon:swordArt(105)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BastardSword")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085217</ID>
                          <Description>"Black Knight Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033998</ID>
                              <Description>"Black Knight Sword: Stomp WA (Bastard Sword)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackKnightSword1",6250000)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackKnightSword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033999</ID>
                              <Description>"Black Knight Sword: Warcray WA (GA)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackKnightSword2",6250000)
    weapon:behaviorVariationId(3200)
    weapon:swordArt(1000)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackKnightSword2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085218</ID>
                          <Description>"Claymore"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034017</ID>
                              <Description>"Claymore: Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Claymore1",6020000)
    weapon:behaviorVariationId(5000)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Claymore1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079964</ID>
                              <Description>"Raw Claymore-&gt;Broken Greatsword"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Claymore",6021300)
   weapon:behaviorVariationId(2615)
--   Claymore:wepmotionCategory(0)
   weapon:spAtkcategory(253)--54)--202/203
   weapon:equipModelId(8002)
--   Claymore:AnimationList(0)
   weapon:swordArt(410)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Claymore")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085221</ID>
                          <Description>"Drakeblood Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034030</ID>
                              <Description>"Drakeblood Greatsword: SS WA &amp; 1HR1"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DrakebloodGreatsword1",6330000)
    weapon:behaviorVariationId(2300)
    weapon:wepmotionCategory(23)
--    DrakeboodGS1:guardmotionCategory(2)
    weapon:wepmotionOneHandId(3)--0
    weapon:wepmotionBothHandId(10)--10
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DrakebloodGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048126</ID>
                              <Description>"Drakeblood Greatsword: Rapier 2HR1/2 &amp; Quill Jump WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DrakebloodGreatsword1",6330000)
    weapon:behaviorVariationId(2711)
    weapon:spAtkcategory(237)
    weapon:wepmotionBothHandId(3)
    weapon:swordArt(605)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DrakebloodGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034032</ID>
                          <Description>"Executioner's Greatsword: Mace 2H R1/R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExecutionersGreatsword1",2220000)
    weapon:wepmotionCategory(33)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExecutionersGreatsword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085220</ID>
                          <Description>"Firelink Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034034</ID>
                              <Description>"Firelink Greatsword: Ember WA (RKSS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("FirelinkGreatsword1",6340000)
    weapon:behaviorVariationId(2330)
    weapon:spAtkcategory(251)
    weapon:swordArt(207)

    weapon:sfxId0(4045)
    weapon:sfxPos0(100)

    local RKSS_Atk1 = AtkParam_Pc:new("FirelinkGreatsword1",2330700)
    RKSS_Atk1:Hit0_Radius(1.8)
    local RKSS_Atk2 = AtkParam_Pc:new("FirelinkGreatsword1",2330701)
    RKSS_Atk2:Hit0_Radius(1.8)
    local RKSS_Atk3 = AtkParam_Pc:new("FirelinkGreatsword1",2330710)
    RKSS_Atk3:Hit0_Radius(1.8)
    local RKSS_Atk4 = AtkParam_Pc:new("FirelinkGreatsword1",2330711)
    RKSS_Atk4:Hit0_Radius(1.8)
    local RKSS_Atk5 = AtkParam_Pc:new("FirelinkGreatsword1",2330721)
    RKSS_Atk5:Hit0_Radius(1.8)
    local RKSS_Atk6 = AtkParam_Pc:new("FirelinkGreatsword1",2330730)
    RKSS_Atk6:Hit0_Radius(1.8)
    local RKSS_Atk7 = AtkParam_Pc:new("FirelinkGreatsword1",2330740)
    RKSS_Atk7:Hit0_Radius(1.8)

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034035</ID>
                              <Description>"Firelink Greatsword: Lorian's GS R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FirelinkGreatsword",6340000)
   weapon:behaviorVariationId(2604)
--   FirelinkGS:wepmotionCategory(0)
   weapon:spAtkcategory(189)
--   FirelinkGS:AnimationList(0)
   weapon:swordArt(404)

   weapon:sfxId0(4045)
   weapon:sfxPos0(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034036</ID>
                              <Description>"Firelink Greatsword: Molten Perseverance WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FirelinkGreatsword",6340000)
   weapon:behaviorVariationId(3505)
--   FirelinkGS:wepmotionCategory(0)
   weapon:spAtkcategory(174)
--   FirelinkGS:AnimationList(0)
   weapon:swordArt(1201)

   weapon:sfxId0(4045)
   weapon:sfxPos0(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034037</ID>
                              <Description>"Firelink Greatsword: Morne's Wrath WA with Fire Line BL"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FirelinkGreatsword",6340000)
   weapon:behaviorVariationId(2514)
--   FirelinkGS:wepmotionCategory(0)
   weapon:spAtkcategory(211)
--   FirelinkGS:AnimationList(0)
   weapon:swordArt(1204)

   weapon:sfxId0(4045)
   weapon:sfxPos0(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080021</ID>
                              <Description>"Firelink Greatsword: Wrath of Fire WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FirelinkGreatsword",6340000)
   weapon:behaviorVariationId(3211)
--   FirelinkGS:wepmotionCategory(0)
   weapon:spAtkcategory(156)
--   FirelinkGS:AnimationList(0)
   weapon:swordArt(301)

   weapon:sfxId0(4045)
   weapon:sfxPos0(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080020</ID>
                              <Description>"Firelink Greatsword: Follower Torch R2s and Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FirelinkGreatsword",6340000)
   weapon:behaviorVariationId(5000)
--   FirelinkGS:wepmotionCategory(0)
   weapon:spAtkcategory(240)
--   FirelinkGS:AnimationList(0)
   weapon:swordArt(900)

   weapon:sfxId0(4045)
   weapon:sfxPos0(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FirelinkGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085219</ID>
                          <Description>"Flamberge"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034039</ID>
                              <Description>"Flamberge: Shield Splitter WA (Irithyll Rapier)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Flamberge2",6140000)
    weapon:spAtkcategory(187)
    weapon:swordArt(501)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Flamberge2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080068</ID>
                              <Description>"Flamberge: Astora GS R2s and WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Flamberge2",6140000)
    weapon:behaviorVariationId(2603)
    weapon:spAtkcategory(160)
    weapon:swordArt(402)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Flamberge2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034042</ID>
                          <Description>"Gael's Greatsword: CGS 1HR1/2, UGS 1HR1/2-&gt;2HR1/2, Farron Stomp WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GaelsGS",2260000)
    weapon:behaviorVariationId(2620)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(161)
    --GaelsGS:patch2Byte(0xea,161)--e9-ea
    --GaelsGS:patchByte(0xeb,0)
    --GaelsGS:isCustom(1)
    --GaelsGS:dualWeaponType(27)
    --GaelsGS:AnimationList(1)
    --GaelsGS:equipModelId(620)
    --GaelsGS:reinforceTypeId(2100)
    weapon:swordArt(400)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GaelsGS")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034055</ID>
                          <Description>"Hollowslayer Greatsword: Neck Swipe WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HollowslayerGreatsword1",6310000)
    weapon:behaviorVariationId(5000)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HollowslayerGreatsword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033943</ID>
                          <Description>"Storm Ruler: Earth Seeker WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("StormRuler",6370000)
    weapon:behaviorVariationId(3205)
--    GiantsBaine:wepmotionCategory(0)
    weapon:spAtkcategory(242)
--    GiantsBaine:AnimationList(0)
    weapon:swordArt(1006)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("StormRuler")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080051</ID>
                      <Description>"Ultra Greatswords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085209</ID>
                          <Description>"Astora Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033970</ID>
                              <Description>"Astora Greatsword: Storm King WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("AstoraGreatsword1",6070000)
   weapon:behaviorVariationId(2515)
   weapon:swordArt(309)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("AstoraGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048039</ID>
                              <Description>"Astora Greatsword: Elfreid's Black Flame WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("AstoraGreatsword1",6070000)
   weapon:behaviorVariationId(2518)--2500/2605
   weapon:spAtkcategory(245)
   weapon:swordArt(311)--308/400--Elfreid's Black Falem WA
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("AstoraGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080072</ID>
                              <Description>"Astora Greatsword: Chop R2s &amp; Stance of Judgment WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("AstoraGS",6070000)
    weapon:behaviorVariationId(2510)
    weapon:attackBaseFire(87)
--    AstoraGS:attackBaseMagic(87)
    weapon:attackBaseThunder(0)
    weapon:spAttribute(3)
    weapon:spAtkcategory(154)
--    AstoraGS:AnimationList(1)
    weapon:swordArt(304)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("AstoraGS")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085208</ID>
                          <Description>"Cathedral Knight Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034014</ID>
                              <Description>"Cathedral Knight Greatsword: Astora UGS Set &amp; Stomp WA (Launch)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathedralKnightGreatsword1",6190000)
    weapon:spAtkcategory(74)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathedralKnightGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080027</ID>
                              <Description>"Cathedral Knight Greatsword: Greataxe 1H Set"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathedralKnightGreatsword1",6190000)
    weapon:wepmotionCategory(32)
--    Cathedral1:spAtkcategory(74)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathedralKnightGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080030</ID>
                              <Description>"Cathedral Knight Greatsword: Great Hammer 1H Set &amp; Perseverance (GH) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathedralKnightGreatsword1",6190000)
    weapon:wepmotionCategory(35)
--    Cathedral1:spAtkcategory(74)
      weapon:swordArt(1200)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathedralKnightGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033788</ID>
                          <Description>"Farron Greatsword: Better WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("FarronGreatsword",6200000)
--    weapon:behaviorId(2605)
--    FarronGS:wepmotionCategory(23)
--    FarronGS:spAtkcategory(53)
--    FarronGS:Qmark(0)
    weapon:swordArt(400)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FarronGreatsword")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085215</ID>
                          <Description>"Fume Ultra Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080028</ID>
                              <Description>"Fume UGS: Yhorm's WA &amp; Chop R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Fume",6350000)
    weapon:behaviorVariationId(3210)
    weapon:spAtkcategory(169)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerSabre1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080035</ID>
                              <Description>"Fume UGS: Ember (RKPUGS) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Fume",6350000)
    weapon:behaviorVariationId(2615)
    weapon:wepmotionCategory(253)
    weapon:attackBasePhysics(200)
    weapon:attackBaseFire(10)
    --Fume:spAtkcategory(163)--90/57--253--163
--    Fume:AnimationList(1)
    weapon:swordArt(410)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Fume")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085214</ID>
                          <Description>"Profaned Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080070</ID>
                              <Description>"Profaned Greatsword: Stance of Judgment WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ProfanedGS",6180000)
    weapon:behaviorVariationId(2510)
    --ProfanedGS:attackBaseFire(87)
    weapon:attackBaseMagic(87)
    --ProfanedGS:attackBaseThunder(0)
    weapon:spAttribute(3)
    weapon:spAtkcategory(154)
--    ProfanedGS:AnimationList(1)
    weapon:swordArt(304)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080073</ID>
                              <Description>"Profaned Greatsword: Cathedral Set &amp; Old Wolf CS 1HR1 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ProfanedGS",6180000)
    weapon:behaviorVariationId(2512)
    weapon:wepmotionCategory(166)--51,166
    weapon:spAtkcategory(95)
--    ProfanedGS:AnimationList(1)
    weapon:swordArt(701)--302, 701
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ProfanedGS")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085213</ID>
                          <Description>"Lorian's Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033804</ID>
                              <Description>"Lorian's Greatsword: Ember WA (RKSS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LoriansGreatsword",6260000)
    weapon:behaviorVariationId(2330)
    weapon:spAtkcategory(251)--162
    weapon:swordArt(207)

    local RKSS_Atk1 = AtkParam_Pc:new("LoriansGreatsword",2330700)
    RKSS_Atk1:Hit0_Radius(1.8)

    local RKSS_Atk2 = AtkParam_Pc:new("LoriansGreatsword",2330701)
    RKSS_Atk2:Hit0_Radius(1.8)

    local RKSS_Atk3 = AtkParam_Pc:new("LoriansGreatsword",2330710)
    RKSS_Atk3:Hit0_Radius(1.8)

    local RKSS_Atk4 = AtkParam_Pc:new("LoriansGreatsword",2330711)
    RKSS_Atk4:Hit0_Radius(1.8)

    local RKSS_Atk5 = AtkParam_Pc:new("LoriansGreatsword",2330721)
    RKSS_Atk5:Hit0_Radius(1.8)

    local RKSS_Atk6 = AtkParam_Pc:new("LoriansGreatsword",2330730)
    RKSS_Atk6:Hit0_Radius(1.8)

    local RKSS_Atk7 = AtkParam_Pc:new("LoriansGreatsword",2330740)
    RKSS_Atk7:Hit0_Radius(1.8)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LoriansGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034064</ID>
                              <Description>"Lorian's Greatsword: Molten Perseverance WA &amp; Chop R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("LoriansGreatsword",6260000)
   weapon:behaviorVariationId(3505)
--   LoriansGS:wepmotionCategory(0)
   weapon:spAtkcategory(174)
--   LoriansGS:AnimationList(0)
   weapon:swordArt(1201)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LoriansGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080036</ID>
                              <Description>"Lorian's GS: Fume Set &amp; Ember (RKPUGS) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Lorians",6260000)--6350000
    weapon:behaviorVariationId(2615)
    weapon:wepmotionCategory(253)
    weapon:attackBasePhysics(200)
    weapon:attackBaseFire(10)
    weapon:spAtkcategory(163)--90/57--253--163
--    Lorians:AnimationList(1)
    weapon:swordArt(410)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Lorians")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085212</ID>
                          <Description>"Lothric Knight Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034065</ID>
                              <Description>"Lothric Knight Greatsword: Dragon Roar WA &amp; Chop R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword1",6100000)
    weapon:behaviorVariationId(4707)
    weapon:spAtkcategory(255)
    weapon:swordArt(3321)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033969</ID>
                              <Description>"Lothric Knight Greatsword: Falling Bolt WA (DSGA) &amp; Chop R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword",6100000)
    weapon:behaviorVariationId(3212)--3212
    weapon:spAtkcategory(199)--199
--    LothricKGS:AnimationList(1)
    weapon:swordArt(1003)--1003
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034066</ID>
                              <Description>"Lothric Knight Greatsword: Shield Splitter WA (Irithyll Rapier) &amp; Chop R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword2",6100000)
    weapon:behaviorVariationId(2710)
    weapon:spAtkcategory(187)
    weapon:swordArt(501)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034067</ID>
                              <Description>"Lothric Knight Greatsword: Stance of Judgment WA (No Lasers)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGS",6100000)
    weapon:behaviorVariationId(2502)
    --LothricKnightGS:attackBaseMagic(87)
--    LothricKnightGS:attackBaseMagic(87)
    --LothricKnightGS:attackBaseThunder(0)
    --LothricKnightGS:spAttribute(3)
    weapon:spAtkcategory(154)
--    LothricKnightGS:AnimationList(1)
    weapon:swordArt(304)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGS")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080071</ID>
                              <Description>"Lothric Knight Greatsword: MLGS R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword",6100000)
    weapon:behaviorVariationId(2513)
    weapon:attackBaseMagic(87)
--    LothricKGS:attackBaseMagic(87)
    weapon:attackBaseThunder(0)
    weapon:spAttribute(3)
    weapon:spAtkcategory(158)
--    LothricKGS:AnimationList(1)
    weapon:swordArt(303)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033967</ID>
                              <Description>"Lothric Knight Greatsword: WKGS R2s &amp; Spin Slash WA (CCS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword",6100000)
    weapon:behaviorVariationId(3509)
    weapon:spAtkcategory(131)
--    LothricKGS:AnimationList(1)
    weapon:swordArt(1205)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048134</ID>
                              <Description>"Lothric Knight Greatsword: Cathedral Set &amp; Mumu 1HR1 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightGreatsword",6100000)
    weapon:behaviorVariationId(5110)
    weapon:wepmotionCategory(195)
    weapon:spAtkcategory(95)
--    LothricKGS:AnimationList(1)
    weapon:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightGreatsword")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085211</ID>
                          <Description>"Zweihander"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033940</ID>
                              <Description>"Zweihander: Earth Seeker WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Zweihander",6040000)
    weapon:behaviorVariationId(3205)
--    Zwizi:wepmotionCategory(0)
    weapon:spAtkcategory(242)
--    Zwizi:AnimationList(0)
    weapon:swordArt(1006)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Zweihander")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033960</ID>
                              <Description>"Zweihander: Great Club R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Zweihander",6040000)
--   weapon:behaviorId(0)
--   Daddys:wepmotionCategory(0)
   weapon:spAtkcategory(213)
--   Daddys:AnimationList(0)
--   Daddys:swordArt(0)

--   Wep:constVisFX_ID1(0)
--   Wep:constVisFX_ID2(0)
--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)
--   Wep:constVisFX_emitType2(0)
--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Zweihander")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034109</ID>
                              <Description>"Zweihander: Astora GS R2s &amp; Neck Swipe (Launch-&gt;) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Zweihander1",6040000)
    --ZweihanderUGS1:behaviorVariationId(5000)
    weapon:spAtkcategory(160)--160
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Zweihander1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048047</ID>
                              <Description>"Zweihander: Windmill WA &amp; Chop 1HR2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ZweihanderUGS3",6040000)
    weapon:behaviorVariationId(3813)
    weapon:spAtkcategory(248)
    weapon:swordArt(1408)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ZweihanderUGS3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034124</ID>
                              <Description>"Zweihander: Warcray WA (GA) &amp; Chop 1HR2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Zweihander2",6040000)
    weapon:behaviorVariationId(3200)
    weapon:spAtkcategory(0)
    weapon:swordArt(1000)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Zweihander2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080016</ID>
                              <Description>"Zweihander: BKGA Set &amp; Orgiginal 1HR2 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Zweihander2",6040000)
    --ZweihanderUGS2:behaviorVariationId(3200)
    weapon:wepmotionCategory(107)
    --ZweihanderUGS2:spAtkcategory(0)
    --ZweihanderUGS2:swordArt(1000)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Zweihander2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080052</ID>
                      <Description>"Curved Swords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085207</ID>
                          <Description>"Carthus Curved Sword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033962</ID>
                              <Description>"Carthus Curved Sword: BKS R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("CarthusCurvedSword",4050000)
   weapon:behaviorVariationId(5000)
--   CarthusCS:wepmotionCategory(0)
   weapon:spAtkcategory(80)--80
--   CarthusCS:AnimationList(1)
   weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033956</ID>
                              <Description>"Carthus Curved Sword: Butcher Knife R2s &amp; Stomp WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedSword",4050000)
    weapon:behaviorVariationId(2304)
--    CarthusCS:wepmotionCategory(0)
    weapon:spAtkcategory(103)--90/57
--    CarthusCS:AnimationList(0)
    weapon:swordArt(201)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedSword")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079975</ID>
                              <Description>"Carthus Curved Sword: Black Blade R2s &amp; Warcry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedSword",4050000)
    weapon:behaviorVariationId(3000)
    --CarthusCS:wepmotionCategory(51)
    weapon:spAtkcategory(90)--90/57
--    CarthusCS:AnimationList(0)
    weapon:swordArt(900)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedSword")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085206</ID>
                          <Description>"Carthus Shotel"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033951</ID>
                              <Description>"Carthus Shotel: Dark Sword R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathrusShotelI",4110000)
    weapon:behaviorVariationId(5000)
--    CathrusSI:wepmotionCategory(27)
    weapon:spAtkcategory(57)--90/57
--    CathrusSI:wepmotionBothHandId(0)
--    CathrusSI:AnimationList(1)
--    CathrusSI:specialL1s(24)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathrusShotelI")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033778</ID>
                              <Description>"Carthus Shotel: Quill Dart WA &amp; Dark Sowrd R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathrusShotelI",4110000)
    weapon:behaviorVariationId(2711)
--    CathrusSI:wepmotionCategory(27)
    weapon:spAtkcategory(57)--139/237
--    CathrusSI:wepmotionBothHandId(0)
--    CathrusSI:AnimationList(1)
--    CathrusSI:specialL1s(24)
    weapon:swordArt(503)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathrusShotelI")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080076</ID>
                              <Description>"Carthus Shotel: Stomp (Spin) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CathrusShotelI",4110000)
    weapon:behaviorVariationId(2516)
--    CathrusSI:wepmotionCategory(27)
    weapon:spAtkcategory(221)--139/237
--    CathrusSI:wepmotionBothHandId(0)
--    CathrusSI:AnimationList(1)
--    CathrusSI:specialL1s(24)
    weapon:swordArt(307)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CathrusShotelI")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085205</ID>
                          <Description>"Falchion"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033952</ID>
                              <Description>"Falchion: Black Blade R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Falchion",4040000)
--    weapon:behaviorId(3301)
--    Falch:wepmotionCategory(0)
    weapon:spAtkcategory(90)--90/57
--    Falch:AnimationList(1)
--    Falch:swordArt(1103)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Falchion")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033959</ID>
                              <Description>"Falchion: Stomp WA (spin)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Falchion",4040000)
    weapon:behaviorVariationId(2516)
--    Falch:wepmotionCategory(0)

    weapon:spAtkcategory(221)--90/57/221
--    Falch:AnimationList(1)
    weapon:swordArt(307)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Falchion")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085204</ID>
                          <Description>"Follower Sabre"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034041</ID>
                              <Description>"Follower Sabre: Mail Breaker WA &amp; R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("FollowerSabre1",4120000)
    weapon:behaviorVariationId(2020)
    weapon:spAtkcategory(205)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerSabre1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080075</ID>
                              <Description>"Follower Sabre: Stance of Judgement WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Sabre",4120000)
    weapon:behaviorVariationId(2510)--2513,5305
    weapon:attackBasePhysics(55)
    weapon:attackBaseMagic(55)
    weapon:spAtkcategory(154)
    weapon:swordArt(304)--303,608
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Sabre")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034084</ID>
                          <Description>"Rotten Ghru Curved Sword: Blind Spot WA &amp; Corvian GK R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RottenGhruCurvedSword1",2120000)
    weapon:behaviorVariationId(2001)
    weapon:spAtkcategory(72)--72/247
    weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RottenGhruCurvedSword1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085203</ID>
                          <Description>"Scimitar"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033965</ID>
                              <Description>"Scimitar: Hold WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Scimitar",4030000)
   weapon:behaviorVariationId(2900)
   weapon:wepmotionCategory(29)
--   Scimi:spAtkcategory(0)
--   Scimi:AnimationList(0)
   weapon:swordArt(800)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Scimitar")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079984</ID>
                              <Description>"Scimitar: Stance WA (SS) &amp; Estoc R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Scimitar1",4030000)
    weapon:behaviorVariationId(2300)
    weapon:spAtkcategory(113)
    weapon:swordArt(200)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Scimitar1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337048117</ID>
                          <Description>"Raw Sellsword Twinblade -&gt; Golden Dual Swords"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Sellsword",16001300)
   weapon:behaviorVariationId(2390)
   weapon:wepmotionCategory(20)
   weapon:spAtkcategory(143)
   weapon:attackBasePhysics(73)
   weapon:properStrength(12)
   weapon:properAgility(25)
   weapon:correctStrength(10)
   weapon:correctAgility(116)
   weapon:attackBaseStamina(30)
   weapon:spEffectBehaviorId1(1210)
   weapon:spEffectBehaviorId(1210)
   weapon:spEffectBehaviorId2(129001206)
   weapon:weight(4.5)
   weapon:equipModelId(1608)
   weapon:iconId(1171)
   weapon:saWeaponDamage(10)
   weapon:throwAtkRate(30)
   weapon:patchByte(0x102,32)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Sellsword")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085202</ID>
                          <Description>"Shotel"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034092</ID>
                              <Description>"Shotel: Feasting Branch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Shotel1",4010000)
    --ShotelCS1:behaviorVariationId(4108)
    weapon:spAtkcategory(265)--9
    --ShotelCS1:AnimationList(1)
    weapon:swordArt(2205)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Shotel1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034009</ID>
                              <Description>"Shotel: Impact WA &amp; Scimitar Moveset (jank rear hitbox L1)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Shotel",4010000)
--   weapon:behaviorVariationId(4300)
   weapon:wepmotionCategory(43)
   weapon:spAtkcategory(151)
--   Shote:AnimationList(0)
   weapon:swordArt(1600)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Shotel")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080053</ID>
                      <Description>"Curved Greatswords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085199</ID>
                          <Description>"Carthus Curver Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034013</ID>
                              <Description>"Carthus Curved Greatsword: Hold WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedGreatsword1",4060000)
    weapon:behaviorVariationId(2900)--2310/2306/2300/2505/2502/2517/2503
    weapon:wepmotionCategory(29)
    --CarthusCGS1:spAtkcategory(0)--188/54/74
    weapon:swordArt(800)--204/200/300
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079976</ID>
                              <Description>"Carthus Curved Greatsword: Iaito R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedGreatsword1",4060000)
    weapon:behaviorVariationId(2900)--2310/2306/2300/2505/2502/2517/2503
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(90)--90/57

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080011</ID>
                              <Description>"Carthus Curved Greatsword: BKS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedGreatsword1",4060000)
    --CarthusCGS1:behaviorVariationId(2900)--2310/2306/2300/2505/2502/2517/2503
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(80)--90/57

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080015</ID>
                              <Description>"Carthus Curved Greatsword: Demonic Flare WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CarthusCurvedGreatsword1",4060000)
    weapon:behaviorVariationId(3211)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(168)
    weapon:swordArt(1002)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080079</ID>
                          <Description>"Harald Curved Greatsword: Warcy WA (Yhorm's)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HaraldCGS",6380000)
    weapon:behaviorVariationId(3210)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(169)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HaraldCGS")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085200</ID>
                          <Description>"Exile Greatsword"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080002</ID>
                              <Description>"Exile Greatsword: Warcy WA (Yhorm's)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExileGreatsword1",6150000)
    weapon:behaviorVariationId(3210)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(169)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExileGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080007</ID>
                              <Description>"Exile Greatsword: Butcher Knife R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExileGreatsword1",6150000)
    weapon:behaviorVariationId(5110)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(103)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExileGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080009</ID>
                              <Description>"Exile Greatsword: Warcry WA (Great Club)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExileGreatsword1",6150000)
    weapon:behaviorVariationId(3506)
    weapon:wepmotionCategory(35)
    --Exile1:spAtkcategory(103)
    weapon:swordArt(1203)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExileGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080013</ID>
                              <Description>"Exile Greatsword: Large Club R2s &amp; Falling Bolt WA (DSGA no lightning)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExileGreatsword1",6150000)
    weapon:behaviorVariationId(3212)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(69)
    weapon:swordArt(1003)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExileGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080012</ID>
                              <Description>"Exile Greatsword: BKGA R1s &amp;KS R2s &amp; Stomp WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ExileGreatsword1",6150000)
    weapon:behaviorVariationId(2500)
    weapon:wepmotionCategory(107)
    weapon:spAtkcategory(80)
    weapon:swordArt(400)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ExileGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085201</ID>
                          <Description>"Murakumo"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033931</ID>
                              <Description>"Murakumo: BKGA Moveset and Neckswipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Murakumo",6080000)
    weapon:behaviorVariationId(5000)
--    MuMu:wepmotionCategory(25)
    weapon:spAtkcategory(107)
--    MuMu:AnimationList(0)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Murakumo")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034078</ID>
                              <Description>"Murakumo: Stance WA (GS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Murakumo1",6080000)
    weapon:behaviorVariationId(2500)
    weapon:wepmotionCategory(25)
    weapon:swordArt(300)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Murakumo1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034033</ID>
                              <Description>"Murakumo: Warcy WA (GA)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Mumu",6080000)
    weapon:behaviorVariationId(3210)
    weapon:wepmotionCategory(32)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Mumu")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080010</ID>
                              <Description>"Murakumo: WKGS R2s &amp; CCGS WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Mumu",6080000)
    weapon:behaviorVariationId(5100)--2310/2306/2300/2505/2502/2517/2503
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(131)--90/57
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080014</ID>
                              <Description>"Murakumo: Fallling Bolt WA (DSGA)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Mumu",6080000)
    weapon:behaviorVariationId(3212)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(199)--90/57
    weapon:swordArt(1003)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CarthusCurvedGreatsword1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080054</ID>
                      <Description>"Thrusting Swords"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337080046</ID>
                          <Description>"Crow Quills: Rapier WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Quills",16150000)
    --Quills:behaviorVariationId(2700)
    --Quills:wepmotionCategory(113)
    --Quills:spAtkcategory(237)
    weapon:swordArt(500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Quills")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085198</ID>
                          <Description>"Crystal Sage's Rapier"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034021</ID>
                              <Description>"Crystal Sage's Rapier: Crystal Blade WA (Aqua)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrystalSagesRapier2",3040000)
    weapon:behaviorVariationId(2050)
    weapon:spAtkcategory(0)
    weapon:AnimationList(1)
    weapon:swordArt(107)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrystalSagesRapier2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034022</ID>
                              <Description>"Crystal Sage's Rapier: Hurl Spear WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrystalSagesRapier1",3040000)
    weapon:behaviorVariationId(3635)
    weapon:spAtkcategory(246)
    weapon:swordArt(1312)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrystalSagesRapier1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085197</ID>
                          <Description>"Estoc"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337048127</ID>
                              <Description>"Estoc: All 1H Plain Rapier &amp; Quill Jump WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Estoc",3000000)
    weapon:behaviorVariationId(2711)
    weapon:spAtkcategory(237)
    weapon:wepmotionBothHandId(3)
    weapon:swordArt(605)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Estoc")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080045</ID>
                              <Description>"Estoc: Rapier WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Estoc",3000000)
    weapon:behaviorVariationId(2700)
    --Estoc:spAtkcategory(54)
    --Estoc:wepmotionBothHandId(3)
    weapon:swordArt(500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Estoc")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080080</ID>
                              <Description>"Estoc: Blind Spot WA &amp; Corvian GK R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Estoc",3000000)
    weapon:behaviorVariationId(2010)
    --Estoc:wepmotionCategory(72)
    weapon:spAtkcategory(72)--72,153
    weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllRapier1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080006</ID>
                              <Description>"Estoc: Balder Side Sword &amp; Shield Splitter WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Estoc",3000000)
    weapon:behaviorVariationId(2020)
    weapon:wepmotionCategory(23)
    weapon:spAtkcategory(205)
    --Estoc:wepmotionBothHandId(3)
    weapon:swordArt(105)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Estoc")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080008</ID>
                              <Description>"Estoc: Elfreid's Black Flame WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Estoc",3000000)
    weapon:behaviorVariationId(2518)
    weapon:spAtkcategory(245)
    weapon:swordArt(311)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Estoc")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085196</ID>
                          <Description>"Irithyll Rapier"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034057</ID>
                              <Description>"Irithyll Rapier: Blind Spot WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("IrithyllRapier1",3050000)
    weapon:behaviorVariationId(2010)
    weapon:wepmotionCategory(72)
    weapon:spAtkcategory(27)--72,153
    weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllRapier1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034058</ID>
                              <Description>"Irithyll Rapier: Buffable"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("IrithyllRapier2",3050000)
    weapon:isEnhance(1)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("IrithyllRapier2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337079995</ID>
                          <Description>"Rapier: Shortsword 2HR2 &amp; 2nd 1HR2 &amp; Rapier WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Rapier",3020000)
    --Rapier:behaviorVariationId(2700)
    weapon:spAtkcategory(54)
    --Rapier:swordArt(500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Rapier")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080055</ID>
                      <Description>"Katanas"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085192</ID>
                          <Description>"Black Blade"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033975</ID>
                              <Description>"Black Blade: Blind Spot WA &amp; Corvian GK R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackBlade1",5030000)
    weapon:spAtkcategory(72)
    weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackBlade1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033976</ID>
                              <Description>"Black Blade: War Cry WA (Hand Axe)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackBlade2",5030000)
    weapon:behaviorVariationId(3010)
    weapon:swordArt(900)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackBlade2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033957</ID>
                          <Description>"Chaos Blade: War Cry WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ChaosBlade",5020000)
    weapon:behaviorVariationId(3000)
--    ChaosBl:wepmotionCategory(0)
--    ChaosBl:spAtkcategory(90)--90/57
--    ChaosBl:AnimationList(0)
    weapon:swordArt(900)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ChaosBlade")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085195</ID>
                          <Description>"Darkdrift"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034024</ID>
                              <Description>"Darkdrift: Moonlight Greatsword R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Darkdrift1",5050000)
    weapon:behaviorVariationId(2513)
    weapon:spAtkcategory(158)
    weapon:swordArt(803)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Darkdrift1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080081</ID>
                              <Description>"Darkdrift: Crescent Blade WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Darkdrift1",5050000)
    weapon:behaviorVariationId(2810)--2513,2810
    weapon:attackBasePhysics(50)
    weapon:attackBaseMagic(80)
    weapon:correctAgility(30)
    weapon:correctMagic(40)
    weapon:spAttribute(3)
    weapon:spAtkcategory(165)--158,165
    weapon:swordArt(601) --803,601,303
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Darkdrift1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080083</ID>
                              <Description>"Darkdrift: Moonlight Vortex WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Darkdrift1",5050000)
    weapon:behaviorVariationId(2513)--2513,2810
    weapon:wepmotionCategory(158)
    weapon:attackBasePhysics(50)
    weapon:attackBaseMagic(80)
    weapon:correctAgility(30)
    weapon:correctMagic(40)
    weapon:spAttribute(3)
    weapon:spAtkcategory(29)--158,165
    weapon:swordArt(303) --803,601,303
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Darkdrift1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085194</ID>
                          <Description>"Uchigatana"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034098</ID>
                              <Description>"Uchigatana: Prying Wedge WA (Sabre)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Uchigatana1",5000000)
    weapon:behaviorVariationId(2812)
    weapon:spAtkcategory(247)
    weapon:swordArt(607)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Uchigatana1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034099</ID>
                              <Description>"Uchigatana: Spin Slash WA (Carthus Shotel)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Uchigatana2",5000000)
    weapon:behaviorVariationId(2800)
--    UchigatanaK2:wepmotionCategory(28)
    weapon:spAtkcategory(0)
    weapon:swordArt(600)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Uchigatana2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085193</ID>
                          <Description>"Washing Pole"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034104</ID>
                              <Description>"Washing Pole: Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WashingPole2",5010000)
    weapon:behaviorVariationId(5000)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WashingPole2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034105</ID>
                              <Description>"Washing Pole: Spin Slash WA (Carthus Shotel)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WashingPole3",5010000)
    weapon:behaviorVariationId(5030)
    weapon:swordArt(702)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WashingPole3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048041</ID>
                              <Description>"Washing Pole: Onyx Blade R2s and WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WashingPole4",5010000)
    weapon:behaviorVariationId(2518)--2500/2605
    weapon:spAtkcategory(245)
    weapon:wepmotionOneHandId(2)
    weapon:wepmotionBothHandId(12)
    weapon:swordArt(311)--308/400--Elfreid's Black Falem WA
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WashingPole4")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080056</ID>
                      <Description>"Axes"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337033974</ID>
                          <Description>"Battle Axe: Stomp WA (Spin)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
local weapon = EquipParamWeapon:new("BattleAxe1",7010000)
    weapon:behaviorVariationId(2516)
    weapon:spAtkcategory(221)
    weapon:swordArt(307)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BattleAxe1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085189</ID>
                          <Description>"Dragonslayer's Axe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033954</ID>
                              <Description>"Dragonslayer's Axe: Black Blade R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonslayersAxe",7080000)
    weapon:behaviorVariationId(5000)
--    DragonslayersA:wepmotionCategory(0)
    weapon:spAtkcategory(90)
--    DragonslayersA:AnimationList(0)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonslayersAxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034029</ID>
                              <Description>"Dragonslayer's Axe: Falling Bolt WA (DSGA)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonSlayersAxe1",7080000)
    weapon:behaviorVariationId(3212)
    weapon:spAtkcategory(199)
    weapon:swordArt(1003)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonSlayersAxe1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080024</ID>
                              <Description>"Dragonslayer's Axe: Dark Sword R2s &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonSlayersAxe1",7080000)
    weapon:behaviorVariationId(5110)
    weapon:spAtkcategory(57)
    weapon:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonSlayersAxe1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034031</ID>
                          <Description>"Eleonora: Mailbreaker R2s &amp; Spinslash WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Eleonora1",7130000)
    weapon:behaviorVariationId(5110)
    weapon:spAtkcategory(205)
    weapon:swordArt(703)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Eleonora1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034049</ID>
                          <Description>"Hand Axe: Reinforced Club R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HandAxe1",7000000)
    --HandA1:behaviorVariationId(3302)
    weapon:wepmotionCategory(210)
    --HandA1:spAtkcategory(59)
    weapon:swordArt(1101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HandAxe1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085191</ID>
                          <Description>"Man Serpent Hatchet"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033953</ID>
                              <Description>"Man Serpent Hatchet: Dark Sword R2s &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ManSerpentHatchet1",7150000)
    weapon:behaviorVariationId(2800)
    weapon:spAtkcategory(57)
    weapon:swordArt(600)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ManSerpentHatchet1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048116</ID>
                              <Description>"Man Serpent Hatchet: Corvian GK R2s &amp; Stomp ^ WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ManSerpentHatchet1",7150000)
    weapon:behaviorVariationId(2500)
    weapon:spAtkcategory(72)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ManSerpentHatchet1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085190</ID>
                          <Description>"Thral Axe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034097</ID>
                              <Description>"Thrall Axe: Weapon Art WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ThrallAxe4",7100000)
    weapon:swordArt(60)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ThrallAxe4")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080019</ID>
                              <Description>"Thrall Axe: Complete Club Set"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ThrallAxe4",7100000)
    weapon:behaviorVariationId(3302)
    weapon:wepmotionCategory(33)
    weapon:spAtkcategory(59)
    weapon:swordArt(1101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ThrallAxe4")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080057</ID>
                      <Description>"Great Axes"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085188</ID>
                          <Description>"Black Knight Greataxe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033977</ID>
                              <Description>"Black Knight Greataxe: UGS Followup R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackKnightGreataxe1",10050000)
    weapon:behaviorVariationId(2603)--500
    weapon:wepmotionCategory(26)--25,26,35
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackKnightGreataxe1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033997</ID>
                              <Description>"Black Knight Greataxe: GS Followup R2s &amp; Stance WA (GS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("BlackKnightGreataxe",10050000)
   weapon:behaviorVariationId(2500)
   weapon:wepmotionCategory(25)
--   BlackKGA:spAtkcategory(0)
--   BlackKGA:AnimationList(0)
   weapon:swordArt(300)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackKnightGreataxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033950</ID>
                              <Description>"Black Knight Greataxe: Wolf Sword R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlackKnightGreataxe",10050000)
    weapon:behaviorVariationId(2603)--2610/2602/5000
--    BlackKGA:wepmotionCategory(32)--32
    weapon:spAtkcategory(131)--193/128/131/80/63/213/5(1)
--    BlackKGA:AnimationList(1)
    weapon:swordArt(1500)--407/406
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlackKnightGreataxe")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034028</ID>
                          <Description>"Dragonslayer GA: Falling Bolt WA (DSSS) &amp; Halberd 1HR2s/2HR1s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonslayerGreataxe",7110000)
    weapon:behaviorVariationId(3611)--3212
    weapon:spAtkcategory(176)--199
--    DragonslayerGA:AnimationList(1)
    weapon:swordArt(1301)--1003
    weapon:wepmotionBothHandId(13)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonslayerGreataxe")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033944</ID>
                          <Description>"Earth Seeker: theGS 2H Set &amp; Neck Swipe WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("EarthSeeker",7180000)
    weapon:behaviorVariationId(5000)
--    HippieAxe:wepmotionCategory(0)
    weapon:spAtkcategory(193)--193/63/197
--    HippieAxe:AnimationList(0)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("EarthSeeker")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085187</ID>
                          <Description>"Great Axe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034045</ID>
                              <Description>"Great Axe: LargeC R2s &amp; Silent Axe Spin WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Greataxe",7050000)
    weapon:behaviorVariationId(5111)--2601
--    GreatA:wepmotionCategory(35)--26/35
    weapon:spAtkcategory(69)--193
--    GreatA:AnimationList(1)
    weapon:swordArt(701)--405
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Greataxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048042</ID>
                              <Description>"Great Axe: BKGA Set &amp; Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Greataxe2",7050000)

    --GreatA2:behaviorId(5111)--2601
    weapon:behaviorVariationId(2516)
    weapon:spAtkcategory(107)

    weapon:swordArt(307)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Greataxe2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085186</ID>
                          <Description>"Great Machete"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034122</ID>
                              <Description>"Great Machete: Butcher Knife R2s &amp; Silent Axe Spin WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatMachete1",16050000)
--    weapon:behaviorId(5112)
    weapon:spAtkcategory(103)
    weapon:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatMachete1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034046</ID>
                              <Description>"Great Machete: Launch WA &amp; Great Club R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatMachete2",16050000)
    weapon:behaviorVariationId(2500)--2500/2605
    weapon:spAtkcategory(213)
    weapon:swordArt(308)--308/400
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatMachete2")
end

</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080058</ID>
                      <Description>"Hammers"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337034000</ID>
                          <Description>"Blacksmith Hammer: Demonic Flare WA, Club Set"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BlacksmithHammer1",8280000)
    weapon:behaviorVariationId(3211)
    weapon:wepmotionCategory(59)
    weapon:attackBasePhysics(60)
    weapon:attackBaseFire(60)
    weapon:correctStrength(50)
    weapon:correctMagic(30)
    weapon:correctFaith(30)
    weapon:spAttribute(2)
    weapon:spAtkcategory(168)
    weapon:swordArt(1002)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BlacksmithHammer1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085185</ID>
                          <Description>"Heysel Pick"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033767</ID>
                              <Description>"Heysel Pick: Full Preacher's Right Arm Moveset"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HeyselPick1",8220000)
    weapon:behaviorVariationId(4108)
    weapon:wepmotionCategory(41)
    weapon:spAtkcategory(9)
    weapon:AnimationList(1)
    weapon:swordArt(2205)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HeyselPick1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034054</ID>
                              <Description>"Heysel Pick: Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("HeyselPick1",8220000)
    weapon:behaviorVariationId(5000)--4744
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("HeyselPick1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085184</ID>
                          <Description>"Mace"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034071</ID>
                              <Description>"Mace: Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Mace2",8010000)
    weapon:behaviorVariationId(5000)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Mace2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034006</ID>
                              <Description>"Mace: Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Mace",8010000)
    weapon:behaviorVariationId(2511)
--    Mace:attackBaseMagic(87)
--    Mace:attackBaseThunder(0)
--    Mace:spAttribute(203)
--    Mace:spAtkcategory(202)
--    Mace:AnimationList(1)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Mace")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085183</ID>
                          <Description>"Morning Star"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034005</ID>
                              <Description>"Morning Star: Stance WA (SS) &amp; UGS 2HR2 Thrusts"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MorningStar",8020000)
    weapon:behaviorVariationId(2300)
--    MorningStar:attackBaseMagic(87)
--    MorningStar:attackBaseThunder(0)
--    MorningStar:spAttribute(3)
    weapon:spAtkcategory(202)
--    MorningStar:AnimationList(1)
    weapon:swordArt(300)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MorningStar")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034077</ID>
                              <Description>"Morning Star: Stomp WA (Launch-&gt;) &amp; Dark Sword R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MorningStar1",8020000)
    weapon:behaviorVariationId(2611)
    weapon:spAtkcategory(57)
    weapon:swordArt(403)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MorningStar1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080088</ID>
                              <Description>"Morning Star: Valorheart 2H Set"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MorningStar",8020000)
    weapon:behaviorVariationId(2391)
    weapon:spAtkcategory(236)
    --MorningStar:dualWeaponType(27)--25,26,27
    --MorningStar:swordArt(900)

    --MorningStar:wepmotionBothHandId(3)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MorningStar")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034103</ID>
                          <Description>"Warpick: Neck Swipe WA &amp; Club R1/R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Warpick2",8240000)
    weapon:behaviorVariationId(5000)
    weapon:wepmotionCategory(33)
    weapon:spAtkcategory(59)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Warpick2")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080059</ID>
                      <Description>"Great Hammers"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085177</ID>
                          <Description>"Dragon Tooth"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034026</ID>
                              <Description>"Dragon Tooth: Unleash Dragon WA (Tailbone SS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonTooth2",8260000)
    weapon:behaviorVariationId(2030)
    weapon:spAtkcategory(204)
    weapon:swordArt(102)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonTooth2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034027</ID>
                              <Description>"Dragon Tooth: Warcry WA (Yhorm's)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonTooth3",8260000)
    weapon:behaviorVariationId(3210)
    weapon:spAtkcategory(169)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonTooth3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080026</ID>
                              <Description>"Dragon Tooth: Stone Flesh WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonTooth3",8260000)
    --DragonT3:behaviorVariationId(4703)
    weapon:spAtkcategory(94)
    weapon:swordArt(3310)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonTooth3")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085176</ID>
                          <Description>"Gargoyle Flame Hammer"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337048135</ID>
                              <Description>"Gargoyle Flame Hammer: Flame of Lorian WA &amp; 2HR2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GargoyleFlameHammer1",8170000)
    weapon:behaviorVariationId(2604)
    weapon:spAtkcategory(189)
    weapon:swordArt(404)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GargoyleFlameHammer1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080034</ID>
                              <Description>"Gargoyle Flame Hammer: Kindled Charge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GargoyleFlameHammer1",8170000)
    weapon:behaviorVariationId(3650)--2514
    weapon:spAtkcategory(175)
    weapon:swordArt(1308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GargoyleFlameHammer1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080025</ID>
                          <Description>"Great Club: Warcy WA (Yhorm's)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatClub",8080000)
    weapon:behaviorVariationId(3210)
    weapon:wepmotionCategory(35)
    weapon:spAtkcategory(169)
    weapon:swordArt(1004)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatClub")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034047</ID>
                          <Description>"Great Wooden Hammer: Wind Wheel WA &amp; Greataxe R1/R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WoodenHammer1",8160000)
    weapon:behaviorVariationId(3813)
    weapon:wepmotionCategory(32)
    weapon:spAtkcategory(248)
    weapon:swordArt(1408)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WoodenHammer1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085178</ID>
                          <Description>"Large Club"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033923</ID>
                              <Description>"Large Club: BK Glaive R2s &amp; Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LargeClub",8060000)
    weapon:behaviorVariationId(2500)
--    LargeC:wepmotionCategory(35)--26/35
    weapon:spAtkcategory(112)--80/213/193
--    LargeC:Qmark(0)
    weapon:swordArt(308)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LargeClub")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033789</ID>
                              <Description>"Large Club: Farron L1,2HR1/2,1HR2 &amp; Quickstep WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LargeClub",8060000)
    weapon:behaviorVariationId(2620)--2040


--    LargeCl:guardmotionCategory(2)


--    LargeCl:wepmotionCategory(26)
    weapon:spAtkcategory(161)


--    LargeCl:wepmotionOneHandId(2)
--    LargeCl:wepmotionBothHandId(2)

    weapon:dualWeaponType(27)--27

    weapon:swordArt(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LargeClub")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034062</ID>
                          <Description>"Ledo's Hammer: Greataxe R1s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LedosHammer1",8320000)
    weapon:wepmotionCategory(32)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LedosHammer1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085179</ID>
                          <Description>"Old King's Greathammer"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033958</ID>
                              <Description>"Old King's Great Hammer: Pickaxe Set &amp; Ember (RKPUGS) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("OldKingsGreatHammer",8190000)
    weapon:behaviorVariationId(2615)
    weapon:wepmotionCategory(253)
    weapon:attackBasePhysics(200)
    weapon:attackBaseFire(10)
    weapon:spAtkcategory(171)--90/57--253
--    OldKings:AnimationList(1)
    weapon:swordArt(410)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("OldKingsGreatHammer")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034079</ID>
                              <Description>"Old King's Great Hammer: Ember WA (FLGS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("OldKingsGreatHammer",8190000)
   weapon:behaviorVariationId(2514)
--   OldKGH:wepmotionCategory(0)
   weapon:spAtkcategory(159)
--   OldKGH:AnimationList(0)
   weapon:swordArt(302)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("OldKingsGreatHammer")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085180</ID>
                          <Description>"Pickaxe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033929</ID>
                              <Description>"Pickaxe: 1H Greataxe &amp; 2H theGS &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pickaxe",8250000)
    weapon:behaviorVariationId(2601)--2610/2602
    weapon:wepmotionCategory(32)--32
    weapon:spAtkcategory(193)--193/128/
--    PickA:AnimationList(1)
    weapon:swordArt(407)--407/406
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pickaxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080086</ID>
                              <Description>"Pickaxe: Greataxe Set &amp; BKGS WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pickaxe",8250000)
    weapon:behaviorVariationId(2602)--2610/2602
    weapon:wepmotionCategory(128)--32
    weapon:spAtkcategory(32)--193/128/
--    PickA:AnimationList(1)
    weapon:swordArt(406)--407/406
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pickaxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033928</ID>
                              <Description>"Pickaxe: GA Moveset &amp; Chain Spin WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pickaxe",8250000)
    weapon:behaviorVariationId(3806)--3806/2608/3001
    weapon:wepmotionCategory(32)--32
    weapon:spAtkcategory(201)--201/139/138
--    PickA:AnimationList(0)
    weapon:swordArt(1401)--1401/2720/3000
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pickaxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034150</ID>
                              <Description>"Pickaxe: GA Set and Quake WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pickaxe",8250000)
    weapon:behaviorVariationId(3511)--3806/2608/3001
    weapon:wepmotionCategory(32)--32
    weapon:spAtkcategory(243)--201/139/138
--    PickA:AnimationList(0)
    weapon:swordArt(1207)--1401/2720/3000
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pickaxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034080</ID>
                              <Description>"Pickaxe: Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pickaxe1",8250000)
    weapon:behaviorVariationId(5000)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pickaxe1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085181</ID>
                          <Description>"Smough's Great Hammer"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034093</ID>
                              <Description>"Smough's Great Hammer: Falling Bolt WA (DSGA) with DSSS BL"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SmoughsGreatHammer1",8270000)
    weapon:behaviorVariationId(3611)--3212,3611
    --SmoughsGH1:wepmotionCategory(32)
    weapon:spAtkcategory(199)
    weapon:swordArt(1003)

    weapon:attackBasePhysics(160)
    weapon:attackBaseThunder(30)
    weapon:correctStrength(50)
    weapon:correctFaith(20)

    weapon:spAttribute(6)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SmoughsGreatHammer1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080087</ID>
                              <Description>"Smough's Great Hammer: Greataxe Moveset &amp; Lightning Charge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SmoughsGreatHammer1",8270000)
    weapon:behaviorVariationId(3603)--3603,3611
    weapon:wepmotionCategory(68)
    weapon:spAtkcategory(32)--35
    weapon:swordArt(1308)

    weapon:attackBasePhysics(100)
    weapon:attackBaseThunder(100)
    weapon:correctStrength(40)
    weapon:correctFaith(30)

    weapon:spAttribute(6)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SmoughsGreatHammer1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048046</ID>
                              <Description>"Smough's Great Hammer: Charge WA and GHamer R1s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SmoughsGH2",8270000)
    weapon:behaviorVariationId(3600)
    weapon:wepmotionCategory(32)
    weapon:swordArt(1300)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SmoughsGH2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085182</ID>
                          <Description>"Vort's Great Hammer"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034100</ID>
                              <Description>"Vort's Great Hammer: Buffable"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("VortsGreatHammer1",8180000)
    weapon:isEnhance(1)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("VortsGreatHammer1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034101</ID>
                              <Description>"Vort's Great Hammer: Charge WA &amp; Astora GS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("VortsGreatHammer2",8180000)
    weapon:behaviorVariationId(2603)
    weapon:spAtkcategory(160)
    weapon:swordArt(402)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("VortsGreatHammer2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033800</ID>
                              <Description>"Vort's Great Hammer: Neck Swipe WA &amp; WKGS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("VortsGreatHammer2",8180000)
    weapon:behaviorVariationId(5000)
    weapon:spAtkcategory(131)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("VortsGreatHammer2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080060</ID>
                      <Description>"Spears"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337033888</ID>
                          <Description>"Arstor's Spear: Ember WA (RKSS)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ArstorsSpear1",9170000)
    weapon:behaviorVariationId(2330)--2330,3670,2603
    weapon:spAtkcategory(251)
    weapon:swordArt(207)

    local RKSS_Atk1 = AtkParam_Pc:new("ArstorsSpear1",2330700)
    RKSS_Atk1:Hit0_Radius(1.8)

    local RKSS_Atk2 = AtkParam_Pc:new("ArstorsSpear1",2330701)
    RKSS_Atk2:Hit0_Radius(1.8)

    local RKSS_Atk3 = AtkParam_Pc:new("ArstorsSpear1",2330710)
    RKSS_Atk3:Hit0_Radius(1.8)

    local RKSS_Atk4 = AtkParam_Pc:new("ArstorsSpear1",2330711)
    RKSS_Atk4:Hit0_Radius(1.8)

    local RKSS_Atk5 = AtkParam_Pc:new("ArstorsSpear1",2330721)
    RKSS_Atk5:Hit0_Radius(1.8)

    local RKSS_Atk6 = AtkParam_Pc:new("ArstorsSpear1",2330730)
    RKSS_Atk6:Hit0_Radius(1.8)

    local RKSS_Atk7 = AtkParam_Pc:new("ArstorsSpear1",2330740)
    RKSS_Atk7:Hit0_Radius(1.8)

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ArstorsSpear1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085172</ID>
                          <Description>"Follower Javeline"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034040</ID>
                              <Description>"Follower Javeline: Knockdown"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local JavBL1 = Bullet:new("FollowersJavelineBL",100092301)
    JavBL1:atkId_Bullet(4240)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowersJavelineBL")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048130</ID>
                              <Description>"Follower Javeline: Rapier 1H Rapier as 2H &amp; Quill Jump WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Javelin",9230000)
    weapon:behaviorVariationId(2711)
    weapon:spAtkcategory(237)
    weapon:wepmotionBothHandId(3)
    weapon:swordArt(605)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Javelin")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034044</ID>
                          <Description>"Golden Ritual Spear: Richard's Lunge (No Press) WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GoldenRitualSpear1",13120000)
    weapon:behaviorVariationId(2702)
    weapon:swordArt(607)--501/607
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GoldenRitualSpear1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337033793</ID>
                          <Description>"Partizan: Corvian GK R2s &amp; Neck Swipe WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Partizan",9030000)
    weapon:behaviorVariationId(5000)
    weapon:spAtkcategory(72)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Partizan")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034085</ID>
                          <Description>"Rotten Ghru Spear: Blind Spot WA &amp; Corvian GK R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RottenGhruSpear1",9120000)
    weapon:behaviorVariationId(2001)
    weapon:spAtkcategory(72)
    weapon:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RottenGhruSpear1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085173</ID>
                          <Description>"Saint Bident"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034086</ID>
                              <Description>"Saint Bident: Morne's Wrath WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SaintsBident3",9180000)
    weapon:behaviorVariationId(3510)
    weapon:spAtkcategory(211)
    weapon:swordArt(1204)

    local Atk = AtkParam_Pc:new("SaintsBident3",3500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SaintsBident3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034087</ID>
                              <Description>"Saint Bident: Sacred Lothric Light WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SaintBident1",9180000)
    weapon:behaviorVariationId(2310)
    weapon:spAtkcategory(188)--188/74/54
    weapon:swordArt(204)

    local Atk = AtkParam_Pc:new("SaintBident1",2300720)
    Atk:Hit0_Radius(2)
    Atk:Hit0_Radius(1)

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SaintBident1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085174</ID>
                          <Description>"Soldering Iron"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033806</ID>
                              <Description>"Soldering Iron: Ember/Unleash Dragon WA (FLGS/TBS) &amp; Profaned R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SolderingIron1",9140000)
    weapon:behaviorVariationId(2514)
    weapon:materialSetId(0)
    weapon:spAtkcategory(162)
    weapon:swordArt(302)

    local Atk = AtkParam_Pc:new("SolderingIron",2500001)
    Atk:AtkPhysCorrection(100)
    Atk:AtkFireCorrection(100)

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SolderingIron1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034133</ID>
                              <Description>"Soldering Iron: Kindled Flurry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SolderingIron",9140000)
    weapon:behaviorVariationId(3504)
--[[    Brander:correctMagic(20)
    weapon:correctFaith(20)
    weapon:attackBasePhysics(70)
    weapon:attackBaseFire(50)]]
    weapon:spAtkcategory(172)
    weapon:swordArt(1202)

    local Atk = AtkParam_Pc:new("SolderingIron",3500001)
    Atk:Hit2_Radius(0.200000003)
    Atk:SpecialEffectId2(6903)
    Atk:AtkPhysCorrection(100)
    Atk:AtkFireCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SolderingIron")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034134</ID>
                              <Description>"Soldering Iron: Lorian's Flame WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("SolderingIron",9140000)
    weapon:behaviorVariationId(2604)
    weapon:spAtkcategory(189)
    weapon:swordArt(404)

    local Atk = AtkParam_Pc:new("SolderingIron",2600001)
    Atk:Hit2_DmyPoly1(0)
    Atk:Hit0_DmyPoly2(0)
    Atk:Hit2_DmyPoly2(0)
    Atk:AtkPhysCorrection(100)
    Atk:AtkFireCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("SolderingIron")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337048118</ID>
                          <Description>"Spear: Richard's Lunge and Press WA &amp; LKSS 1/2HR2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Spear2",9000000)
    weapon:behaviorVariationId(2704)
    weapon:spAtkcategory(54)
    weapon:swordArt(502)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Spear2")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085175</ID>
                          <Description>"Yhorshka's Spear"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034107</ID>
                              <Description>"Yhorshka's Spear: Spinbash WA (Spiked Mace)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("YorshkasSpear1",9190000)
    weapon:behaviorVariationId(3509)--3509/3604
 --   YorshkasS1:spAtkcategory(0)--0/63
    weapon:swordArt(1205)--1205/1311

    local Atk = AtkParam_Pc:new("YorshkasSpear1",3500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("YorshkasSpear1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034108</ID>
                              <Description>"Yorshka's Spear: Wolf Knigh GS R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("YorshkasSpear2",9190000)
    weapon:behaviorVariationId(5000)
    weapon:spAtkcategory(131)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("YorshkasSpear2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080061</ID>
                      <Description>"Pikes"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00C8C8</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085171</ID>
                          <Description>"Greatlance"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033797</ID>
                              <Description>"Greatlance: Lothric UGS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Greatlance",9080000)
    weapon:behaviorVariationId(3608)
    weapon:materialSetId(0)
    weapon:wepmotionCategory(177)
    weapon:spAtkcategory(160)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Greatlance")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080043</ID>
                              <Description>"Greatlance: Shield Splitter WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Greatlance",9080000)
    weapon:behaviorVariationId(3620)
    weapon:materialSetId(0)
    weapon:wepmotionCategory(177)
    weapon:spAtkcategory(200)
    weapon:swordArt(1303)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Greatlance")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080042</ID>
                              <Description>"Greatlance: Halberd Poke R1s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Greatlance",9080000)
    --Lance:behaviorVariationId(2020)
    weapon:materialSetId(0)
    weapon:wepmotionCategory(177)
    weapon:spAtkcategory(108)
    --Lance:swordArt(105)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Greatlance")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085170</ID>
                          <Description>"Lothric Knight Long Spear"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033795</ID>
                              <Description>"Lothric Knight Long Spear: Partizan R2s &amp; Launch /|\ WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightLongSpear",9090000)
    weapon:behaviorVariationId(2500)
--    LongSpear:equipModelId(2211)
    weapon:wepmotionCategory(67)--108
    weapon:spAtkcategory(63)
--    LongSpear:Qmark(0)
    weapon:swordArt(308)

    local Atk = AtkParam_Pc:new("LothricKnightLongSpear",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightLongSpear")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034068</ID>
                              <Description>"Lothric Knight Long Spear: Prying Wedge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightLongSpear2",9090000)
    weapon:behaviorVariationId(2812)
    weapon:spAtkcategory(247)
    weapon:swordArt(607)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightLongSpear2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048054</ID>
                              <Description>"Lothric Knight Long Spear: Onyx Blade R2s and WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKLS3",9090000)
    weapon:behaviorVariationId(2518)
    weapon:wepmotionCategory(67)
    weapon:spAtkcategory(245)
    weapon:wepmotionBothHandId(12)
    weapon:swordArt(311)--308/400--Elfreid's Black Falem WA

    local Atk = AtkParam_Pc:new("LothricKLS3",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKLS3")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034132</ID>
                              <Description>"Lothric Knight Long Spear: Stance of Judgement WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightLongSpear1",9090000)
    weapon:behaviorVariationId(2510)
    weapon:wepmotionCategory(67)
    weapon:spAtkcategory(154)
    weapon:swordArt(304)

    weapon:attackBasePhysics(60)
    weapon:attackBaseMagic(60)
    weapon:correctAgility(40)
    weapon:correctMagic(20)

    weapon:spAttribute(3)

    local Atk = AtkParam_Pc:new("LothricKnightLongSpear1",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightLongSpear1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034069</ID>
                              <Description>"Lothric Knight Long Spear: Warcray WA (GA) &amp; WKGS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricKnightLongSpear3",9090000)
    weapon:behaviorVariationId(3200)
    weapon:spAtkcategory(131)
    weapon:swordArt(1000)

    local Atk = AtkParam_Pc:new("LothricKnightLongSpear3",3200001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricKnightLongSpear3")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085169</ID>
                          <Description>"Lothric War Banner"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337079978</ID>
                              <Description>"Lothric War Banner: Greatlance 1HR1&amp;2HR2, DSSS 1HR2&amp;2HR1 &amp; Steady Chant WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricWB",9250000)
    weapon:wepmotionCategory(177)--38,,63,176,177
    weapon:spAtkcategory(176)
    weapon:swordArt(2200)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricWB")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079981</ID>
                              <Description>"Lothric War Banner: Scythe Set &amp; Original 1HR1 &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("LothricWB",9250000)
    weapon:wepmotionCategory(179)
    --LothricWB:spAtkcategory(63)
    --LothricWB:swordArt(2200)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("LothricWB")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085168</ID>
                          <Description>"Pike"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033796</ID>
                              <Description>"Pike: Claymore R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pike",9200000)
    weapon:spAtkcategory(74)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pike")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034081</ID>
                              <Description>"Pike: Shield Splitter WA (Irithyll Rapier)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pike2",9200000)
    weapon:behaviorVariationId(2710)--2710/3620
    weapon:wepmotionCategory(67)
    weapon:spAtkcategory(187)--187/200
    weapon:swordArt(501)--501/1303
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pike2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034082</ID>
                              <Description>"Pike: Stomp WA (Spin) &amp; Slash R2 Followups"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Pike1",9200000)
    weapon:behaviorVariationId(2516)
    weapon:wepmotionCategory(193)
    --PikeS1:spAtkcategory(193)--221--UGS=95/193
    weapon:swordArt(307)

    local Atk = AtkParam_Pc:new("Pike1",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Pike1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080062</ID>
                      <Description>"Halberds"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00DDDD</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337048051</ID>
                          <Description>"Black Knight Glaive: Glaive Set Stomp Spin WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("BKGlaive",10150000)
    weapon:behaviorVariationId(2516)--2516
    --BKGlaive:wepmotionCategory(221)
    weapon:spAtkcategory(221)--221--UGS=95/193
    weapon:swordArt(307)

    local Atk = AtkParam_Pc:new("BKGlaive",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("BKGlaive")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085162</ID>
                          <Description>"Crescent Axe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033889</ID>
                              <Description>"Crescent Axe: BKS R2s &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrescentAxe",7040000)
    weapon:behaviorVariationId(5000)--2500/2601/2602/2610
--    CrescentA:wepmotionCategory(0)
    weapon:spAtkcategory(80)--80/57/131
--    CrescentA:Qmark(0)
    weapon:swordArt(1500)--400/308
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrescentAxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033916</ID>
                              <Description>"Crescent Axe: CGS 1HR1 &amp; 2HR2 &amp; Wolf Leap WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrescentAxe",7040000)
    weapon:behaviorVariationId(5112)
--    CrescentA:weaponCategory(3)
    weapon:wepmotionCategory(166)
--    CrescentA:spAttribute(1)
    weapon:spAtkcategory(176)--195/51/8/166
--    CrescentA:AnimationList(1)
    weapon:swordArt(704)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrescentAxe")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080023</ID>
                              <Description>"Crescent Axe: Axe 1HR1 &amp; 2HR2 &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrescentAxe",7040000)
    weapon:behaviorVariationId(2800)--5110
--    CrescentA:weaponCategory(3)
    weapon:wepmotionCategory(30)
--    CrescentA:spAttribute(1)
    weapon:spAtkcategory(176)--195/51/8/166
--    CrescentA:AnimationList(1)
    weapon:swordArt(600)--700
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrescentAxe")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085163</ID>
                          <Description>"Glaive"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034043</ID>
                              <Description>"Glaive: Demonic Flare WA (DGA)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Glaive1",10020000)
    weapon:behaviorVariationId(3211)
    weapon:spAtkcategory(168)
    weapon:swordArt(1002)

    local Atk1 = AtkParam_Pc:new("Glaive1",3200001)
    Atk1:AtkPhysCorrection(100)
    --local Atk = AtkParam_Pc:new("BKGlaive",2500001)
    --Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Glaive1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033936</ID>
                              <Description>"Glaive: Partizan R2s &amp; Storm King WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Glaive",10020000)
--    weapon:behaviorId(2515)
--    theGlaive:wepmotionCategory(0)
    weapon:spAtkcategory(63)--154/63
--    theGlaive:AnimationList(1)
    weapon:swordArt(309)

    local Atk1 = AtkParam_Pc:new("Glaive",3200001)
    Atk1:AtkPhysCorrection(100)
    --local Atk = AtkParam_Pc:new("BKGlaive",2500001)
    --Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Glaive")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080039</ID>
                              <Description>"Glaive: Scyth Set &amp; Spin Slash (CCGS) WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Glaive",10020000)
    weapon:behaviorVariationId(5100)
    weapon:wepmotionCategory(51)
    weapon:spAtkcategory(179)--154/63
--    theGlaive:AnimationList(1)
    weapon:swordArt(702)
--    PontiffKGSc1:spAtkcategory(5100)
--    PontiffKGSc1:wepmotionCategory(195)--51-195
--    PontiffKGSc1:behaviorVariationId(3509)
--    PontiffKGSc1:swordArt(702)
    --local Atk1 = AtkParam_Pc:new("Glaive1",3200001)
    --Atk1:AtkPhysCorrection(100)
    --local Atk = AtkParam_Pc:new("BKGlaive",2500001)
    --Atk:AtkPhysCorrection(100)
    local Atk = AtkParam_Pc:new("Gundyrs",5100001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Glaive")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080040</ID>
                          <Description>"Gundyr's Halberd: Full Murakumo Set except Halberd (Poke) R1s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Gundyrs",10100000)
    weapon:behaviorVariationId(5100)
    weapon:wepmotionCategory(195)
    weapon:spAtkcategory(108)--154/63
--    Gundyrs:AnimationList(1)
    weapon:swordArt(702)

    --local Atk1 = AtkParam_Pc:new("Glaive",3200001)
    --Atk1:AtkPhysCorrection(100)
    local Atk = AtkParam_Pc:new("Gundyrs",5100001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Gundyrs")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085164</ID>
                          <Description>"Halberd"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337048048</ID>
                              <Description>"Halberd: Glaive R1s, DSSp R2s &amp; Knockdown Charged 2HR2 &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Halberd1",10030000)
    weapon:behaviorVariationId(2603)--5000
    weapon:spAtkcategory(260)--68
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Halberd1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079983</ID>
                              <Description>"Halberd: Scythe R2s &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Halberd1",10030000)
    weapon:behaviorVariationId(5100)
    weapon:wepmotionCategory(180)
    weapon:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Halberd1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079970</ID>
                              <Description>"Halberd: RKS Set &amp; Glaive 2HR1 &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Halberd1",10030000)
    weapon:behaviorVariationId(5000)
    weapon:wepmotionCategory(38)
    weapon:spAtkcategory(252)
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Halberd1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034056</ID>
                          <Description>"Immolation Tinder: Cast Pyromancies"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ImmolationTinder1",10160000)
    weapon:enableMagic(0)
    weapon:enablePyromancy(1)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ImmolationTinder1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085165</ID>
                          <Description>"Lucerne"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033942</ID>
                              <Description>"Lucerne: Banner 1HR1 &amp; Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Lucerne1",10010000)
    weapon:behaviorVariationId(5000)
    weapon:spAtkcategory(260)--252
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Lucerne1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080092</ID>
                              <Description>"Lucerne: Lance 1HR1 &amp; 2HR2 &amp; Glaive 1HR2 &amp; 2HR1 &amp; Knockdown Neck Swipe WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Lucerne1",10010000)
    weapon:behaviorVariationId(2603)
    weapon:wepmotionCategory(177)
    weapon:spAtkcategory(176)--252
    weapon:swordArt(1500)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Lucerne1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034070</ID>
                              <Description>"Lucerne: Shield Splitter WA (Rapier) with Knockdown WA &amp; charged 2HR2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Lucerne1",10010000)
    weapon:behaviorVariationId(2603)--2710
    weapon:spAtkcategory(187)
    weapon:swordArt(501)

    --local Atk = AtkParam_Pc:new("WEAPON",2500001)
    --Atk:AtkPhysCorrection(100)
    --local Atk1 = AtkParam_Pc:new("WEAPON",3200001)
    --Atk1:AtkPhysCorrection(100)
    --local Atk = AtkParam_Pc:new("WEAPON",5100001)
    --Atk:AtkPhysCorrection(100)
    local Atk = AtkParam_Pc:new("WEAPON",2600001)
    Atk:AtkPhysCorrection(100)

end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Lucerne1")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085166</ID>
                          <Description>"Red Hilted Halberd"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033938</ID>
                              <Description>"Red Hilted Halberd: Gael's R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RedHiltedHalberd",10140000)
    weapon:behaviorVariationId(2519)--2613/2614
--    RedHilt:wepmotionCategory(0)
    weapon:spAtkcategory(7)--202/95/7
    weapon:AnimationList(1)
    weapon:swordArt(312)--400/405

    local Atk = AtkParam_Pc:new("RedHiltedHalberd",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RedHiltedHalberd")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033937</ID>
                              <Description>"Red Hilted Halberd: Storm Ruler WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RedHiltedHalberd2",10140000)
    weapon:behaviorVariationId(2515)--2613/2614
--    RedHilt2:wepmotionCategory(0)
    weapon:spAtkcategory(260)--202/95/7
--    RedHilt2:AnimationList(1)
    weapon:swordArt(309)--400/405

    local Atk = AtkParam_Pc:new("RedHiltedHalberd2",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RedHiltedHalberd2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080091</ID>
                              <Description>"Red Hilted Halberd: WKGS R2s &amp; Warcry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RedHiltedHalberd2",10140000)
    weapon:behaviorVariationId(3200)--2613/2614
--    RedHilt2:wepmotionCategory(0)
    weapon:spAtkcategory(131)--202/95/7
--    RedHilt2:AnimationList(1)
    weapon:swordArt(1000)--400/405

    local Atk = AtkParam_Pc:new("RedHiltedHalberd2",2500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RedHiltedHalberd2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033799</ID>
                              <Description>"Red Hilted Halberd: Banner 1HR1 &amp; Charge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("RedHiltedHalberd",10140000)
    weapon:behaviorVariationId(2603)--2613/2614
--    RedHilt:wepmotionCategory(0)
    weapon:spAtkcategory(260)--131/252
--    RedHilt:AnimationList(1)
    weapon:swordArt(402)--400/405
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("RedHiltedHalberd")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085167</ID>
                          <Description>"Winged Knight Halberd"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034106</ID>
                              <Description>"Winged Knight Halberd: Smough's R2s &amp; Launch WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WingedKnightHalberd1",10090000)
    weapon:behaviorVariationId(2500)
    weapon:spAtkcategory(70)--69,70
    weapon:wepmotionOneHandId(2)
    weapon:wepmotionBothHandId(12)
    weapon:swordArt(400)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WingedKnightHalberd1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048052</ID>
                              <Description>"Winged Knight Halberd: GA 1HR1 &amp; 2HR2 &amp; Warcry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WingedKH2",10090000)
    weapon:behaviorVariationId(3200)
    --32 35 171
    weapon:wepmotionCategory(32)
    --WingedKH2:wepmotionCategory(35)
    weapon:spAtkcategory(176)
    weapon:wepmotionOneHandId(2)
    weapon:wepmotionBothHandId(12)
    weapon:swordArt(1000)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WingedKH2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048053</ID>
                              <Description>"Winged Knight Halberd: Halberd 1HR1, theGS Set &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WingedKH2",10090000)
    weapon:behaviorVariationId(2601)
    --32 35 171
    --WingedKH2:wepmotionCategory(32)
    --WingedKH2:wepmotionCategory(35)
    weapon:spAtkcategory(193)
    weapon:wepmotionOneHandId(2)
    weapon:wepmotionBothHandId(12)
    weapon:swordArt(405)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WingedKH2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337033935</ID>
                              <Description>"Winged Knight Halberd: Ledo's R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("WingedKnightHalberd",10090000)
    weapon:behaviorVariationId(3512)
--    WingedHal:wepmotionCategory(0)
    weapon:spAtkcategory(3)--3/63
    weapon:AnimationList(1)
    weapon:swordArt(1208)

    local Atk = AtkParam_Pc:new("WingedKnightHalberd",3500001)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("WingedKnightHalberd")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080063</ID>
                      <Description>"Reapers"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00DDDD</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085158</ID>
                          <Description>"Great Corvian Scythe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337079985</ID>
                              <Description>"Great Corvian Scythe:  Black Knight Sword 2HR2"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    --GreatCorvScy:behaviorVariationId(3814)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(80)
    --GreatCorvScy:swordArt(1409)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079987</ID>
                              <Description>"Great Corvian Scythe: Spin Slash WA (CCS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(2800)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(0)
    weapon:swordArt(600)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079989</ID>
                              <Description>"Great Corvian Scythe: Prying Wedge WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(2812)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(247)
    weapon:swordArt(607)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079990</ID>
                              <Description>"Great Corvian Scythe: Bloodlust WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(2903)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(198)
    weapon:swordArt(801)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079991</ID>
                              <Description>"Great Corvian Scythe: Demonic Flare WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(3211)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(168)
    weapon:swordArt(1002)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079992</ID>
                              <Description>"Great Corvian Scythe: Chain Spin WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(3806)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(201)
    weapon:swordArt(1401)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079994</ID>
                              <Description>"Great Corvian Scythe: Black Blade R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    --GreatCorvScy:behaviorVariationId(3608)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(90)
    --GreatCorvScy:swordArt(1401)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079997</ID>
                              <Description>"Great Corvian Scythe: Yohshka's Spear R2s &amp; WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(2391)
    weapon:wepmotionCategory(180)--197,180
    weapon:spAtkcategory(197)
    weapon:swordArt(1302)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080005</ID>
                              <Description>"Great Corvian Scythe: Carthus CGS WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(5100)
    weapon:wepmotionCategory(51)
    --GreatCorvScy:spAtkcategory(176)
    weapon:swordArt(702)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085159</ID>
                          <Description>"Great Scythe"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337033792</ID>
                              <Description>"Great Scythe: Friede 2HR1"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatSc1",10000000)
    --GreatSc1:behaviorVariationId(5110)
    weapon:wepmotionCategory(28)
    weapon:spAtkcategory(232)
--    GreatSc1:Qmark(0)
    --GreatSc1:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatSc1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048045</ID>
                              <Description>"Great Scythe: Windmill WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatSc2",10000000)
    weapon:behaviorVariationId(3813)
    --GreatSc2:wepmotionCategory(32)

    weapon:wepmotionCategory(50)--26
    --GreatSc2:wepmotionCategory(29)
    --GreatSc2:wepmotionCategory(35)

    weapon:spAtkcategory(248)
    --GreatSc2:wepmotionCategory(28)
    --GreatSc2:spAtkcategory(232)
    weapon:swordArt(1408)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatSc2")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079993</ID>
                              <Description>"Great Scythe: Crescent Blade WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatScy",10000000)
    weapon:behaviorVariationId(2810)
    weapon:wepmotionCategory(180)
    weapon:correctAgility(20)
    weapon:correctMagic(50)
    weapon:spAttribute(3)
    weapon:attackBasePhysics(20)
    weapon:attackBaseMagic(105)
    weapon:spAtkcategory(165)
    weapon:swordArt(601)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079999</ID>
                              <Description>"Great Scythe: MLGS R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatScy",10000000)
    weapon:behaviorVariationId(2513)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(158)
    --GreatScy:swordArt(601)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337079988</ID>
                              <Description>"Great Scythe: Stomp Spin WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatScy",10000000)
    weapon:behaviorVariationId(2516)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(221)
    weapon:swordArt(307)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080001</ID>
                              <Description>"Great Scythe: DSSP 1HR2 &amp; 2HR1 &amp; Warcry WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatScy",10000000)
    weapon:behaviorVariationId(3811)
    weapon:wepmotionCategory(180)
    weapon:spAtkcategory(176)
    weapon:swordArt(1405)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatScy")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080041</ID>
                              <Description>"Great Scythe: Wolf Leap WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GScythe",10000000)
    weapon:spAtkcategory(5111)
    weapon:wepmotionCategory(166)--51-195
    weapon:behaviorVariationId(3509)
    weapon:spAtkcategory(50)--50,179,180,232
    weapon:swordArt(701)

    local Atk = AtkParam_Pc:new("GScythe",3500001)
    Atk:AtkPhysCorrection(100)
    local Atk = AtkParam_Pc:new("GScythe",3500301)
    Atk:AtkPhysCorrection(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GScythe")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034083</ID>
                          <Description>"Pontiff Knight Great Scythe: Spin Slash (Mumu) WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("PontiffKnightGreatScythe1",10070000)
    weapon:behaviorVariationId(5110)--3509
    weapon:wepmotionCategory(195)--51-195
    --PontiffKGSc1:spAtkcategory(5100)
    weapon:swordArt(700)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("PontiffKnightGreatScythe1")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080064</ID>
                      <Description>"Whips"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00DDDD</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085161</ID>
                          <Description>"Notched Whip"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080096</ID>
                              <Description>"Notched Whip: Quickstep WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Notched",12050000)
    --Notched:behaviorVariationId(2711)
    weapon:swordArt(100)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Notched")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080098</ID>
                              <Description>"Notched Whip: Bloodlust WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Notched",12050000)
    --Notched:behaviorVariationId(2903)
    weapon:spAtkcategory(198)
    weapon:swordArt(801)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Notched")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085160</ID>
                          <Description>"Whip"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337080094</ID>
                              <Description>"Whip: Perseverance WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Whip",12000000)
    --Whip:behaviorVariationId(4200)
    --Whip:spAtckcategory(152)
    weapon:swordArt(1703)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Whip")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080100</ID>
                              <Description>"Whip: Frost WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Whip",12000000)
    weapon:behaviorVariationId(5010)
    weapon:wepmotionCategory(179)
    weapon:spAtkcategory(43)
    weapon:swordArt(1502)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Whip")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080095</ID>
                          <Description>"Witch's Locks: Punitive Flame WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Locks",12040000)
    weapon:behaviorVariationId(3810)
    weapon:wepmotionCategory(217)
    weapon:spAtkcategory(43)
    weapon:swordArt(1404)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Locks")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080065</ID>
                      <Description>"Fists"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00DDDD</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337034016</ID>
                          <Description>"Claws: Quill Dart WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Claws1",11000000)
    weapon:behaviorVariationId(2711)
    weapon:swordArt(503)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Claws1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034038</ID>
                          <Description>"Fist: Ember WA (RKSS) &amp; Shield Moveset"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Fists",110000)
    weapon:behaviorVariationId(2330)--2330/4706
--    Fist:equipModelId(2031)
    weapon:wepmotionCategory(48)--42/48
    weapon:spAtkcategory(251)--251/250
    weapon:wepmotionBothHandId(0)
    weapon:bothHandEquipable(1)
--    Fist:enablePyromancy(1)
    weapon:dualWeaponType(27)--252645144/
    weapon:swordArt(207)--207/3330'

    local RKSS_Atk1 = AtkParam_Pc:new("Fists",2330700)
    RKSS_Atk1:Hit0_Radius(1.8)
    local RKSS_Atk2 = AtkParam_Pc:new("Fists",2330701)
    RKSS_Atk2:Hit0_Radius(1.8)
    local RKSS_Atk3 = AtkParam_Pc:new("Fists",2330710)
    RKSS_Atk3:Hit0_Radius(1.8)
    local RKSS_Atk4 = AtkParam_Pc:new("Fists",2330711)
    RKSS_Atk4:Hit0_Radius(1.8)
    local RKSS_Atk5 = AtkParam_Pc:new("Fists",2330721)
    RKSS_Atk5:Hit0_Radius(1.8)
    local RKSS_Atk6 = AtkParam_Pc:new("Fists",2330730)
    RKSS_Atk6:Hit0_Radius(1.8)
    local RKSS_Atk7 = AtkParam_Pc:new("Fists",2330740)
    RKSS_Atk7:Hit0_Radius(1.8)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Fists")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085157</ID>
                          <Description>"Manakin Claws"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034073</ID>
                              <Description>"Manakin Claws: Twindagger R1/L1s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MankinClaws1",11020000)
    weapon:behaviorVariationId(2090)
    weapon:spAtkcategory(141)
    --MankinC1:swordArt(101)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MankinClaws1")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034074</ID>
                              <Description>"Manakin Claws: Weapon Art WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("MankinClaws2",11020000)
    weapon:swordArt(60)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("MankinClaws2")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080066</ID>
                      <Description>"Torches"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>00DDDD</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337085154</ID>
                          <Description>"Follower Torch"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034121</ID>
                              <Description>"Follower Torch: Demonic Flare WA &amp; Hammer R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FollowerTorch",23010000)
   weapon:behaviorVariationId(3211)
--   Followed:wepmotionCategory(0)
   weapon:spAtkcategory(168)
--   Followed:AnimationList(0)
   weapon:swordArt(1002)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerTorch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080090</ID>
                              <Description>"Follower Torch: Mace Set &amp; Punitive Flame WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FollowerTorch",23010000)
   weapon:behaviorVariationId(3810)
   weapon:wepmotionCategory(217)
   weapon:spAtkcategory(33)--49
--   Followed:AnimationList(0)
   weapon:swordArt(1404)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerTorch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034120</ID>
                              <Description>"Follower Torch: Kindled Flurry WA &amp; Hammer R2s"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FollowerTorch",23010000)
   weapon:behaviorVariationId(3504)
--   Followed:wepmotionCategory(0)
   weapon:spAtkcategory(172)
--   Followed:AnimationList(0)
   weapon:swordArt(1202)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerTorch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034119</ID>
                              <Description>"Follower Torch: Heavy Poke 2HR2 &amp; Flame of Lorian WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("FollowerTorch",23010000)
   weapon:behaviorVariationId(2604)
   --Torched:wepmotionCategory(0)
   weapon:spAtkcategory(189)--102
--   Torched:AnimationList(0)
   weapon:swordArt(404)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("FollowerTorch")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337085153</ID>
                          <Description>"Torch"</Description>
                          <Options moHideChildren="1"/>
                          <LastState/>
                          <Color>808000</Color>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if syntaxcheck then return end
OnlyOneChildActive(memrec)
{$asm}


[DISABLE]
{$lua}
if syntaxcheck then return end
</AssemblerScript>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>1337034118</ID>
                              <Description>"Torch: Ember WA (FLGS)"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Torch",23000000)
   weapon:behaviorVariationId(2514)
--   Torched:wepmotionCategory(0)
   weapon:spAtkcategory(159)--102
--   Torched:AnimationList(0)
   weapon:swordArt(302)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Torch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034116</ID>
                              <Description>"Torch: Little Axe R1s &amp; Spin Slash WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Torch",23000000)
   weapon:behaviorVariationId(2800)
--   Torched:wepmotionCategory(0)
   weapon:spAtkcategory(102)--102
--   Torched:AnimationList(0)
   weapon:swordArt(600)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Torch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337034117</ID>
                              <Description>"Torch: Parry"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Torch",23000000)
   weapon:behaviorVariationId(2000)
--   Torched:wepmotionCategory(0)
   weapon:spAtkcategory(71)--102
--   Torched:AnimationList(0)
   weapon:swordArt(90)

--   Wep:constVisFX_ID1(0)--   Wep:constVisFX_ID3(0)
--   Wep:constVisFX_ID2(0)--   Wep:constVisFX_ID4(0)
--   Wep:constVisFX_emitType1(0)--   Wep:constVisFX_emitType3(0)
--   Wep:constVisFX_emitType2(0)--   Wep:constVisFX_emitType4(0)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Torch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337048128</ID>
                              <Description>"Torch: 2H Rapier &amp; Quill Jump WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Torch",23000000)
   weapon:behaviorVariationId(2711)
   weapon:spAtkcategory(237)
   weapon:wepmotionBothHandId(15)
   weapon:swordArt(605)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Torch")
end
</AssemblerScript>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>1337080089</ID>
                              <Description>"Torch: WA WA"</Description>
                              <LastState/>
                              <VariableType>Auto Assembler Script</VariableType>
                              <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
   local weapon = EquipParamWeapon:new("Torch",23000000)
   --Torched:behaviorVariationId(2711)
   --Torched:spAtkcategory(237)
   --Torched:wepmotionBothHandId(15)
   weapon:swordArt(60)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Torch")
end
</AssemblerScript>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>1337080085</ID>
                      <Description>"Broke"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>0080FF</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>1337080084</ID>
                          <Description>"Chaos Blade: Wheel of Fate WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("ChaosBlade",5020000)
    weapon:behaviorVariationId(3000)
--    ChaosBl:wepmotionCategory(0)
    weapon:spAtkcategory(126)--90/57
--    ChaosBl:AnimationList(0)
    weapon:swordArt(3320)
    --messageDialog(tostring(self.id), mtInformation, mbOK)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("ChaosBlade")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034102</ID>
                          <Description>"Warpick: Feasting Branch WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("Warpick1",8240000)
    weapon:behaviorVariationId(4108)
--    WarP1:wepmotionCategory(41)
    weapon:spAtkcategory(9)
    weapon:AnimationList(1)
    weapon:swordArt(2205)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("Warpick1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034025</ID>
                          <Description>"Dragon Tooth: Dragon Roar WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("DragonTooth1",8260000)
    weapon:behaviorVariationId(4707)
    weapon:spAtkcategory(255)
    weapon:swordArt(3321)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("DragonTooth1")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080022</ID>
                          <Description>"Gargoyle Flame Spear: Fire Line Charge WA"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GargoyleFS",9110000)
    weapon:behaviorVariationId(2514)
    weapon:spAtkcategory(68)
    weapon:swordArt(1308)

    --local GargoyleFSX = SpEffectVfxParam:new("GargoyleFSX",1397261292)
    --GargoyleFSX:midstSfxID(441035)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GargoyleFS")
paramUtils:restore("GargoyleFSX")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337080093</ID>
                          <Description>"Great Corvian Scythe: Spinarooski WA (no hitboxes)"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("GreatCorvScy",10080000)
    weapon:behaviorVariationId(2391)
    weapon:wepmotionCategory(197)--197,180
    --GreatCorvScy:spAtkcategory(197)
    weapon:swordArt(1302)
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("GreatCorvScy")
end
</AssemblerScript>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>1337034020</ID>
                          <Description>"--ugo--Crescent Moon Sword: Moonlight Vortex WA &amp; MLGS R2s"</Description>
                          <LastState/>
                          <VariableType>Auto Assembler Script</VariableType>
                          <AssemblerScript>[ENABLE]
{$lua}
if not syntaxcheck then
    local weapon = EquipParamWeapon:new("CrescentMoonSword1",4100000)
    weapon:behaviorVariationId(2510)--2513,5305
    weapon:spAtkcategory(154)
    weapon:swordArt(304)--303,608
end

{$asm}
[DISABLE]
{$lua}
if not syntaxcheck then
paramUtils:restore("CrescentMoonSword1")
end
</AssemblerScript>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
